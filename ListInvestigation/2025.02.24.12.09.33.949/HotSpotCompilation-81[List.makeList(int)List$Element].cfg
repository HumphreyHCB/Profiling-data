begin_compilation
  name " HotSpotCompilation-81[List.makeList(int)]"
  method "HotSpotCompilation-81[List.makeList(int)]"
  date 1740398975894
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid j473 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 v495 v917 v665 v581 v749 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: meta{HotSpotType<LList$Element;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140232611594240 shift: 0)
stampKind: Klass*(compressed base: 140232611594240 shift: 0)
value: meta{HotSpotType<LList$Element;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v493 v579 v663 v747 v831 v915 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: meta{HotSpotType<LList$Element;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<LList$Element;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a468 a726 a558 a894 a642 a810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j463 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j464 j554 j638 j722 j806 j890 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 v538 v580 v622 v664 v706 v748 v790 v832 v874 v916 v958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140232611594240 shift: 0)
stampKind: Klass*(compressed base: 140232611594240 shift: 0)
value: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 v621 v705 v789 v873 v957 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j472 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v489 v534 v576 v618 v660 v702 v744 v786 v828 v870 v912 v954 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: meta{HotSpotType<Ljava/lang/Integer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Integer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a516 a769 a601 a937 a685 a853 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j212 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j933 j681 j849 j512 j765 j597 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a199 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: Instance<java.lang.Integer[]>
stableDimension: 1
stamp: a!# java.lang.Integer[]
stampKind: a java.lang.Object
value: Object[Instance<java.lang.Integer[]>]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1002 v1006 v1010 v1014 v1018 v1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 256
stableDimension: 0
stamp: i32 [256]
stampKind: i32
value: int[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 v250 v289 v328 v367 v406 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid a147 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<List$Element.val Object:12>, HotSpotResolvedJavaFieldImpl<List$Element.next List$Element:16>]
hasIdentity: true
nodeSourcePosition: at List.makeList(int) [bci: 6]
objectId: 11
stamp: a!# List$Element
type: HotSpotType<LList$Element;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?130 ?130 ?164 ?22 ?22 ?426 ?426 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?130 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a147 - - a147 
=== Succesors ===
=== Usages ===
?115 ?39 ?387 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a147 - - a147  <|@  <|@
tid a149 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<List$Element.val Object:12>, HotSpotResolvedJavaFieldImpl<List$Element.next List$Element:16>]
hasIdentity: true
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
objectId: 9
stamp: a!# List$Element
type: HotSpotType<LList$Element;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?115 ?115 ?163 ?39 ?39 ?387 ?387 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?130 
values: a149 - - a149 
=== Succesors ===
=== Usages ===
?108 ?52 ?348 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?130 values: a149 - - a149  <|@  <|@
tid a151 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<List$Element.val Object:12>, HotSpotResolvedJavaFieldImpl<List$Element.next List$Element:16>]
hasIdentity: true
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: 7
stamp: a!# List$Element
type: HotSpotType<LList$Element;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?108 ?108 ?162 ?52 ?52 ?348 ?348 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?115 
values: a151 - - a151 
=== Succesors ===
=== Usages ===
?101 ?64 ?309 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?115 values: a151 - - a151  <|@  <|@
tid a153 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<List$Element.val Object:12>, HotSpotResolvedJavaFieldImpl<List$Element.next List$Element:16>]
hasIdentity: true
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: 5
stamp: a!# List$Element
type: HotSpotType<LList$Element;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?101 ?101 ?161 ?64 ?64 ?309 ?309 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?108 
values: a153 - - a153 
=== Succesors ===
=== Usages ===
?94 ?76 ?270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?108 values: a153 - - a153  <|@  <|@
tid a155 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<List$Element.val Object:12>, HotSpotResolvedJavaFieldImpl<List$Element.next List$Element:16>]
hasIdentity: true
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: 3
stamp: a!# List$Element
type: HotSpotType<LList$Element;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?94 ?94 ?160 ?76 ?76 ?270 ?270 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid a156 <|@
d <@d|@=== Debug Properties ===
boxingKind: int
fields: [HotSpotResolvedJavaFieldImpl<java.lang.Integer.value int:12>]
hasIdentity: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: -1
stamp: a!# java.lang.Integer
type: HotSpotType<Ljava/lang/Integer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?160 ?166 
=== Predecessor ===
- >@ <|@
instruction <@VirtualBoxing|@jdk.graal.compiler.nodes.virtual.VirtualBoxingNode>@  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a155 
values: a156 - 
=== Succesors ===
=== Usages ===
?90 ?76 ?231 ?270 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a155 values: a156 -  <|@  <|@
tid a154 <|@
d <@d|@=== Debug Properties ===
boxingKind: int
fields: [HotSpotResolvedJavaFieldImpl<java.lang.Integer.value int:12>]
hasIdentity: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: -1
stamp: a!# java.lang.Integer
type: HotSpotType<Ljava/lang/Integer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?161 ?167 
=== Predecessor ===
- >@ <|@
instruction <@VirtualBoxing|@jdk.graal.compiler.nodes.virtual.VirtualBoxingNode>@  <|@  <|@
tid ?161 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a153 
values: a154 - 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?231 ?270 ?309 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a153 values: a154 -  <|@  <|@
tid a152 <|@
d <@d|@=== Debug Properties ===
boxingKind: int
fields: [HotSpotResolvedJavaFieldImpl<java.lang.Integer.value int:12>]
hasIdentity: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: -1
stamp: a!# java.lang.Integer
type: HotSpotType<Ljava/lang/Integer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?162 ?168 
=== Predecessor ===
- >@ <|@
instruction <@VirtualBoxing|@jdk.graal.compiler.nodes.virtual.VirtualBoxingNode>@  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a151 
values: a152 - 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?52 ?231 ?270 ?309 ?348 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a151 values: a152 -  <|@  <|@
tid a150 <|@
d <@d|@=== Debug Properties ===
boxingKind: int
fields: [HotSpotResolvedJavaFieldImpl<java.lang.Integer.value int:12>]
hasIdentity: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
objectId: -1
stamp: a!# java.lang.Integer
type: HotSpotType<Ljava/lang/Integer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?163 ?169 
=== Predecessor ===
- >@ <|@
instruction <@VirtualBoxing|@jdk.graal.compiler.nodes.virtual.VirtualBoxingNode>@  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a149 
values: a150 - 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?52 ?39 ?231 ?270 ?309 ?348 ?387 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a149 values: a150 -  <|@  <|@
tid a148 <|@
d <@d|@=== Debug Properties ===
boxingKind: int
fields: [HotSpotResolvedJavaFieldImpl<java.lang.Integer.value int:12>]
hasIdentity: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
objectId: -1
stamp: a!# java.lang.Integer
type: HotSpotType<Ljava/lang/Integer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?164 ?170 
=== Predecessor ===
- >@ <|@
instruction <@VirtualBoxing|@jdk.graal.compiler.nodes.virtual.VirtualBoxingNode>@  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a147 
values: a148 - 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?52 ?39 ?22 ?231 ?270 ?309 ?348 ?387 ?426 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a147 values: a148 -  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i445 v189 ?170 i19 v420 i146 i136 i140 i138 i142 i399 i437 i439 i441 i443 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i114 
=== Succesors ===
=== Usages ===
?166 v264 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i114  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a156 
values: i140 
=== Succesors ===
=== Usages ===
?90 ?76 ?231 ?270 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a156 values: i140  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: -3
stableDimension: 0
stamp: i32 [-3]
stampKind: i32
value: int[-3|0xfffffffffffffffd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i107 
=== Succesors ===
=== Usages ===
?167 v303 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i107  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a154 
values: i138 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?231 ?270 ?309 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a154 values: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i100 
=== Succesors ===
=== Usages ===
?168 v342 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i100  <|@  <|@
tid ?168 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a152 
values: i136 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?52 ?231 ?270 ?309 ?348 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a152 values: i136  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 22]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 22]
stamp: i32
=== Inputs ===
x: i2 
y: i18 
=== Succesors ===
=== Usages ===
?169 v381 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i18  <|@  <|@
tid ?169 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a150 
values: i19 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?52 ?39 ?231 ?270 ?309 ?348 ?387 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a150 values: i19  <|@  <|@
tid ?170 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a148 
values: i2 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?52 ?39 ?22 ?231 ?270 ?309 ?348 ?387 ?426 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a148 values: i2  <|@  <|@
f <@~|@floating>@ <|@
tid a9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 a118 a97 a104 a111 a133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
areKeysContiguous: true
keySuccessors: [I@3adac319
keys: [I@29237543
nodeSourcePosition: at List.makeList(int) [bci: 1]
profileData: PROFILED keyProbabilities: [0.08828124999999998, 0.08048767089843749, 0.0733821187019348, 0.06690385353527963, 0.06099749771536822, 0.055612562370183374, 0.5743350467787965]
stamp: void
=== Inputs ===
value: i2 
=== Succesors ===
successors: v7 v30 v45 v57 v69 v81 v80 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@IntegerSwitch|@jdk.graal.compiler.nodes.extended.IntegerSwitchNode>@ value: i2 #successors: v7 v30 v45 v57 v69 v81 v80  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v10  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 5]
stamp: void
=== Inputs ===
memoryMap: - 
result: a9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v45 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v57 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a89 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a89  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# List
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: -6
stableDimension: 0
stamp: i32 [-6]
stampKind: i32
value: int[-6|0xfffffffffffffffa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i145 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i145  <|@  <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<List.makeList(int)>
=== Inputs ===
arguments: a1 i146 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i146  <|@  <|@
tid ?94 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?101 
values: a155 - - a155 
=== Succesors ===
=== Usages ===
?90 ?231 ?447 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?101 values: a155 - - a155  <|@  <|@
tid a157 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<List$Element.val Object:12>, HotSpotResolvedJavaFieldImpl<List$Element.next List$Element:16>]
hasIdentity: true
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: 1
stamp: a!# List$Element
type: HotSpotType<LList$Element;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?90 ?90 ?159 ?231 ?231 ?447 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid a158 <|@
d <@d|@=== Debug Properties ===
boxingKind: int
fields: [HotSpotResolvedJavaFieldImpl<java.lang.Integer.value int:12>]
hasIdentity: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: -1
stamp: a!# java.lang.Integer
type: HotSpotType<Ljava/lang/Integer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?159 ?165 
=== Predecessor ===
- >@ <|@
instruction <@VirtualBoxing|@jdk.graal.compiler.nodes.virtual.VirtualBoxingNode>@  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a157 
values: a158 - 
=== Succesors ===
=== Usages ===
?90 ?231 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a157 values: a158 -  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: -5
stableDimension: 0
stamp: i32 [-5]
stampKind: i32
value: int[-5|0xfffffffffffffffb]
=== Inputs ===
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i128 
=== Succesors ===
=== Usages ===
?165 v225 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i128  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a158 
values: i142 
=== Succesors ===
=== Usages ===
?90 ?231 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a158 values: i142  <|@  <|@
tid ?447 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?94 
values: a157 - - a157 
virtualObjectMappings: ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?94 values: a157 - - a157 virtualObjectMappings: ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
bci: 23
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.makeList
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v190 
stateDuring: ?447 
=== Succesors ===
next: v228 
=== Usages ===
?90 a237 ?231 
=== Predecessor ===
v80 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v190 stateDuring: ?447 #next: v228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
a89 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid i436 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 123
stableDimension: 0
stamp: i32 [123]
stampKind: i32
value: int[123|0x7b]
=== Inputs ===
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i436 
=== Succesors ===
=== Usages ===
v208 j216 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i436  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i437 
y: i207 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i437 y: i207  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v208 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v208 #trueSuccessor: v198 #falseSuccessor: v197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a972 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a972  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i437 
=== Succesors ===
=== Usages ===
v1002 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i437  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a199 
index: j216 
=== Succesors ===
=== Usages ===
a972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: j216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a972 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1002 
lastLocationAccess: - 
=== Succesors ===
next: v201 
=== Usages ===
a215 
=== Predecessor ===
v198 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1002 lastLocationAccess: - #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid a215 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a972 
=== Succesors ===
=== Usages ===
a204 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a972  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
a972 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j508 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j508 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j531 
=== Usages ===
v1033 v1034 
=== Predecessor ===
v548 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j531  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: - 
=== Succesors ===
=== Usages ===
j531 v533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j531 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1033 
lastLocationAccess: - 
=== Succesors ===
next: j532 
=== Usages ===
j512 v1035 v1036 a522 v1037 v1038 
=== Predecessor ===
j508 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1033 lastLocationAccess: - #next: j532  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: - 
=== Succesors ===
=== Usages ===
j532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j532 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1034 
lastLocationAccess: - 
=== Succesors ===
next: v511 
=== Usages ===
v513 
=== Predecessor ===
j531 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1034 lastLocationAccess: - #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j531 
y: j212 
=== Succesors ===
=== Usages ===
v513 v533 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j531 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j532 
y: j512 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j532 y: j512  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v513 
=== Succesors ===
trueSuccessor: v514 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
j532 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v513 #trueSuccessor: v514 #falseSuccessor: v515  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a516 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a516  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?94 
values: a157 a89 - - a157 
virtualObjectMappings: ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v981 a516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?94 values: a157 a89 - - a157 virtualObjectMappings: ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a516 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?90 
arguments: v507 
=== Succesors ===
next: v981 
=== Usages ===
v981 a529 
=== Predecessor ===
v514 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?90 arguments: v507 #next: v981  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-139377|0xfffffffffffddf8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?90 
object: a516 
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
a516 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?90 object: a516 #next: v518  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v981 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1033 
lastLocationAccess: - 
value: j512 
stateAfter: - 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1033 lastLocationAccess: - value: j512 stateAfter: - #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j531 
index: - 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j531 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1037 
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1037 #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j531 
index: - 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j531 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1035 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1035 lastLocationAccess: - value: j472 stateAfter: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j531 
index: - 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j531 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1038 lastLocationAccess: - value: v971 stateAfter: - #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j531 
index: - 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j531 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1036 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: a522 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1036 lastLocationAccess: - value: i461 stateAfter: - #next: a522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j531 
=== Succesors ===
next: v523 
=== Usages ===
a529 
=== Predecessor ===
v538 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j531 #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
a522 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v519 
values: a516 a522 
=== Succesors ===
=== Usages ===
v1003 a226 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v519 values: a516 a522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v518 v523 
=== Succesors ===
next: v225 
=== Usages ===
a529 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v518 v523 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a529 
index: - 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a529 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
lastLocationAccess: - 
value: i142 
stateAfter: - 
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1003 lastLocationAccess: - value: i142 stateAfter: - #next: v227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a226 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a529 
=== Succesors ===
next: v203 
=== Usages ===
a204 
=== Predecessor ===
v227 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a529 #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
a226 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v202 
values: a215 a226 
=== Succesors ===
=== Usages ===
a234 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v202 values: a215 a226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v201 v203 
=== Succesors ===
next: v505 
=== Usages ===
a204 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v201 v203 #next: v505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j456 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j486 
=== Usages ===
v1026 v1027 
=== Predecessor ===
v505 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j486  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j456 
index: - 
=== Succesors ===
=== Usages ===
j486 v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j456 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j486 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
lastLocationAccess: - 
=== Succesors ===
next: j487 
=== Usages ===
j464 v1028 v1029 a476 v1030 v1031 v1032 
=== Predecessor ===
j456 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 lastLocationAccess: - #next: j487  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j456 
index: - 
=== Succesors ===
=== Usages ===
j487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j456 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j487 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1027 
lastLocationAccess: - 
=== Succesors ===
next: v462 
=== Usages ===
v465 
=== Predecessor ===
j486 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1027 lastLocationAccess: - #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid j464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j486 
y: j463 
=== Succesors ===
=== Usages ===
v465 v488 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j486 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j487 
y: j464 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j487 y: j464  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v465 
=== Succesors ===
trueSuccessor: v466 
falseSuccessor: v467 
=== Usages ===
=== Predecessor ===
j487 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v465 #trueSuccessor: v466 #falseSuccessor: v467  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a468 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a468  <|@  <|@
tid ?231 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?94 
values: a157 a89 - - a157 
virtualObjectMappings: ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v979 a468 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?94 values: a157 a89 - - a157 virtualObjectMappings: ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a468 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?231 
arguments: v455 
=== Succesors ===
next: v979 
=== Usages ===
v979 a484 
=== Predecessor ===
v466 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?231 arguments: v455 #next: v979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-128369|0xfffffffffffe0a8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?231 
object: a468 
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
a468 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?231 object: a468 #next: v470  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
lastLocationAccess: - 
value: j464 
stateAfter: - 
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1026 lastLocationAccess: - value: j464 stateAfter: - #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1030 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1030 #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1028 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1028 lastLocationAccess: - value: j472 stateAfter: - #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1032 
lastLocationAccess: - 
value: v970 
stateAfter: - 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1032 lastLocationAccess: - value: v970 stateAfter: - #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1029 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1029 lastLocationAccess: - value: i461 stateAfter: - #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1031 
lastLocationAccess: - 
value: j473 
stateAfter: - 
=== Succesors ===
next: a476 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1031 lastLocationAccess: - value: j473 stateAfter: - #next: a476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j486 
=== Succesors ===
next: v477 
=== Usages ===
a484 
=== Predecessor ===
v495 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j486 #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
a476 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v471 
values: a468 a476 
=== Succesors ===
=== Usages ===
v1005 a239 v1004 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v471 values: a468 a476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v470 v477 
=== Succesors ===
next: v238 
=== Usages ===
a484 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v470 v477 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a237 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n# List$Element
=== Inputs ===
value: a89 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
lastLocationAccess: - 
value: a237 
stateAfter: - 
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1005 lastLocationAccess: - value: a237 stateAfter: - #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a234 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n!# java.lang.Integer
=== Inputs ===
value: a204 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
lastLocationAccess: - 
value: a234 
stateAfter: - 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1004 lastLocationAccess: - value: a234 stateAfter: - #next: v240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a239 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: a!# List$Element
=== Inputs ===
object: a484 
=== Succesors ===
next: v98 
=== Usages ===
a97 
=== Predecessor ===
v240 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a484 #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
a239 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a97 <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v95 
values: a9 a239 
=== Succesors ===
=== Usages ===
?76 a276 ?270 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v95 values: a9 a239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v96 v98 
=== Succesors ===
next: v267 
=== Usages ===
a97 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v96 v98 #next: v267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 124
stableDimension: 0
stamp: i32 [124]
stampKind: i32
value: int[124|0x7c]
=== Inputs ===
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i438 
=== Succesors ===
=== Usages ===
v250 j256 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i438  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i439 
y: i207 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i439 y: i207  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v250 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v241 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v250 #trueSuccessor: v242 #falseSuccessor: v241  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a973 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a973  <|@  <|@
f <@~|@floating>@ <|@
tid j256 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i439 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i439  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a199 
index: j256 
=== Succesors ===
=== Usages ===
a973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: j256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a973 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
lastLocationAccess: - 
=== Succesors ===
next: v244 
=== Usages ===
a255 
=== Predecessor ===
v242 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1006 lastLocationAccess: - #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid a255 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a973 
=== Succesors ===
=== Usages ===
a247 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a973  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
a973 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v632  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j593 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j593 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j615 
=== Usages ===
v1046 v1047 
=== Predecessor ===
v632 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j615  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j593 
index: - 
=== Succesors ===
=== Usages ===
j615 v617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j615 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1046 
lastLocationAccess: - 
=== Succesors ===
next: j616 
=== Usages ===
j597 v1048 v1049 a607 v1050 v1051 
=== Predecessor ===
j593 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1046 lastLocationAccess: - #next: j616  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j593 
index: - 
=== Succesors ===
=== Usages ===
j616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j616 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1047 
lastLocationAccess: - 
=== Succesors ===
next: v596 
=== Usages ===
v598 
=== Predecessor ===
j615 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1047 lastLocationAccess: - #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid j597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j615 
y: j212 
=== Succesors ===
=== Usages ===
v598 v617 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j615 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j616 
y: j597 
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j616 y: j597  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v598 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v600 
=== Usages ===
=== Predecessor ===
j616 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v598 #trueSuccessor: v599 #falseSuccessor: v600  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a601 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a601  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?101 
values: a155 a97 - - a155 
virtualObjectMappings: ?160 ?161 ?162 ?163 ?164 ?166 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v985 a601 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?101 values: a155 a97 - - a155 virtualObjectMappings: ?160 ?161 ?162 ?163 ?164 ?166 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a601 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?76 
arguments: v507 
=== Succesors ===
next: v985 
=== Usages ===
v985 a613 
=== Predecessor ===
v599 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?76 arguments: v507 #next: v985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-160881|0xfffffffffffd8b8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?76 
object: a601 
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
a601 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?76 object: a601 #next: v603  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
v985 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1046 
lastLocationAccess: - 
value: j597 
stateAfter: - 
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1046 lastLocationAccess: - value: j597 stateAfter: - #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j615 
index: - 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1050 
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1050 #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j615 
index: - 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1048 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1048 lastLocationAccess: - value: j472 stateAfter: - #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j615 
index: - 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1051 lastLocationAccess: - value: v971 stateAfter: - #next: v622  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j615 
index: - 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: a607 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1049 lastLocationAccess: - value: i461 stateAfter: - #next: a607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j615 
=== Succesors ===
next: v608 
=== Usages ===
a613 
=== Predecessor ===
v622 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j615 #next: v608  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
a607 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v604 
values: a601 a607 
=== Succesors ===
=== Usages ===
v1007 a265 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v604 values: a601 a607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v603 v608 
=== Succesors ===
next: v264 
=== Usages ===
a613 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v603 v608 #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a613 
index: - 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a613 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
lastLocationAccess: - 
value: i140 
stateAfter: - 
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1007 lastLocationAccess: - value: i140 stateAfter: - #next: v266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a265 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a613 
=== Succesors ===
next: v246 
=== Usages ===
a247 
=== Predecessor ===
v266 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a613 #next: v246  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
a265 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v245 
values: a255 a265 
=== Succesors ===
=== Usages ===
a273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v245 values: a255 a265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v244 v246 
=== Succesors ===
next: v591 
=== Usages ===
a247 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v244 v246 #next: v591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j550 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j550 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j573 
=== Usages ===
v1039 v1040 
=== Predecessor ===
v591 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j573  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j550 
index: - 
=== Succesors ===
=== Usages ===
j573 v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j550 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j573 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1039 
lastLocationAccess: - 
=== Succesors ===
next: j574 
=== Usages ===
j554 v1041 v1042 a564 v1043 v1044 v1045 
=== Predecessor ===
j550 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1039 lastLocationAccess: - #next: j574  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j550 
index: - 
=== Succesors ===
=== Usages ===
j574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j550 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j574 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
v555 
=== Predecessor ===
j573 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j573 
y: j463 
=== Succesors ===
=== Usages ===
v555 v575 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j573 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j574 
y: j554 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j574 y: j554  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v556 
falseSuccessor: v557 
=== Usages ===
=== Predecessor ===
j574 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v556 #falseSuccessor: v557  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a558 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a558  <|@  <|@
tid ?270 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?101 
values: a155 a97 - - a155 
virtualObjectMappings: ?160 ?161 ?162 ?163 ?164 ?166 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v983 a558 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?101 values: a155 a97 - - a155 virtualObjectMappings: ?160 ?161 ?162 ?163 ?164 ?166 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a558 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?270 
arguments: v455 
=== Succesors ===
next: v983 
=== Usages ===
v983 a571 
=== Predecessor ===
v556 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?270 arguments: v455 #next: v983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-150385|0xfffffffffffdb48f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?270 
object: a558 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
a558 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?270 object: a558 #next: v560  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v983 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1039 
lastLocationAccess: - 
value: j554 
stateAfter: - 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1039 lastLocationAccess: - value: j554 stateAfter: - #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j573 
index: - 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1043 
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1043 #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j573 
index: - 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1041 lastLocationAccess: - value: j472 stateAfter: - #next: v579  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j573 
index: - 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1045 
lastLocationAccess: - 
value: v970 
stateAfter: - 
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1045 lastLocationAccess: - value: v970 stateAfter: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j573 
index: - 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1042 lastLocationAccess: - value: i461 stateAfter: - #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j573 
index: - 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1044 
lastLocationAccess: - 
value: j473 
stateAfter: - 
=== Succesors ===
next: a564 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1044 lastLocationAccess: - value: j473 stateAfter: - #next: a564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j573 
=== Succesors ===
next: v565 
=== Usages ===
a571 
=== Predecessor ===
v581 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j573 #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
a564 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v561 
values: a558 a564 
=== Succesors ===
=== Usages ===
v1009 a278 v1008 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v561 values: a558 a564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v560 v565 
=== Succesors ===
next: v277 
=== Usages ===
a571 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v560 v565 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a571 
index: - 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a571 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a276 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n# List$Element
=== Inputs ===
value: a97 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
lastLocationAccess: - 
value: a276 
stateAfter: - 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1009 lastLocationAccess: - value: a276 stateAfter: - #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a571 
index: - 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a571 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a273 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n!# java.lang.Integer
=== Inputs ===
value: a247 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
lastLocationAccess: - 
value: a273 
stateAfter: - 
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1008 lastLocationAccess: - value: a273 stateAfter: - #next: v279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a278 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: a!# List$Element
=== Inputs ===
object: a571 
=== Succesors ===
next: v105 
=== Usages ===
a104 
=== Predecessor ===
v279 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a571 #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
a278 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a104 <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v102 
values: a9 a278 
=== Succesors ===
=== Usages ===
?64 a315 ?309 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v102 values: a9 a278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v103 v105 
=== Succesors ===
next: v306 
=== Usages ===
a104 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v103 v105 #next: v306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 125
stableDimension: 0
stamp: i32 [125]
stampKind: i32
value: int[125|0x7d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i440 
=== Succesors ===
=== Usages ===
v289 j295 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i440  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i441 
y: i207 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i441 y: i207  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v289 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v280 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v289 #trueSuccessor: v281 #falseSuccessor: v280  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a974 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a974  <|@  <|@
f <@~|@floating>@ <|@
tid j295 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i441 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i441  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a199 
index: j295 
=== Succesors ===
=== Usages ===
a974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a974 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
lastLocationAccess: - 
=== Succesors ===
next: v283 
=== Usages ===
a294 
=== Predecessor ===
v281 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1010 lastLocationAccess: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid a294 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a974 
=== Succesors ===
=== Usages ===
a286 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a974  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
a974 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j677 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j677 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j699 
=== Usages ===
v1059 v1060 
=== Predecessor ===
v716 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j699  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j677 
index: - 
=== Succesors ===
=== Usages ===
j699 v701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j677 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j699 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
lastLocationAccess: - 
=== Succesors ===
next: j700 
=== Usages ===
j681 v1061 v1062 a691 v1063 v1064 
=== Predecessor ===
j677 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1059 lastLocationAccess: - #next: j700  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j677 
index: - 
=== Succesors ===
=== Usages ===
j700 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j677 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j700 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1060 
lastLocationAccess: - 
=== Succesors ===
next: v680 
=== Usages ===
v682 
=== Predecessor ===
j699 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1060 lastLocationAccess: - #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j699 
y: j212 
=== Succesors ===
=== Usages ===
v682 v701 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j699 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j700 
y: j681 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j700 y: j681  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v682 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v684 
=== Usages ===
=== Predecessor ===
j700 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v682 #trueSuccessor: v683 #falseSuccessor: v684  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a685 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a685  <|@  <|@
tid ?64 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?108 
values: a153 a104 - - a153 
virtualObjectMappings: ?161 ?162 ?163 ?164 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v989 a685 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?108 values: a153 a104 - - a153 virtualObjectMappings: ?161 ?162 ?163 ?164 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a685 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?64 
arguments: v507 
=== Succesors ===
next: v989 
=== Usages ===
v989 a697 
=== Predecessor ===
v683 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?64 arguments: v507 #next: v989  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-182385|0xfffffffffffd378f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?64 
object: a685 
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
a685 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?64 object: a685 #next: v687  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v989 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
lastLocationAccess: - 
value: j681 
stateAfter: - 
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1059 lastLocationAccess: - value: j681 stateAfter: - #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j699 
index: - 
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1063 
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1063 #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j699 
index: - 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1061 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1061 lastLocationAccess: - value: j472 stateAfter: - #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j699 
index: - 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1064 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1064 lastLocationAccess: - value: v971 stateAfter: - #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j699 
index: - 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1062 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: a691 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1062 lastLocationAccess: - value: i461 stateAfter: - #next: a691  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j699 
=== Succesors ===
next: v692 
=== Usages ===
a697 
=== Predecessor ===
v706 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j699 #next: v692  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
a691 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v688 
values: a685 a691 
=== Succesors ===
=== Usages ===
v1011 a304 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v688 values: a685 a691  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v687 v692 
=== Succesors ===
next: v303 
=== Usages ===
a697 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v687 v692 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a697 
index: - 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a697 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1011 
lastLocationAccess: - 
value: i138 
stateAfter: - 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1011 lastLocationAccess: - value: i138 stateAfter: - #next: v305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a304 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a697 
=== Succesors ===
next: v285 
=== Usages ===
a286 
=== Predecessor ===
v305 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a697 #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
a304 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v284 
values: a294 a304 
=== Succesors ===
=== Usages ===
a312 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v284 values: a294 a304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v283 v285 
=== Succesors ===
next: v675 
=== Usages ===
a286 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v283 v285 #next: v675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j634 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j634 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j657 
=== Usages ===
v1052 v1053 
=== Predecessor ===
v675 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j657  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j634 
index: - 
=== Succesors ===
=== Usages ===
j657 v659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j634 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j657 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
lastLocationAccess: - 
=== Succesors ===
next: j658 
=== Usages ===
j638 v1054 v1055 a648 v1056 v1057 v1058 
=== Predecessor ===
j634 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1052 lastLocationAccess: - #next: j658  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j634 
index: - 
=== Succesors ===
=== Usages ===
j658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j634 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j658 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
lastLocationAccess: - 
=== Succesors ===
next: v637 
=== Usages ===
v639 
=== Predecessor ===
j657 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1053 lastLocationAccess: - #next: v637  <|@  <|@
f <@~|@floating>@ <|@
tid j638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j657 
y: j463 
=== Succesors ===
=== Usages ===
v639 v659 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j657 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j658 
y: j638 
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j658 y: j638  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v639 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v641 
=== Usages ===
=== Predecessor ===
j658 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v639 #trueSuccessor: v640 #falseSuccessor: v641  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a642 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a642  <|@  <|@
tid ?309 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?108 
values: a153 a104 - - a153 
virtualObjectMappings: ?161 ?162 ?163 ?164 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v987 a642 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?108 values: a153 a104 - - a153 virtualObjectMappings: ?161 ?162 ?163 ?164 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a642 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?309 
arguments: v455 
=== Succesors ===
next: v987 
=== Usages ===
v987 a655 
=== Predecessor ===
v640 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?309 arguments: v455 #next: v987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-171889|0xfffffffffffd608f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?309 
object: a642 
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
a642 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?309 object: a642 #next: v644  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
v987 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
lastLocationAccess: - 
value: j638 
stateAfter: - 
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1052 lastLocationAccess: - value: j638 stateAfter: - #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: - 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1056 
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1056 #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: - 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1054 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1054 lastLocationAccess: - value: j472 stateAfter: - #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: - 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1058 
lastLocationAccess: - 
value: v970 
stateAfter: - 
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1058 lastLocationAccess: - value: v970 stateAfter: - #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: - 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1055 lastLocationAccess: - value: i461 stateAfter: - #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: - 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1057 
lastLocationAccess: - 
value: j473 
stateAfter: - 
=== Succesors ===
next: a648 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1057 lastLocationAccess: - value: j473 stateAfter: - #next: a648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j657 
=== Succesors ===
next: v649 
=== Usages ===
a655 
=== Predecessor ===
v665 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j657 #next: v649  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
a648 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v645 
values: a642 a648 
=== Succesors ===
=== Usages ===
v1013 a317 v1012 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v645 values: a642 a648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v644 v649 
=== Succesors ===
next: v316 
=== Usages ===
a655 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v644 v649 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a655 
index: - 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a655 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a315 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n# List$Element
=== Inputs ===
value: a104 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
lastLocationAccess: - 
value: a315 
stateAfter: - 
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1013 lastLocationAccess: - value: a315 stateAfter: - #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a655 
index: - 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a655 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a312 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n!# java.lang.Integer
=== Inputs ===
value: a286 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1012 
lastLocationAccess: - 
value: a312 
stateAfter: - 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1012 lastLocationAccess: - value: a312 stateAfter: - #next: v318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a317 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: a!# List$Element
=== Inputs ===
object: a655 
=== Succesors ===
next: v112 
=== Usages ===
a111 
=== Predecessor ===
v318 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a655 #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
a317 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a111 <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v109 
values: a9 a317 
=== Succesors ===
=== Usages ===
?52 a354 ?348 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v109 values: a9 a317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v110 v112 
=== Succesors ===
next: v345 
=== Usages ===
a111 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v110 v112 #next: v345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid i442 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 126
stableDimension: 0
stamp: i32 [126]
stampKind: i32
value: int[126|0x7e]
=== Inputs ===
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i442 
=== Succesors ===
=== Usages ===
v328 j334 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i442  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i443 
y: i207 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i443 y: i207  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v328 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v319 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v328 #trueSuccessor: v320 #falseSuccessor: v319  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a975 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a975  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i443 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i443  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a199 
index: j334 
=== Succesors ===
=== Usages ===
a975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: j334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a975 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
lastLocationAccess: - 
=== Succesors ===
next: v322 
=== Usages ===
a333 
=== Predecessor ===
v320 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1014 lastLocationAccess: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid a333 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a975 
=== Succesors ===
=== Usages ===
a325 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a975  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
a975 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j761 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j761 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j783 
=== Usages ===
v1072 v1073 
=== Predecessor ===
v800 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j783  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j761 
index: - 
=== Succesors ===
=== Usages ===
j783 v785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j761 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j783 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1072 
lastLocationAccess: - 
=== Succesors ===
next: j784 
=== Usages ===
j765 v1074 v1075 a775 v1076 v1077 
=== Predecessor ===
j761 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1072 lastLocationAccess: - #next: j784  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j761 
index: - 
=== Succesors ===
=== Usages ===
j784 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j761 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j784 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
lastLocationAccess: - 
=== Succesors ===
next: v764 
=== Usages ===
v766 
=== Predecessor ===
j783 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1073 lastLocationAccess: - #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j783 
y: j212 
=== Succesors ===
=== Usages ===
v766 v785 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j783 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j784 
y: j765 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j784 y: j765  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v766 
=== Succesors ===
trueSuccessor: v767 
falseSuccessor: v768 
=== Usages ===
=== Predecessor ===
j784 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v766 #trueSuccessor: v767 #falseSuccessor: v768  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a769 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a769  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?115 
values: a151 a111 - - a151 
virtualObjectMappings: ?162 ?163 ?164 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v993 a769 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?115 values: a151 a111 - - a151 virtualObjectMappings: ?162 ?163 ?164 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a769 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?52 
arguments: v507 
=== Succesors ===
next: v993 
=== Usages ===
v993 a781 
=== Predecessor ===
v767 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?52 arguments: v507 #next: v993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-203889|0xfffffffffffce38f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?52 
object: a769 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
a769 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?52 object: a769 #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
v993 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1072 
lastLocationAccess: - 
value: j765 
stateAfter: - 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1072 lastLocationAccess: - value: j765 stateAfter: - #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1076 
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1076 #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1074 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v789 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1074 lastLocationAccess: - value: j472 stateAfter: - #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1077 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1077 lastLocationAccess: - value: v971 stateAfter: - #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1075 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: a775 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1075 lastLocationAccess: - value: i461 stateAfter: - #next: a775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j783 
=== Succesors ===
next: v776 
=== Usages ===
a781 
=== Predecessor ===
v790 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j783 #next: v776  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
a775 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v772 
values: a769 a775 
=== Succesors ===
=== Usages ===
v1015 a343 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v772 values: a769 a775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v771 v776 
=== Succesors ===
next: v342 
=== Usages ===
a781 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v771 v776 #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a781 
index: - 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a781 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
lastLocationAccess: - 
value: i136 
stateAfter: - 
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1015 lastLocationAccess: - value: i136 stateAfter: - #next: v344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a343 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a781 
=== Succesors ===
next: v324 
=== Usages ===
a325 
=== Predecessor ===
v344 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a781 #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
a343 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v323 
values: a333 a343 
=== Succesors ===
=== Usages ===
a351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v323 values: a333 a343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v322 v324 
=== Succesors ===
next: v759 
=== Usages ===
a325 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v322 v324 #next: v759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j718 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j718 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j741 
=== Usages ===
v1065 v1066 
=== Predecessor ===
v759 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j741  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j718 
index: - 
=== Succesors ===
=== Usages ===
j741 v743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j718 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j741 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1065 
lastLocationAccess: - 
=== Succesors ===
next: j742 
=== Usages ===
j722 v1067 v1068 a732 v1069 v1070 v1071 
=== Predecessor ===
j718 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1065 lastLocationAccess: - #next: j742  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j718 
index: - 
=== Succesors ===
=== Usages ===
j742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j718 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j742 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
lastLocationAccess: - 
=== Succesors ===
next: v721 
=== Usages ===
v723 
=== Predecessor ===
j741 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1066 lastLocationAccess: - #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid j722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j741 
y: j463 
=== Succesors ===
=== Usages ===
v723 v743 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j741 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j742 
y: j722 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j742 y: j722  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v723 
=== Succesors ===
trueSuccessor: v724 
falseSuccessor: v725 
=== Usages ===
=== Predecessor ===
j742 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v723 #trueSuccessor: v724 #falseSuccessor: v725  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a726 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a726  <|@  <|@
tid ?348 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?115 
values: a151 a111 - - a151 
virtualObjectMappings: ?162 ?163 ?164 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v991 a726 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?115 values: a151 a111 - - a151 virtualObjectMappings: ?162 ?163 ?164 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a726 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?348 
arguments: v455 
=== Succesors ===
next: v991 
=== Usages ===
v991 a739 
=== Predecessor ===
v724 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?348 arguments: v455 #next: v991  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-193393|0xfffffffffffd0c8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?348 
object: a726 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
a726 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?348 object: a726 #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
v991 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1065 
lastLocationAccess: - 
value: j722 
stateAfter: - 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1065 lastLocationAccess: - value: j722 stateAfter: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j741 
index: - 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j741 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1069 
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1069 #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j741 
index: - 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j741 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1067 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1067 lastLocationAccess: - value: j472 stateAfter: - #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j741 
index: - 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j741 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1071 
lastLocationAccess: - 
value: v970 
stateAfter: - 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1071 lastLocationAccess: - value: v970 stateAfter: - #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j741 
index: - 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j741 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1068 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1068 lastLocationAccess: - value: i461 stateAfter: - #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j741 
index: - 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j741 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
lastLocationAccess: - 
value: j473 
stateAfter: - 
=== Succesors ===
next: a732 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1070 lastLocationAccess: - value: j473 stateAfter: - #next: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j741 
=== Succesors ===
next: v733 
=== Usages ===
a739 
=== Predecessor ===
v749 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j741 #next: v733  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
a732 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v729 
values: a726 a732 
=== Succesors ===
=== Usages ===
v1017 a356 v1016 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v729 values: a726 a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v728 v733 
=== Succesors ===
next: v355 
=== Usages ===
a739 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v728 v733 #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a739 
index: - 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a739 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a354 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n# List$Element
=== Inputs ===
value: a111 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1017 
lastLocationAccess: - 
value: a354 
stateAfter: - 
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1017 lastLocationAccess: - value: a354 stateAfter: - #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a739 
index: - 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a739 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a351 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n!# java.lang.Integer
=== Inputs ===
value: a325 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1016 
lastLocationAccess: - 
value: a351 
stateAfter: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1016 lastLocationAccess: - value: a351 stateAfter: - #next: v357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a356 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: a!# List$Element
=== Inputs ===
object: a739 
=== Succesors ===
next: v119 
=== Usages ===
a118 
=== Predecessor ===
v357 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a739 #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
a356 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a118 <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v116 
values: a9 a356 
=== Succesors ===
=== Usages ===
?39 a393 ?387 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v116 values: a9 a356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v117 v119 
=== Succesors ===
next: v384 
=== Usages ===
a118 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v117 v119 #next: v384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid i444 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
rawvalue: 127
stableDimension: 0
stamp: i32 [127]
stampKind: i32
value: int[127|0x7f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i444 
=== Succesors ===
=== Usages ===
v367 j373 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i444  <|@  <|@
f <@~|@floating>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i445 
y: i207 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i445 y: i207  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v367 
=== Succesors ===
trueSuccessor: v359 
falseSuccessor: v358 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v367 #trueSuccessor: v359 #falseSuccessor: v358  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a976 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a976  <|@  <|@
f <@~|@floating>@ <|@
tid j373 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i445 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i445  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a199 
index: j373 
=== Succesors ===
=== Usages ===
a976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a976 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1018 
lastLocationAccess: - 
=== Succesors ===
next: v361 
=== Usages ===
a372 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1018 lastLocationAccess: - #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid a372 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a976 
=== Succesors ===
=== Usages ===
a364 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a976  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
a976 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j845 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j845 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j867 
=== Usages ===
v1085 v1086 
=== Predecessor ===
v884 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j867  <|@  <|@
f <@~|@floating>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
j867 v869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j867 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1085 
lastLocationAccess: - 
=== Succesors ===
next: j868 
=== Usages ===
j849 v1087 v1088 a859 v1089 v1090 
=== Predecessor ===
j845 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1085 lastLocationAccess: - #next: j868  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
j868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j868 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1086 
lastLocationAccess: - 
=== Succesors ===
next: v848 
=== Usages ===
v850 
=== Predecessor ===
j867 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1086 lastLocationAccess: - #next: v848  <|@  <|@
f <@~|@floating>@ <|@
tid j849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j867 
y: j212 
=== Succesors ===
=== Usages ===
v850 v869 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j867 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j868 
y: j849 
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j868 y: j849  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v850 
=== Succesors ===
trueSuccessor: v851 
falseSuccessor: v852 
=== Usages ===
=== Predecessor ===
j868 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v850 #trueSuccessor: v851 #falseSuccessor: v852  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a853 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a853  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?130 
values: a149 a118 - - a149 
virtualObjectMappings: ?163 ?164 ?169 ?170 
=== Succesors ===
=== Usages ===
v997 a853 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?130 values: a149 a118 - - a149 virtualObjectMappings: ?163 ?164 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a853 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?39 
arguments: v507 
=== Succesors ===
next: v997 
=== Usages ===
v997 a865 
=== Predecessor ===
v851 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?39 arguments: v507 #next: v997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-225393|0xfffffffffffc8f8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?39 
object: a853 
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
a853 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?39 object: a853 #next: v855  <|@  <|@
f <@*|@fixed>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
v997 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1085 
lastLocationAccess: - 
value: j849 
stateAfter: - 
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1085 lastLocationAccess: - value: j849 stateAfter: - #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1089 
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1089 #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1087 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1087 lastLocationAccess: - value: j472 stateAfter: - #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1090 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1090 lastLocationAccess: - value: v971 stateAfter: - #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1088 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: a859 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1088 lastLocationAccess: - value: i461 stateAfter: - #next: a859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j867 
=== Succesors ===
next: v860 
=== Usages ===
a865 
=== Predecessor ===
v874 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j867 #next: v860  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
a859 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v856 
values: a853 a859 
=== Succesors ===
=== Usages ===
v1019 a382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v856 values: a853 a859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v855 v860 
=== Succesors ===
next: v381 
=== Usages ===
a865 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v855 v860 #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a865 
index: - 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a865 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1019 
lastLocationAccess: - 
value: i19 
stateAfter: - 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1019 lastLocationAccess: - value: i19 stateAfter: - #next: v383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a382 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a865 
=== Succesors ===
next: v363 
=== Usages ===
a364 
=== Predecessor ===
v383 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a865 #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
a382 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v362 
values: a372 a382 
=== Succesors ===
=== Usages ===
a390 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v362 values: a372 a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v361 v363 
=== Succesors ===
next: v843 
=== Usages ===
a364 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v361 v363 #next: v843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j802 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j802 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j825 
=== Usages ===
v1078 v1079 
=== Predecessor ===
v843 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j825  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j802 
index: - 
=== Succesors ===
=== Usages ===
j825 v827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j802 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j825 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1078 
lastLocationAccess: - 
=== Succesors ===
next: j826 
=== Usages ===
j806 v1080 v1081 a816 v1082 v1083 v1084 
=== Predecessor ===
j802 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1078 lastLocationAccess: - #next: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j802 
index: - 
=== Succesors ===
=== Usages ===
j826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j802 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j826 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1079 
lastLocationAccess: - 
=== Succesors ===
next: v805 
=== Usages ===
v807 
=== Predecessor ===
j825 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1079 lastLocationAccess: - #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid j806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j825 
y: j463 
=== Succesors ===
=== Usages ===
v807 v827 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j825 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j826 
y: j806 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j826 y: j806  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v808 
falseSuccessor: v809 
=== Usages ===
=== Predecessor ===
j826 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v808 #falseSuccessor: v809  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a810 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a810  <|@  <|@
tid ?387 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?130 
values: a149 a118 - - a149 
virtualObjectMappings: ?163 ?164 ?169 ?170 
=== Succesors ===
=== Usages ===
v995 a810 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?130 values: a149 a118 - - a149 virtualObjectMappings: ?163 ?164 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a810 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?387 
arguments: v455 
=== Succesors ===
next: v995 
=== Usages ===
v995 a823 
=== Predecessor ===
v808 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?387 arguments: v455 #next: v995  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-214897|0xfffffffffffcb88f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?387 
object: a810 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
a810 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?387 object: a810 #next: v812  <|@  <|@
f <@*|@fixed>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
v995 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1078 
lastLocationAccess: - 
value: j806 
stateAfter: - 
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1078 lastLocationAccess: - value: j806 stateAfter: - #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1082 
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v827 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1082 #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1080 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1080 lastLocationAccess: - value: j472 stateAfter: - #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1084 
lastLocationAccess: - 
value: v970 
stateAfter: - 
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1084 lastLocationAccess: - value: v970 stateAfter: - #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1081 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1081 lastLocationAccess: - value: i461 stateAfter: - #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1083 
lastLocationAccess: - 
value: j473 
stateAfter: - 
=== Succesors ===
next: a816 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1083 lastLocationAccess: - value: j473 stateAfter: - #next: a816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j825 
=== Succesors ===
next: v817 
=== Usages ===
a823 
=== Predecessor ===
v833 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j825 #next: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
a816 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v813 
values: a810 a816 
=== Succesors ===
=== Usages ===
v1021 a395 v1020 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v813 values: a810 a816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v812 v817 
=== Succesors ===
next: v394 
=== Usages ===
a823 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v812 v817 #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a393 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n# List$Element
=== Inputs ===
value: a118 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1021 
lastLocationAccess: - 
value: a393 
stateAfter: - 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1021 lastLocationAccess: - value: a393 stateAfter: - #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a390 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n!# java.lang.Integer
=== Inputs ===
value: a364 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1020 
lastLocationAccess: - 
value: a390 
stateAfter: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1020 lastLocationAccess: - value: a390 stateAfter: - #next: v396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a395 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: a!# List$Element
=== Inputs ===
object: a823 
=== Succesors ===
next: v134 
=== Usages ===
a133 
=== Predecessor ===
v396 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a823 #next: v134  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
a395 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a133 <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v131 
values: a9 a395 
=== Succesors ===
=== Usages ===
?22 a432 ?426 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v131 values: a9 a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v132 v134 
=== Succesors ===
next: v423 
=== Usages ===
a133 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v132 v134 #next: v423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 128
stableDimension: 0
stamp: i32 [128]
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: i32
=== Inputs ===
x: i2 
y: i196 
=== Succesors ===
=== Usages ===
v406 j412 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i196  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i207 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i399 y: i207  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v406 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v406 #trueSuccessor: v398 #falseSuccessor: v397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a977 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a977  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i399 
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i399  <|@  <|@
f <@~|@floating>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a199 
index: j412 
=== Succesors ===
=== Usages ===
a977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a977 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1022 
lastLocationAccess: - 
=== Succesors ===
next: v400 
=== Usages ===
a411 
=== Predecessor ===
v398 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1022 lastLocationAccess: - #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid a411 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a977 
=== Succesors ===
=== Usages ===
a403 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a977  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
a977 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: j929 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j929 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j951 
=== Usages ===
v1098 v1099 
=== Predecessor ===
v968 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j951  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j929 
index: - 
=== Succesors ===
=== Usages ===
j951 v953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j951 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1098 
lastLocationAccess: - 
=== Succesors ===
next: j952 
=== Usages ===
j933 v1100 v1101 a943 v1102 v1103 
=== Predecessor ===
j929 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1098 lastLocationAccess: - #next: j952  <|@  <|@
f <@~|@floating>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j929 
index: - 
=== Succesors ===
=== Usages ===
j952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j952 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1099 
lastLocationAccess: - 
=== Succesors ===
next: v932 
=== Usages ===
v934 
=== Predecessor ===
j951 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1099 lastLocationAccess: - #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid j933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: i64
=== Inputs ===
x: j951 
y: j212 
=== Succesors ===
=== Usages ===
v934 v953 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j951 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j952 
y: j933 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j952 y: j933  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v934 
=== Succesors ===
trueSuccessor: v935 
falseSuccessor: v936 
=== Usages ===
=== Predecessor ===
j952 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v934 #trueSuccessor: v935 #falseSuccessor: v936  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a937 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a937  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a147 a133 - - a147 
virtualObjectMappings: ?164 ?170 
=== Succesors ===
=== Usages ===
v1001 a937 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a147 a133 - - a147 virtualObjectMappings: ?164 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a937 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?22 
arguments: v507 
=== Succesors ===
next: v1001 
=== Usages ===
v1001 a949 
=== Predecessor ===
v935 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?22 arguments: v507 #next: v1001  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-246897|0xfffffffffffc3b8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?22 
object: a937 
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
a937 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?22 object: a937 #next: v939  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v1001 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1098 
lastLocationAccess: - 
value: j933 
stateAfter: - 
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1098 lastLocationAccess: - value: j933 stateAfter: - #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j951 
index: - 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
address: v1102 
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1102 #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j951 
index: - 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1100 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v957 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1100 lastLocationAccess: - value: j472 stateAfter: - #next: v957  <|@  <|@
f <@~|@floating>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j951 
index: - 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1103 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1103 lastLocationAccess: - value: v971 stateAfter: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j951 
index: - 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1101 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: a943 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1101 lastLocationAccess: - value: i461 stateAfter: - #next: a943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j951 
=== Succesors ===
next: v944 
=== Usages ===
a949 
=== Predecessor ===
v958 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j951 #next: v944  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
a943 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v940 
values: a937 a943 
=== Succesors ===
=== Usages ===
v1023 a421 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v940 values: a937 a943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v939 v944 
=== Succesors ===
next: v420 
=== Usages ===
a949 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v939 v944 #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a949 
index: - 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a949 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1023 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1023 lastLocationAccess: - value: i2 stateAfter: - #next: v422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a421 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a949 
=== Succesors ===
next: v402 
=== Usages ===
a403 
=== Predecessor ===
v422 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a949 #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
a421 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v401 
values: a411 a421 
=== Succesors ===
=== Usages ===
a429 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v401 values: a411 a421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v400 v402 
=== Succesors ===
next: v927 
=== Usages ===
a403 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v400 v402 #next: v927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j886 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j886 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j909 
=== Usages ===
v1091 v1092 
=== Predecessor ===
v927 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j909  <|@  <|@
f <@~|@floating>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j886 
index: - 
=== Succesors ===
=== Usages ===
j909 v911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j909 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1091 
lastLocationAccess: - 
=== Succesors ===
next: j910 
=== Usages ===
j890 v1093 v1094 a900 v1095 v1096 v1097 
=== Predecessor ===
j886 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1091 lastLocationAccess: - #next: j910  <|@  <|@
f <@~|@floating>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j886 
index: - 
=== Succesors ===
=== Usages ===
j910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j910 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1092 
lastLocationAccess: - 
=== Succesors ===
next: v889 
=== Usages ===
v891 
=== Predecessor ===
j909 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1092 lastLocationAccess: - #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid j890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 6]
stamp: i64
=== Inputs ===
x: j909 
y: j463 
=== Succesors ===
=== Usages ===
v891 v911 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j909 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at List.makeList(int) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j910 
y: j890 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j910 y: j890  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v891 
=== Succesors ===
trueSuccessor: v892 
falseSuccessor: v893 
=== Usages ===
=== Predecessor ===
j910 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v891 #trueSuccessor: v892 #falseSuccessor: v893  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a894 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a894  <|@  <|@
tid ?426 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a147 a133 - - a147 
virtualObjectMappings: ?164 ?170 
=== Succesors ===
=== Usages ===
v999 a894 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a147 a133 - - a147 virtualObjectMappings: ?164 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a894 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?426 
arguments: v455 
=== Succesors ===
next: v999 
=== Usages ===
v999 a907 
=== Predecessor ===
v892 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?426 arguments: v455 #next: v999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-236401|0xfffffffffffc648f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?426 
object: a894 
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
a894 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?426 object: a894 #next: v896  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v999 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v911  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1091 
lastLocationAccess: - 
value: j890 
stateAfter: - 
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1091 lastLocationAccess: - value: j890 stateAfter: - #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j909 
index: - 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
address: v1095 
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1095 #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j909 
index: - 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1093 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1093 lastLocationAccess: - value: j472 stateAfter: - #next: v915  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j909 
index: - 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1097 
lastLocationAccess: - 
value: v970 
stateAfter: - 
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1097 lastLocationAccess: - value: v970 stateAfter: - #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j909 
index: - 
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1094 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1094 lastLocationAccess: - value: i461 stateAfter: - #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j909 
index: - 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1096 
lastLocationAccess: - 
value: j473 
stateAfter: - 
=== Succesors ===
next: a900 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1096 lastLocationAccess: - value: j473 stateAfter: - #next: a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j909 
=== Succesors ===
next: v901 
=== Usages ===
a907 
=== Predecessor ===
v917 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j909 #next: v901  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
a900 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v897 
values: a894 a900 
=== Succesors ===
=== Usages ===
v1025 a434 v1024 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v897 values: a894 a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v896 v901 
=== Succesors ===
next: v433 
=== Usages ===
a907 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v896 v901 #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a907 
index: - 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a907 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a432 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
op: Compress
stamp: n# List$Element
=== Inputs ===
value: a133 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
lastLocationAccess: - 
value: a432 
stateAfter: - 
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1025 lastLocationAccess: - value: a432 stateAfter: - #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a907 
index: - 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a907 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a429 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
op: Compress
stamp: n!# java.lang.Integer
=== Inputs ===
value: a403 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1024 
lastLocationAccess: - 
value: a429 
stateAfter: - 
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1024 lastLocationAccess: - value: a429 stateAfter: - #next: v435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a434 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: a!# List$Element
=== Inputs ===
object: a907 
=== Succesors ===
next: v27 
=== Usages ===
v27 
=== Predecessor ===
v435 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a907 #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 30]
stamp: void
=== Inputs ===
memoryMap: - 
result: a434 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a434 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a434  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = LEA address: [v1|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LEA address: [v1|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA address: [v1|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v1|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v1|DWORD - 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v1|DWORD - 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA address: [v1|DWORD + 123] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v4|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v22|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + 12], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v1|DWORD + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v34|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v4|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v41|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + 16], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + 12], y: v48|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v1|DWORD + 125] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v54|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v53|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v4|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + 16], y: v66|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + 12], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA address: [v1|DWORD + 126] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA address: [v72|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v73|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v72|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v77|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV input: [v4|QWORD[.] + v69|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA address: [v79|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v79|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v79|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v83|QWORD[.]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = COMPRESSPOINTER (input: v68|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD[.] + 16], y: v85|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD[.] + 12], y: v86|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v84|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v1|DWORD + 127] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA address: [v91|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v92|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v91|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v95|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[_] = MOV input: [v4|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = LEA address: [v98|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v99|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v98|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v102|QWORD[.]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[.] + 16], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[_] = COMPRESSPOINTER (input: v97|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[.] + 12], y: v105|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = LEA address: [v1|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v107|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = LEA address: [v110|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v111|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v110|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v115|QWORD[.]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[_] = MOV input: [v4|QWORD[.] + v107|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v109|QWORD[.]] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = LEA address: [v117|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v118|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v117|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD[_] = COMPRESSPOINTER (input: v106|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v122|QWORD[.] + 16], y: v123|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = COMPRESSPOINTER (input: v116|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v122|QWORD[.] + 12], y: v124|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v119|QWORD[.]] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v119|QWORD[.]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v100|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v100|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v81|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|QWORD[.]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v62|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|QWORD[.]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v43|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v24|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v112|QWORD[.]] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v112|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v93|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v93|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v74|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v74|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v55|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v36|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v17|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid j473 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 v495 v917 v665 v581 v749 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
result meta{HotSpotType<LList$Element;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: meta{HotSpotType<LList$Element;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140232611594240 shift: 0)
stampKind: Klass*(compressed base: 140232611594240 shift: 0)
value: meta{HotSpotType<LList$Element;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v493 v579 v663 v747 v831 v915 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: meta{HotSpotType<LList$Element;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<LList$Element;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a468 a726 a558 a894 a642 a810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j463 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j464 j554 j638 j722 j806 j890 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 v538 v580 v622 v664 v706 v748 v790 v832 v874 v916 v958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
result meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140232611594240 shift: 0)
stampKind: Klass*(compressed base: 140232611594240 shift: 0)
value: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 v621 v705 v789 v873 v957 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j472 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v489 v534 v576 v618 v660 v702 v744 v786 v828 v870 v912 v954 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: meta{HotSpotType<Ljava/lang/Integer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Integer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a516 a769 a601 a937 a685 a853 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j212 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j933 j681 j849 j512 j765 j597 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a199 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: Instance<java.lang.Integer[]>
stableDimension: 1
stamp: a!# java.lang.Integer[]
stampKind: a java.lang.Object
value: Object[Instance<java.lang.Integer[]>]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1002 v1006 v1010 v1014 v1018 v1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result int[256|0x100] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 256
stableDimension: 0
stamp: i32 [256]
stampKind: i32
value: int[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 v250 v289 v328 v367 v406 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid a147 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<List$Element.val Object:12>, HotSpotResolvedJavaFieldImpl<List$Element.next List$Element:16>]
hasIdentity: true
nodeSourcePosition: at List.makeList(int) [bci: 6]
objectId: 11
stamp: a!# List$Element
type: HotSpotType<LList$Element;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?130 ?130 ?164 ?22 ?22 ?426 ?426 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?130 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a147 - - a147 
=== Succesors ===
=== Usages ===
?115 ?39 ?387 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a147 - - a147  <|@  <|@
tid a149 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<List$Element.val Object:12>, HotSpotResolvedJavaFieldImpl<List$Element.next List$Element:16>]
hasIdentity: true
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
objectId: 9
stamp: a!# List$Element
type: HotSpotType<LList$Element;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?115 ?115 ?163 ?39 ?39 ?387 ?387 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?130 
values: a149 - - a149 
=== Succesors ===
=== Usages ===
?108 ?52 ?348 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?130 values: a149 - - a149  <|@  <|@
tid a151 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<List$Element.val Object:12>, HotSpotResolvedJavaFieldImpl<List$Element.next List$Element:16>]
hasIdentity: true
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: 7
stamp: a!# List$Element
type: HotSpotType<LList$Element;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?108 ?108 ?162 ?52 ?52 ?348 ?348 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?115 
values: a151 - - a151 
=== Succesors ===
=== Usages ===
?101 ?64 ?309 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?115 values: a151 - - a151  <|@  <|@
tid a153 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<List$Element.val Object:12>, HotSpotResolvedJavaFieldImpl<List$Element.next List$Element:16>]
hasIdentity: true
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: 5
stamp: a!# List$Element
type: HotSpotType<LList$Element;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?101 ?101 ?161 ?64 ?64 ?309 ?309 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?108 
values: a153 - - a153 
=== Succesors ===
=== Usages ===
?94 ?76 ?270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?108 values: a153 - - a153  <|@  <|@
tid a155 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<List$Element.val Object:12>, HotSpotResolvedJavaFieldImpl<List$Element.next List$Element:16>]
hasIdentity: true
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: 3
stamp: a!# List$Element
type: HotSpotType<LList$Element;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?94 ?94 ?160 ?76 ?76 ?270 ?270 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid a156 <|@
d <@d|@=== Debug Properties ===
boxingKind: int
fields: [HotSpotResolvedJavaFieldImpl<java.lang.Integer.value int:12>]
hasIdentity: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: -1
stamp: a!# java.lang.Integer
type: HotSpotType<Ljava/lang/Integer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?160 ?166 
=== Predecessor ===
- >@ <|@
instruction <@VirtualBoxing|@jdk.graal.compiler.nodes.virtual.VirtualBoxingNode>@  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a155 
values: a156 - 
=== Succesors ===
=== Usages ===
?90 ?76 ?231 ?270 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a155 values: a156 -  <|@  <|@
tid a154 <|@
d <@d|@=== Debug Properties ===
boxingKind: int
fields: [HotSpotResolvedJavaFieldImpl<java.lang.Integer.value int:12>]
hasIdentity: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: -1
stamp: a!# java.lang.Integer
type: HotSpotType<Ljava/lang/Integer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?161 ?167 
=== Predecessor ===
- >@ <|@
instruction <@VirtualBoxing|@jdk.graal.compiler.nodes.virtual.VirtualBoxingNode>@  <|@  <|@
tid ?161 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a153 
values: a154 - 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?231 ?270 ?309 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a153 values: a154 -  <|@  <|@
tid a152 <|@
d <@d|@=== Debug Properties ===
boxingKind: int
fields: [HotSpotResolvedJavaFieldImpl<java.lang.Integer.value int:12>]
hasIdentity: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: -1
stamp: a!# java.lang.Integer
type: HotSpotType<Ljava/lang/Integer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?162 ?168 
=== Predecessor ===
- >@ <|@
instruction <@VirtualBoxing|@jdk.graal.compiler.nodes.virtual.VirtualBoxingNode>@  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a151 
values: a152 - 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?52 ?231 ?270 ?309 ?348 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a151 values: a152 -  <|@  <|@
tid a150 <|@
d <@d|@=== Debug Properties ===
boxingKind: int
fields: [HotSpotResolvedJavaFieldImpl<java.lang.Integer.value int:12>]
hasIdentity: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
objectId: -1
stamp: a!# java.lang.Integer
type: HotSpotType<Ljava/lang/Integer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?163 ?169 
=== Predecessor ===
- >@ <|@
instruction <@VirtualBoxing|@jdk.graal.compiler.nodes.virtual.VirtualBoxingNode>@  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a149 
values: a150 - 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?52 ?39 ?231 ?270 ?309 ?348 ?387 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a149 values: a150 -  <|@  <|@
tid a148 <|@
d <@d|@=== Debug Properties ===
boxingKind: int
fields: [HotSpotResolvedJavaFieldImpl<java.lang.Integer.value int:12>]
hasIdentity: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
objectId: -1
stamp: a!# java.lang.Integer
type: HotSpotType<Ljava/lang/Integer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?164 ?170 
=== Predecessor ===
- >@ <|@
instruction <@VirtualBoxing|@jdk.graal.compiler.nodes.virtual.VirtualBoxingNode>@  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a147 
values: a148 - 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?52 ?39 ?22 ?231 ?270 ?309 ?348 ?387 ?426 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a147 values: a148 -  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i445 v189 ?170 i19 v420 i146 i136 i140 i138 i142 i399 i437 i439 i441 i443 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result int[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i114 
=== Succesors ===
=== Usages ===
?166 v264 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i114  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a156 
values: i140 
=== Succesors ===
=== Usages ===
?90 ?76 ?231 ?270 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a156 values: i140  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result int[-3|0xfffffffffffffffd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: -3
stableDimension: 0
stamp: i32 [-3]
stampKind: i32
value: int[-3|0xfffffffffffffffd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i107 
=== Succesors ===
=== Usages ===
?167 v303 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i107  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a154 
values: i138 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?231 ?270 ?309 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a154 values: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i100 
=== Succesors ===
=== Usages ===
?168 v342 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i100  <|@  <|@
tid ?168 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a152 
values: i136 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?52 ?231 ?270 ?309 ?348 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a152 values: i136  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 22]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 22]
stamp: i32
=== Inputs ===
x: i2 
y: i18 
=== Succesors ===
=== Usages ===
?169 v381 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i18  <|@  <|@
tid ?169 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a150 
values: i19 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?52 ?39 ?231 ?270 ?309 ?348 ?387 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a150 values: i19  <|@  <|@
tid ?170 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a148 
values: i2 
=== Succesors ===
=== Usages ===
?90 ?76 ?64 ?52 ?39 ?22 ?231 ?270 ?309 ?348 ?387 ?426 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a148 values: i2  <|@  <|@
f <@~|@floating>@ <|@
tid a9 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 a118 a97 a104 a111 a133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
areKeysContiguous: true
keySuccessors: [I@3adac319
keys: [I@29237543
nodeSourcePosition: at List.makeList(int) [bci: 1]
profileData: PROFILED keyProbabilities: [0.08828124999999998, 0.08048767089843749, 0.0733821187019348, 0.06690385353527963, 0.06099749771536822, 0.055612562370183374, 0.5743350467787965]
stamp: void
=== Inputs ===
value: i2 
=== Succesors ===
successors: v7 v30 v45 v57 v69 v81 v80 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@IntegerSwitch|@jdk.graal.compiler.nodes.extended.IntegerSwitchNode>@ value: i2 #successors: v7 v30 v45 v57 v69 v81 v80  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = LEA address: [v1|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LEA address: [v1|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA address: [v1|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v1|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v10  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 5]
stamp: void
=== Inputs ===
memoryMap: - 
result: a9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v45 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v57 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 4]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a89 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a89  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# List
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result int[-6|0xfffffffffffffffa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: -6
stableDimension: 0
stamp: i32 [-6]
stampKind: i32
value: int[-6|0xfffffffffffffffa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i145 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i145  <|@  <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<List.makeList(int)>
=== Inputs ===
arguments: a1 i146 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i146  <|@  <|@
tid ?94 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?101 
values: a155 - - a155 
=== Succesors ===
=== Usages ===
?90 ?231 ?447 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?101 values: a155 - - a155  <|@  <|@
tid a157 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<List$Element.val Object:12>, HotSpotResolvedJavaFieldImpl<List$Element.next List$Element:16>]
hasIdentity: true
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: 1
stamp: a!# List$Element
type: HotSpotType<LList$Element;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?90 ?90 ?159 ?231 ?231 ?447 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid a158 <|@
d <@d|@=== Debug Properties ===
boxingKind: int
fields: [HotSpotResolvedJavaFieldImpl<java.lang.Integer.value int:12>]
hasIdentity: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
objectId: -1
stamp: a!# java.lang.Integer
type: HotSpotType<Ljava/lang/Integer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?159 ?165 
=== Predecessor ===
- >@ <|@
instruction <@VirtualBoxing|@jdk.graal.compiler.nodes.virtual.VirtualBoxingNode>@  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a157 
values: a158 - 
=== Succesors ===
=== Usages ===
?90 ?231 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a157 values: a158 -  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
result int[-5|0xfffffffffffffffb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: -5
stableDimension: 0
stamp: i32 [-5]
stampKind: i32
value: int[-5|0xfffffffffffffffb]
=== Inputs ===
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 22]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i128 
=== Succesors ===
=== Usages ===
?165 v225 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i128  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a158 
values: i142 
=== Succesors ===
=== Usages ===
?90 ?231 ?447 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a158 values: i142  <|@  <|@
tid ?447 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?94 
values: a157 - - a157 
virtualObjectMappings: ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?94 values: a157 - - a157 virtualObjectMappings: ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 23
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.makeList
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v190 
stateDuring: ?447 
=== Succesors ===
next: v228 
=== Usages ===
?90 a237 ?231 
=== Predecessor ===
v80 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v190 stateDuring: ?447 #next: v228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
a89 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid i436 <|@
result int[123|0x7b] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 123
stableDimension: 0
stamp: i32 [123]
stampKind: i32
value: int[123|0x7b]
=== Inputs ===
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i436 
=== Succesors ===
=== Usages ===
v208 j216 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i436  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i437 
y: i207 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i437 y: i207  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v208 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v208 #trueSuccessor: v198 #falseSuccessor: v197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v1|DWORD - 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v1|DWORD - 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA address: [v1|DWORD + 123] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a972 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a972  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i437 
=== Succesors ===
=== Usages ===
v1002 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i437  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
result [v4|QWORD[.] + v12|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a199 
index: j216 
=== Succesors ===
=== Usages ===
a972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: j216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a972 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1002 
lastLocationAccess: - 
=== Succesors ===
next: v201 
=== Usages ===
a215 
=== Predecessor ===
v198 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1002 lastLocationAccess: - #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid a215 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a972 
=== Succesors ===
=== Usages ===
a204 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a972  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
a972 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v4|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j508 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j508 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j531 
=== Usages ===
v1033 v1034 
=== Predecessor ===
v548 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j531  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: - 
=== Succesors ===
=== Usages ===
j531 v533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j531 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1033 
lastLocationAccess: - 
=== Succesors ===
next: j532 
=== Usages ===
j512 v1035 v1036 a522 v1037 v1038 
=== Predecessor ===
j508 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1033 lastLocationAccess: - #next: j532  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: - 
=== Succesors ===
=== Usages ===
j532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j532 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1034 
lastLocationAccess: - 
=== Succesors ===
next: v511 
=== Usages ===
v513 
=== Predecessor ===
j531 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1034 lastLocationAccess: - #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j531 
y: j212 
=== Succesors ===
=== Usages ===
v513 v533 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j531 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j532 
y: j512 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j532 y: j512  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v513 
=== Succesors ===
trueSuccessor: v514 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
j532 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v513 #trueSuccessor: v514 #falseSuccessor: v515  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a516 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a516  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?94 
values: a157 a89 - - a157 
virtualObjectMappings: ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v981 a516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?94 values: a157 a89 - - a157 virtualObjectMappings: ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a516 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?90 
arguments: v507 
=== Succesors ===
next: v981 
=== Usages ===
v981 a529 
=== Predecessor ===
v514 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?90 arguments: v507 #next: v981  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-139377|0xfffffffffffddf8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?90 
object: a516 
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
a516 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?90 object: a516 #next: v518  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
v981 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v17|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1033 
lastLocationAccess: - 
value: j512 
stateAfter: - 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1033 lastLocationAccess: - value: j512 stateAfter: - #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
result [v15|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j531 
index: - 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j531 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1037 
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1037 #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
result [v15|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j531 
index: - 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j531 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1035 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1035 lastLocationAccess: - value: j472 stateAfter: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
result [v15|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j531 
index: - 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j531 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1038 lastLocationAccess: - value: v971 stateAfter: - #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
result [v15|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j531 
index: - 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j531 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1036 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: a522 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1036 lastLocationAccess: - value: i461 stateAfter: - #next: a522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a522 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j531 
=== Succesors ===
next: v523 
=== Usages ===
a529 
=== Predecessor ===
v538 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j531 #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
a522 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a529 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v519 
values: a516 a522 
=== Succesors ===
=== Usages ===
v1003 a226 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v519 values: a516 a522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v518 v523 
=== Succesors ===
next: v225 
=== Usages ===
a529 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v518 v523 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
result [v20|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a529 
index: - 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a529 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
lastLocationAccess: - 
value: i142 
stateAfter: - 
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1003 lastLocationAccess: - value: i142 stateAfter: - #next: v227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a226 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a226 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a529 
=== Succesors ===
next: v203 
=== Usages ===
a204 
=== Predecessor ===
v227 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a529 #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
a226 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a204 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v202 
values: a215 a226 
=== Succesors ===
=== Usages ===
a234 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v202 values: a215 a226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v201 v203 
=== Succesors ===
next: v505 
=== Usages ===
a204 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v201 v203 #next: v505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j456 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j486 
=== Usages ===
v1026 v1027 
=== Predecessor ===
v505 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j486  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j456 
index: - 
=== Succesors ===
=== Usages ===
j486 v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j456 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j486 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
lastLocationAccess: - 
=== Succesors ===
next: j487 
=== Usages ===
j464 v1028 v1029 a476 v1030 v1031 v1032 
=== Predecessor ===
j456 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 lastLocationAccess: - #next: j487  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j456 
index: - 
=== Succesors ===
=== Usages ===
j487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j456 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j487 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1027 
lastLocationAccess: - 
=== Succesors ===
next: v462 
=== Usages ===
v465 
=== Predecessor ===
j486 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1027 lastLocationAccess: - #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid j464 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j486 
y: j463 
=== Succesors ===
=== Usages ===
v465 v488 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j486 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j487 
y: j464 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j487 y: j464  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v465 
=== Succesors ===
trueSuccessor: v466 
falseSuccessor: v467 
=== Usages ===
=== Predecessor ===
j487 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v465 #trueSuccessor: v466 #falseSuccessor: v467  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a468 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a468  <|@  <|@
tid ?231 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?94 
values: a157 a89 - - a157 
virtualObjectMappings: ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v979 a468 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?94 values: a157 a89 - - a157 virtualObjectMappings: ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a468 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?231 
arguments: v455 
=== Succesors ===
next: v979 
=== Usages ===
v979 a484 
=== Predecessor ===
v466 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?231 arguments: v455 #next: v979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-128369|0xfffffffffffe0a8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?231 
object: a468 
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
a468 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?231 object: a468 #next: v470  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v24|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
lastLocationAccess: - 
value: j464 
stateAfter: - 
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1026 lastLocationAccess: - value: j464 stateAfter: - #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
result [v22|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1030 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1030 #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
result [v22|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1028 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1028 lastLocationAccess: - value: j472 stateAfter: - #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
result [v22|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1032 
lastLocationAccess: - 
value: v970 
stateAfter: - 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1032 lastLocationAccess: - value: v970 stateAfter: - #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
result [v22|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1029 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1029 lastLocationAccess: - value: i461 stateAfter: - #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
result [v22|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1031 
lastLocationAccess: - 
value: j473 
stateAfter: - 
=== Succesors ===
next: a476 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1031 lastLocationAccess: - value: j473 stateAfter: - #next: a476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a476 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j486 
=== Succesors ===
next: v477 
=== Usages ===
a484 
=== Predecessor ===
v495 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j486 #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
a476 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v22|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a484 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v471 
values: a468 a476 
=== Succesors ===
=== Usages ===
v1005 a239 v1004 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v471 values: a468 a476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v470 v477 
=== Succesors ===
next: v238 
=== Usages ===
a484 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v470 v477 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
result [v27|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a237 <|@
result v28|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n# List$Element
=== Inputs ===
value: a89 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
lastLocationAccess: - 
value: a237 
stateAfter: - 
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1005 lastLocationAccess: - value: a237 stateAfter: - #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
result [v27|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a234 <|@
result v29|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n!# java.lang.Integer
=== Inputs ===
value: a204 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
lastLocationAccess: - 
value: a234 
stateAfter: - 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1004 lastLocationAccess: - value: a234 stateAfter: - #next: v240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a239 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a239 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: a!# List$Element
=== Inputs ===
object: a484 
=== Succesors ===
next: v98 
=== Usages ===
a97 
=== Predecessor ===
v240 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a484 #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
a239 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + 12], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a97 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v95 
values: a9 a239 
=== Succesors ===
=== Usages ===
?76 a276 ?270 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v95 values: a9 a239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v96 v98 
=== Succesors ===
next: v267 
=== Usages ===
a97 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v96 v98 #next: v267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
result int[124|0x7c] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 124
stableDimension: 0
stamp: i32 [124]
stampKind: i32
value: int[124|0x7c]
=== Inputs ===
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i438 
=== Succesors ===
=== Usages ===
v250 j256 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i438  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i439 
y: i207 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i439 y: i207  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v250 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v241 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v250 #trueSuccessor: v242 #falseSuccessor: v241  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v1|DWORD + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a973 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a973  <|@  <|@
f <@~|@floating>@ <|@
tid j256 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i439 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i439  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
result [v4|QWORD[.] + v31|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a199 
index: j256 
=== Succesors ===
=== Usages ===
a973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: j256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a973 <|@
result v32|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
lastLocationAccess: - 
=== Succesors ===
next: v244 
=== Usages ===
a255 
=== Predecessor ===
v242 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1006 lastLocationAccess: - #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid a255 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a973 
=== Succesors ===
=== Usages ===
a247 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a973  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
a973 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v4|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v632  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j593 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j593 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j615 
=== Usages ===
v1046 v1047 
=== Predecessor ===
v632 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j615  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j593 
index: - 
=== Succesors ===
=== Usages ===
j615 v617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j615 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1046 
lastLocationAccess: - 
=== Succesors ===
next: j616 
=== Usages ===
j597 v1048 v1049 a607 v1050 v1051 
=== Predecessor ===
j593 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1046 lastLocationAccess: - #next: j616  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j593 
index: - 
=== Succesors ===
=== Usages ===
j616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j616 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1047 
lastLocationAccess: - 
=== Succesors ===
next: v596 
=== Usages ===
v598 
=== Predecessor ===
j615 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1047 lastLocationAccess: - #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid j597 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j615 
y: j212 
=== Succesors ===
=== Usages ===
v598 v617 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j615 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j616 
y: j597 
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j616 y: j597  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v598 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v600 
=== Usages ===
=== Predecessor ===
j616 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v598 #trueSuccessor: v599 #falseSuccessor: v600  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a601 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a601  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?101 
values: a155 a97 - - a155 
virtualObjectMappings: ?160 ?161 ?162 ?163 ?164 ?166 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v985 a601 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?101 values: a155 a97 - - a155 virtualObjectMappings: ?160 ?161 ?162 ?163 ?164 ?166 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a601 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?76 
arguments: v507 
=== Succesors ===
next: v985 
=== Usages ===
v985 a613 
=== Predecessor ===
v599 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?76 arguments: v507 #next: v985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-160881|0xfffffffffffd8b8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?76 
object: a601 
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
a601 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?76 object: a601 #next: v603  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
v985 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v36|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1046 
lastLocationAccess: - 
value: j597 
stateAfter: - 
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1046 lastLocationAccess: - value: j597 stateAfter: - #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
result [v34|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j615 
index: - 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1050 
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1050 #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
result [v34|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j615 
index: - 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1048 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1048 lastLocationAccess: - value: j472 stateAfter: - #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
result [v34|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j615 
index: - 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1051 lastLocationAccess: - value: v971 stateAfter: - #next: v622  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
result [v34|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j615 
index: - 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: a607 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1049 lastLocationAccess: - value: i461 stateAfter: - #next: a607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a607 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j615 
=== Succesors ===
next: v608 
=== Usages ===
a613 
=== Predecessor ===
v622 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j615 #next: v608  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
a607 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v34|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a613 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v604 
values: a601 a607 
=== Succesors ===
=== Usages ===
v1007 a265 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v604 values: a601 a607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v603 v608 
=== Succesors ===
next: v264 
=== Usages ===
a613 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v603 v608 #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
result [v39|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a613 
index: - 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a613 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
lastLocationAccess: - 
value: i140 
stateAfter: - 
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1007 lastLocationAccess: - value: i140 stateAfter: - #next: v266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a265 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a265 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a613 
=== Succesors ===
next: v246 
=== Usages ===
a247 
=== Predecessor ===
v266 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a613 #next: v246  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
a265 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a247 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v245 
values: a255 a265 
=== Succesors ===
=== Usages ===
a273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v245 values: a255 a265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v244 v246 
=== Succesors ===
next: v591 
=== Usages ===
a247 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v244 v246 #next: v591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j550 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j550 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j573 
=== Usages ===
v1039 v1040 
=== Predecessor ===
v591 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j573  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j550 
index: - 
=== Succesors ===
=== Usages ===
j573 v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j550 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j573 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1039 
lastLocationAccess: - 
=== Succesors ===
next: j574 
=== Usages ===
j554 v1041 v1042 a564 v1043 v1044 v1045 
=== Predecessor ===
j550 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1039 lastLocationAccess: - #next: j574  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j550 
index: - 
=== Succesors ===
=== Usages ===
j574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j550 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j574 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
v555 
=== Predecessor ===
j573 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j573 
y: j463 
=== Succesors ===
=== Usages ===
v555 v575 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j573 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j574 
y: j554 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j574 y: j554  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v556 
falseSuccessor: v557 
=== Usages ===
=== Predecessor ===
j574 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v556 #falseSuccessor: v557  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a558 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a558  <|@  <|@
tid ?270 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?101 
values: a155 a97 - - a155 
virtualObjectMappings: ?160 ?161 ?162 ?163 ?164 ?166 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v983 a558 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?101 values: a155 a97 - - a155 virtualObjectMappings: ?160 ?161 ?162 ?163 ?164 ?166 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a558 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?270 
arguments: v455 
=== Succesors ===
next: v983 
=== Usages ===
v983 a571 
=== Predecessor ===
v556 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?270 arguments: v455 #next: v983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-150385|0xfffffffffffdb48f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?270 
object: a558 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
a558 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?270 object: a558 #next: v560  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v983 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v43|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1039 
lastLocationAccess: - 
value: j554 
stateAfter: - 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1039 lastLocationAccess: - value: j554 stateAfter: - #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
result [v41|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j573 
index: - 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1043 
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1043 #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
result [v41|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j573 
index: - 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1041 lastLocationAccess: - value: j472 stateAfter: - #next: v579  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
result [v41|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j573 
index: - 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1045 
lastLocationAccess: - 
value: v970 
stateAfter: - 
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1045 lastLocationAccess: - value: v970 stateAfter: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
result [v41|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j573 
index: - 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1042 lastLocationAccess: - value: i461 stateAfter: - #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
result [v41|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j573 
index: - 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1044 
lastLocationAccess: - 
value: j473 
stateAfter: - 
=== Succesors ===
next: a564 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1044 lastLocationAccess: - value: j473 stateAfter: - #next: a564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a564 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j573 
=== Succesors ===
next: v565 
=== Usages ===
a571 
=== Predecessor ===
v581 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j573 #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
a564 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v41|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a571 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v561 
values: a558 a564 
=== Succesors ===
=== Usages ===
v1009 a278 v1008 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v561 values: a558 a564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v560 v565 
=== Succesors ===
next: v277 
=== Usages ===
a571 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v560 v565 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
result [v46|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a571 
index: - 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a571 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a276 <|@
result v47|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n# List$Element
=== Inputs ===
value: a97 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
lastLocationAccess: - 
value: a276 
stateAfter: - 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1009 lastLocationAccess: - value: a276 stateAfter: - #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
result [v46|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a571 
index: - 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a571 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a273 <|@
result v48|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n!# java.lang.Integer
=== Inputs ===
value: a247 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
lastLocationAccess: - 
value: a273 
stateAfter: - 
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1008 lastLocationAccess: - value: a273 stateAfter: - #next: v279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a278 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a278 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: a!# List$Element
=== Inputs ===
object: a571 
=== Succesors ===
next: v105 
=== Usages ===
a104 
=== Predecessor ===
v279 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a571 #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
a278 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + 16], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + 12], y: v48|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a104 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v102 
values: a9 a278 
=== Succesors ===
=== Usages ===
?64 a315 ?309 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v102 values: a9 a278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v103 v105 
=== Succesors ===
next: v306 
=== Usages ===
a104 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v103 v105 #next: v306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
result int[125|0x7d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 125
stableDimension: 0
stamp: i32 [125]
stampKind: i32
value: int[125|0x7d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i441 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i440 
=== Succesors ===
=== Usages ===
v289 j295 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i440  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i441 
y: i207 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i441 y: i207  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v289 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v280 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v289 #trueSuccessor: v281 #falseSuccessor: v280  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v1|DWORD + 125] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a974 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a974  <|@  <|@
f <@~|@floating>@ <|@
tid j295 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i441 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i441  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
result [v4|QWORD[.] + v50|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a199 
index: j295 
=== Succesors ===
=== Usages ===
a974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: j295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a974 <|@
result v51|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
lastLocationAccess: - 
=== Succesors ===
next: v283 
=== Usages ===
a294 
=== Predecessor ===
v281 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1010 lastLocationAccess: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid a294 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a974 
=== Succesors ===
=== Usages ===
a286 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a974  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
a974 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v4|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j677 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j677 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j699 
=== Usages ===
v1059 v1060 
=== Predecessor ===
v716 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j699  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j677 
index: - 
=== Succesors ===
=== Usages ===
j699 v701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j677 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j699 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
lastLocationAccess: - 
=== Succesors ===
next: j700 
=== Usages ===
j681 v1061 v1062 a691 v1063 v1064 
=== Predecessor ===
j677 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1059 lastLocationAccess: - #next: j700  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j677 
index: - 
=== Succesors ===
=== Usages ===
j700 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j677 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j700 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1060 
lastLocationAccess: - 
=== Succesors ===
next: v680 
=== Usages ===
v682 
=== Predecessor ===
j699 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1060 lastLocationAccess: - #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j699 
y: j212 
=== Succesors ===
=== Usages ===
v682 v701 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j699 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j700 
y: j681 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j700 y: j681  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v682 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v684 
=== Usages ===
=== Predecessor ===
j700 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v682 #trueSuccessor: v683 #falseSuccessor: v684  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v54|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a685 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a685  <|@  <|@
tid ?64 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?108 
values: a153 a104 - - a153 
virtualObjectMappings: ?161 ?162 ?163 ?164 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v989 a685 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?108 values: a153 a104 - - a153 virtualObjectMappings: ?161 ?162 ?163 ?164 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a685 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?64 
arguments: v507 
=== Succesors ===
next: v989 
=== Usages ===
v989 a697 
=== Predecessor ===
v683 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?64 arguments: v507 #next: v989  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-182385|0xfffffffffffd378f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?64 
object: a685 
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
a685 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?64 object: a685 #next: v687  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v989 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v55|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
lastLocationAccess: - 
value: j681 
stateAfter: - 
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1059 lastLocationAccess: - value: j681 stateAfter: - #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
result [v53|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j699 
index: - 
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1063 
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1063 #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
result [v53|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j699 
index: - 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1061 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1061 lastLocationAccess: - value: j472 stateAfter: - #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
result [v53|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j699 
index: - 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1064 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1064 lastLocationAccess: - value: v971 stateAfter: - #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid v1062 <|@
result [v53|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j699 
index: - 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1062 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: a691 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1062 lastLocationAccess: - value: i461 stateAfter: - #next: a691  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a691 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j699 
=== Succesors ===
next: v692 
=== Usages ===
a697 
=== Predecessor ===
v706 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j699 #next: v692  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
a691 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v53|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a697 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v688 
values: a685 a691 
=== Succesors ===
=== Usages ===
v1011 a304 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v688 values: a685 a691  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v687 v692 
=== Succesors ===
next: v303 
=== Usages ===
a697 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v687 v692 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
result [v58|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a697 
index: - 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a697 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1011 
lastLocationAccess: - 
value: i138 
stateAfter: - 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1011 lastLocationAccess: - value: i138 stateAfter: - #next: v305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a304 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a304 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a697 
=== Succesors ===
next: v285 
=== Usages ===
a286 
=== Predecessor ===
v305 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a697 #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
a304 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a286 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v284 
values: a294 a304 
=== Succesors ===
=== Usages ===
a312 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v284 values: a294 a304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v283 v285 
=== Succesors ===
next: v675 
=== Usages ===
a286 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v283 v285 #next: v675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j634 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j634 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j657 
=== Usages ===
v1052 v1053 
=== Predecessor ===
v675 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j657  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j634 
index: - 
=== Succesors ===
=== Usages ===
j657 v659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j634 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j657 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
lastLocationAccess: - 
=== Succesors ===
next: j658 
=== Usages ===
j638 v1054 v1055 a648 v1056 v1057 v1058 
=== Predecessor ===
j634 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1052 lastLocationAccess: - #next: j658  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j634 
index: - 
=== Succesors ===
=== Usages ===
j658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j634 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j658 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
lastLocationAccess: - 
=== Succesors ===
next: v637 
=== Usages ===
v639 
=== Predecessor ===
j657 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1053 lastLocationAccess: - #next: v637  <|@  <|@
f <@~|@floating>@ <|@
tid j638 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j657 
y: j463 
=== Succesors ===
=== Usages ===
v639 v659 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j657 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j658 
y: j638 
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j658 y: j638  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v639 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v641 
=== Usages ===
=== Predecessor ===
j658 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v639 #trueSuccessor: v640 #falseSuccessor: v641  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a642 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a642  <|@  <|@
tid ?309 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?108 
values: a153 a104 - - a153 
virtualObjectMappings: ?161 ?162 ?163 ?164 ?167 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v987 a642 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?108 values: a153 a104 - - a153 virtualObjectMappings: ?161 ?162 ?163 ?164 ?167 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a642 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?309 
arguments: v455 
=== Succesors ===
next: v987 
=== Usages ===
v987 a655 
=== Predecessor ===
v640 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?309 arguments: v455 #next: v987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-171889|0xfffffffffffd608f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?309 
object: a642 
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
a642 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?309 object: a642 #next: v644  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
v987 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v62|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|QWORD[.]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
lastLocationAccess: - 
value: j638 
stateAfter: - 
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1052 lastLocationAccess: - value: j638 stateAfter: - #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
result [v60|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: - 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1056 
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1056 #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
result [v60|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: - 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1054 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1054 lastLocationAccess: - value: j472 stateAfter: - #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
result [v60|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: - 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1058 
lastLocationAccess: - 
value: v970 
stateAfter: - 
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1058 lastLocationAccess: - value: v970 stateAfter: - #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
result [v60|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: - 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1055 lastLocationAccess: - value: i461 stateAfter: - #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
result [v60|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: - 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1057 
lastLocationAccess: - 
value: j473 
stateAfter: - 
=== Succesors ===
next: a648 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1057 lastLocationAccess: - value: j473 stateAfter: - #next: a648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a648 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j657 
=== Succesors ===
next: v649 
=== Usages ===
a655 
=== Predecessor ===
v665 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j657 #next: v649  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
a648 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a655 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v645 
values: a642 a648 
=== Succesors ===
=== Usages ===
v1013 a317 v1012 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v645 values: a642 a648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v644 v649 
=== Succesors ===
next: v316 
=== Usages ===
a655 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v644 v649 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v1013 <|@
result [v65|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a655 
index: - 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a655 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a315 <|@
result v66|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n# List$Element
=== Inputs ===
value: a104 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
lastLocationAccess: - 
value: a315 
stateAfter: - 
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1013 lastLocationAccess: - value: a315 stateAfter: - #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
result [v65|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a655 
index: - 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a655 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a312 <|@
result v67|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n!# java.lang.Integer
=== Inputs ===
value: a286 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1012 
lastLocationAccess: - 
value: a312 
stateAfter: - 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1012 lastLocationAccess: - value: a312 stateAfter: - #next: v318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a317 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a317 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: a!# List$Element
=== Inputs ===
object: a655 
=== Succesors ===
next: v112 
=== Usages ===
a111 
=== Predecessor ===
v318 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a655 #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
a317 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + 16], y: v66|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + 12], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a111 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v109 
values: a9 a317 
=== Succesors ===
=== Usages ===
?52 a354 ?348 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v109 values: a9 a317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v110 v112 
=== Succesors ===
next: v345 
=== Usages ===
a111 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v110 v112 #next: v345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid i442 <|@
result int[126|0x7e] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 126
stableDimension: 0
stamp: i32 [126]
stampKind: i32
value: int[126|0x7e]
=== Inputs ===
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i443 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i442 
=== Succesors ===
=== Usages ===
v328 j334 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i442  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i443 
y: i207 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i443 y: i207  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v328 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v319 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v328 #trueSuccessor: v320 #falseSuccessor: v319  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA address: [v1|DWORD + 126] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a975 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a975  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i443 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i443  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
result [v4|QWORD[.] + v69|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a199 
index: j334 
=== Succesors ===
=== Usages ===
a975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: j334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a975 <|@
result v70|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
lastLocationAccess: - 
=== Succesors ===
next: v322 
=== Usages ===
a333 
=== Predecessor ===
v320 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1014 lastLocationAccess: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid a333 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a975 
=== Succesors ===
=== Usages ===
a325 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a975  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
a975 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV input: [v4|QWORD[.] + v69|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j761 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j761 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j783 
=== Usages ===
v1072 v1073 
=== Predecessor ===
v800 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j783  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j761 
index: - 
=== Succesors ===
=== Usages ===
j783 v785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j761 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j783 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1072 
lastLocationAccess: - 
=== Succesors ===
next: j784 
=== Usages ===
j765 v1074 v1075 a775 v1076 v1077 
=== Predecessor ===
j761 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1072 lastLocationAccess: - #next: j784  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j761 
index: - 
=== Succesors ===
=== Usages ===
j784 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j761 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j784 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
lastLocationAccess: - 
=== Succesors ===
next: v764 
=== Usages ===
v766 
=== Predecessor ===
j783 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1073 lastLocationAccess: - #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j783 
y: j212 
=== Succesors ===
=== Usages ===
v766 v785 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j783 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j784 
y: j765 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j784 y: j765  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v766 
=== Succesors ===
trueSuccessor: v767 
falseSuccessor: v768 
=== Usages ===
=== Predecessor ===
j784 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v766 #trueSuccessor: v767 #falseSuccessor: v768  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA address: [v72|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v73|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a769 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a769  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?115 
values: a151 a111 - - a151 
virtualObjectMappings: ?162 ?163 ?164 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v993 a769 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?115 values: a151 a111 - - a151 virtualObjectMappings: ?162 ?163 ?164 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a769 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?52 
arguments: v507 
=== Succesors ===
next: v993 
=== Usages ===
v993 a781 
=== Predecessor ===
v767 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?52 arguments: v507 #next: v993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-203889|0xfffffffffffce38f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?52 
object: a769 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
a769 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?52 object: a769 #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
v993 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v74|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v74|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1072 
lastLocationAccess: - 
value: j765 
stateAfter: - 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1072 lastLocationAccess: - value: j765 stateAfter: - #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
result [v72|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1076 
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1076 #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
result [v72|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1074 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v789 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1074 lastLocationAccess: - value: j472 stateAfter: - #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
result [v72|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1077 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1077 lastLocationAccess: - value: v971 stateAfter: - #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
result [v72|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j783 
index: - 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1075 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: a775 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1075 lastLocationAccess: - value: i461 stateAfter: - #next: a775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a775 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j783 
=== Succesors ===
next: v776 
=== Usages ===
a781 
=== Predecessor ===
v790 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j783 #next: v776  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
a775 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v72|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a781 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v772 
values: a769 a775 
=== Succesors ===
=== Usages ===
v1015 a343 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v772 values: a769 a775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v771 v776 
=== Succesors ===
next: v342 
=== Usages ===
a781 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v771 v776 #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v1015 <|@
result [v77|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a781 
index: - 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a781 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
lastLocationAccess: - 
value: i136 
stateAfter: - 
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1015 lastLocationAccess: - value: i136 stateAfter: - #next: v344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a343 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a343 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a781 
=== Succesors ===
next: v324 
=== Usages ===
a325 
=== Predecessor ===
v344 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a781 #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
a343 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v77|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a325 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v323 
values: a333 a343 
=== Succesors ===
=== Usages ===
a351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v323 values: a333 a343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v322 v324 
=== Succesors ===
next: v759 
=== Usages ===
a325 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v322 v324 #next: v759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j718 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j718 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j741 
=== Usages ===
v1065 v1066 
=== Predecessor ===
v759 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j741  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j718 
index: - 
=== Succesors ===
=== Usages ===
j741 v743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j718 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j741 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1065 
lastLocationAccess: - 
=== Succesors ===
next: j742 
=== Usages ===
j722 v1067 v1068 a732 v1069 v1070 v1071 
=== Predecessor ===
j718 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1065 lastLocationAccess: - #next: j742  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j718 
index: - 
=== Succesors ===
=== Usages ===
j742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j718 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j742 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
lastLocationAccess: - 
=== Succesors ===
next: v721 
=== Usages ===
v723 
=== Predecessor ===
j741 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1066 lastLocationAccess: - #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid j722 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j741 
y: j463 
=== Succesors ===
=== Usages ===
v723 v743 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j741 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j742 
y: j722 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j742 y: j722  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v723 
=== Succesors ===
trueSuccessor: v724 
falseSuccessor: v725 
=== Usages ===
=== Predecessor ===
j742 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v723 #trueSuccessor: v724 #falseSuccessor: v725  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA address: [v79|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a726 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a726  <|@  <|@
tid ?348 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?115 
values: a151 a111 - - a151 
virtualObjectMappings: ?162 ?163 ?164 ?168 ?169 ?170 
=== Succesors ===
=== Usages ===
v991 a726 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?115 values: a151 a111 - - a151 virtualObjectMappings: ?162 ?163 ?164 ?168 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a726 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?348 
arguments: v455 
=== Succesors ===
next: v991 
=== Usages ===
v991 a739 
=== Predecessor ===
v724 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?348 arguments: v455 #next: v991  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-193393|0xfffffffffffd0c8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?348 
object: a726 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
a726 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?348 object: a726 #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
v991 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v81|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|QWORD[.]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1065 
lastLocationAccess: - 
value: j722 
stateAfter: - 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1065 lastLocationAccess: - value: j722 stateAfter: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
result [v79|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j741 
index: - 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j741 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1069 
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1069 #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
result [v79|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j741 
index: - 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j741 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1067 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1067 lastLocationAccess: - value: j472 stateAfter: - #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
result [v79|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j741 
index: - 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j741 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1071 
lastLocationAccess: - 
value: v970 
stateAfter: - 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1071 lastLocationAccess: - value: v970 stateAfter: - #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
result [v79|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j741 
index: - 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j741 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1068 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1068 lastLocationAccess: - value: i461 stateAfter: - #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
result [v79|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j741 
index: - 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j741 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
lastLocationAccess: - 
value: j473 
stateAfter: - 
=== Succesors ===
next: a732 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1070 lastLocationAccess: - value: j473 stateAfter: - #next: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a732 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j741 
=== Succesors ===
next: v733 
=== Usages ===
a739 
=== Predecessor ===
v749 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j741 #next: v733  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
a732 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v79|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v79|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v83|QWORD[.]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a739 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v729 
values: a726 a732 
=== Succesors ===
=== Usages ===
v1017 a356 v1016 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v729 values: a726 a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v728 v733 
=== Succesors ===
next: v355 
=== Usages ===
a739 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v728 v733 #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
result [v84|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a739 
index: - 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a739 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a354 <|@
result v85|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n# List$Element
=== Inputs ===
value: a111 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1017 
lastLocationAccess: - 
value: a354 
stateAfter: - 
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1017 lastLocationAccess: - value: a354 stateAfter: - #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
result [v84|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a739 
index: - 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a739 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a351 <|@
result v86|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n!# java.lang.Integer
=== Inputs ===
value: a325 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1016 
lastLocationAccess: - 
value: a351 
stateAfter: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1016 lastLocationAccess: - value: a351 stateAfter: - #next: v357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a356 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a356 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: a!# List$Element
=== Inputs ===
object: a739 
=== Succesors ===
next: v119 
=== Usages ===
a118 
=== Predecessor ===
v357 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a739 #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
a356 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = COMPRESSPOINTER (input: v68|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD[.] + 16], y: v85|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD[.] + 12], y: v86|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v84|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a118 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v116 
values: a9 a356 
=== Succesors ===
=== Usages ===
?39 a393 ?387 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v116 values: a9 a356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v117 v119 
=== Succesors ===
next: v384 
=== Usages ===
a118 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v117 v119 #next: v384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid i444 <|@
result int[127|0x7f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
rawvalue: 127
stableDimension: 0
stamp: i32 [127]
stampKind: i32
value: int[127|0x7f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i445 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i444 
=== Succesors ===
=== Usages ===
v367 j373 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i444  <|@  <|@
f <@~|@floating>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i445 
y: i207 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i445 y: i207  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v367 
=== Succesors ===
trueSuccessor: v359 
falseSuccessor: v358 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v367 #trueSuccessor: v359 #falseSuccessor: v358  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v1|DWORD + 127] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a976 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a976  <|@  <|@
f <@~|@floating>@ <|@
tid j373 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i445 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i445  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
result [v4|QWORD[.] + v88|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a199 
index: j373 
=== Succesors ===
=== Usages ===
a976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a976 <|@
result v89|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1018 
lastLocationAccess: - 
=== Succesors ===
next: v361 
=== Usages ===
a372 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1018 lastLocationAccess: - #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid a372 <|@
result v90|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a976 
=== Succesors ===
=== Usages ===
a364 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a976  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
a976 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[_] = MOV input: [v4|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j845 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j845 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j867 
=== Usages ===
v1085 v1086 
=== Predecessor ===
v884 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j867  <|@  <|@
f <@~|@floating>@ <|@
tid v1085 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
j867 v869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j867 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1085 
lastLocationAccess: - 
=== Succesors ===
next: j868 
=== Usages ===
j849 v1087 v1088 a859 v1089 v1090 
=== Predecessor ===
j845 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1085 lastLocationAccess: - #next: j868  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
j868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j868 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1086 
lastLocationAccess: - 
=== Succesors ===
next: v848 
=== Usages ===
v850 
=== Predecessor ===
j867 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1086 lastLocationAccess: - #next: v848  <|@  <|@
f <@~|@floating>@ <|@
tid j849 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j867 
y: j212 
=== Succesors ===
=== Usages ===
v850 v869 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j867 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j868 
y: j849 
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j868 y: j849  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v850 
=== Succesors ===
trueSuccessor: v851 
falseSuccessor: v852 
=== Usages ===
=== Predecessor ===
j868 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v850 #trueSuccessor: v851 #falseSuccessor: v852  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA address: [v91|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v92|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a853 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a853  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?130 
values: a149 a118 - - a149 
virtualObjectMappings: ?163 ?164 ?169 ?170 
=== Succesors ===
=== Usages ===
v997 a853 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?130 values: a149 a118 - - a149 virtualObjectMappings: ?163 ?164 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a853 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?39 
arguments: v507 
=== Succesors ===
next: v997 
=== Usages ===
v997 a865 
=== Predecessor ===
v851 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?39 arguments: v507 #next: v997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-225393|0xfffffffffffc8f8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?39 
object: a853 
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
a853 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?39 object: a853 #next: v855  <|@  <|@
f <@*|@fixed>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
v997 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v93|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v93|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1085 
lastLocationAccess: - 
value: j849 
stateAfter: - 
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1085 lastLocationAccess: - value: j849 stateAfter: - #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
result [v91|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1089 
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1089 #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
result [v91|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1087 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1087 lastLocationAccess: - value: j472 stateAfter: - #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
result [v91|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1090 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1090 lastLocationAccess: - value: v971 stateAfter: - #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
result [v91|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1088 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: a859 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1088 lastLocationAccess: - value: i461 stateAfter: - #next: a859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a859 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j867 
=== Succesors ===
next: v860 
=== Usages ===
a865 
=== Predecessor ===
v874 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j867 #next: v860  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
a859 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v91|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v95|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a865 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v856 
values: a853 a859 
=== Succesors ===
=== Usages ===
v1019 a382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v856 values: a853 a859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v855 v860 
=== Succesors ===
next: v381 
=== Usages ===
a865 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v855 v860 #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
result [v96|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a865 
index: - 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a865 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1019 
lastLocationAccess: - 
value: i19 
stateAfter: - 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1019 lastLocationAccess: - value: i19 stateAfter: - #next: v383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a382 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a382 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a865 
=== Succesors ===
next: v363 
=== Usages ===
a364 
=== Predecessor ===
v383 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a865 #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
a382 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a364 <|@
result v97|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v362 
values: a372 a382 
=== Succesors ===
=== Usages ===
a390 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v362 values: a372 a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v361 v363 
=== Succesors ===
next: v843 
=== Usages ===
a364 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v361 v363 #next: v843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j802 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j802 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j825 
=== Usages ===
v1078 v1079 
=== Predecessor ===
v843 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j825  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j802 
index: - 
=== Succesors ===
=== Usages ===
j825 v827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j802 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j825 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1078 
lastLocationAccess: - 
=== Succesors ===
next: j826 
=== Usages ===
j806 v1080 v1081 a816 v1082 v1083 v1084 
=== Predecessor ===
j802 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1078 lastLocationAccess: - #next: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j802 
index: - 
=== Succesors ===
=== Usages ===
j826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j802 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j826 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1079 
lastLocationAccess: - 
=== Succesors ===
next: v805 
=== Usages ===
v807 
=== Predecessor ===
j825 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1079 lastLocationAccess: - #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid j806 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: i64
=== Inputs ===
x: j825 
y: j463 
=== Succesors ===
=== Usages ===
v807 v827 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j825 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j826 
y: j806 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j826 y: j806  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v808 
falseSuccessor: v809 
=== Usages ===
=== Predecessor ===
j826 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v808 #falseSuccessor: v809  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = LEA address: [v98|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v99|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a810 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a810  <|@  <|@
tid ?387 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?130 
values: a149 a118 - - a149 
virtualObjectMappings: ?163 ?164 ?169 ?170 
=== Succesors ===
=== Usages ===
v995 a810 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?130 values: a149 a118 - - a149 virtualObjectMappings: ?163 ?164 ?169 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a810 <|@
result v100|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?387 
arguments: v455 
=== Succesors ===
next: v995 
=== Usages ===
v995 a823 
=== Predecessor ===
v808 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?387 arguments: v455 #next: v995  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-214897|0xfffffffffffcb88f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?387 
object: a810 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
a810 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?387 object: a810 #next: v812  <|@  <|@
f <@*|@fixed>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
v995 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v100|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v100|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1078 
lastLocationAccess: - 
value: j806 
stateAfter: - 
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1078 lastLocationAccess: - value: j806 stateAfter: - #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
result [v98|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
address: v1082 
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v827 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1082 #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
result [v98|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1080 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1080 lastLocationAccess: - value: j472 stateAfter: - #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
result [v98|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1084 
lastLocationAccess: - 
value: v970 
stateAfter: - 
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1084 lastLocationAccess: - value: v970 stateAfter: - #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
result [v98|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1081 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1081 lastLocationAccess: - value: i461 stateAfter: - #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
result [v98|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1083 
lastLocationAccess: - 
value: j473 
stateAfter: - 
=== Succesors ===
next: a816 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1083 lastLocationAccess: - value: j473 stateAfter: - #next: a816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a816 <|@
result v102|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j825 
=== Succesors ===
next: v817 
=== Usages ===
a823 
=== Predecessor ===
v833 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j825 #next: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
a816 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v98|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v102|QWORD[.]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a823 <|@
result v103|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v813 
values: a810 a816 
=== Succesors ===
=== Usages ===
v1021 a395 v1020 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v813 values: a810 a816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v812 v817 
=== Succesors ===
next: v394 
=== Usages ===
a823 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v812 v817 #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid v1021 <|@
result [v103|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a393 <|@
result v104|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n# List$Element
=== Inputs ===
value: a118 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1021 
lastLocationAccess: - 
value: a393 
stateAfter: - 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1021 lastLocationAccess: - value: a393 stateAfter: - #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
result [v103|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a390 <|@
result v105|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
op: Compress
stamp: n!# java.lang.Integer
=== Inputs ===
value: a364 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
at List.makeList(int) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1020 
lastLocationAccess: - 
value: a390 
stateAfter: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1020 lastLocationAccess: - value: a390 stateAfter: - #next: v396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a395 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a395 <|@
result v103|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: a!# List$Element
=== Inputs ===
object: a823 
=== Succesors ===
next: v134 
=== Usages ===
a133 
=== Predecessor ===
v396 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a823 #next: v134  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
a395 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[.] + 16], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[_] = COMPRESSPOINTER (input: v97|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[.] + 12], y: v105|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a133 <|@
result v106|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v131 
values: a9 a395 
=== Succesors ===
=== Usages ===
?22 a432 ?426 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v131 values: a9 a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v132 v134 
=== Succesors ===
next: v423 
=== Usages ===
a133 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v132 v134 #next: v423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
at List.makeList(int) [bci: 23]
rawvalue: 128
stableDimension: 0
stamp: i32 [128]
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: i32
=== Inputs ===
x: i2 
y: i196 
=== Succesors ===
=== Usages ===
v406 j412 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i196  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i207 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i399 y: i207  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v406 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v406 #trueSuccessor: v398 #falseSuccessor: v397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = LEA address: [v1|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v107|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a977 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a977  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i399 
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i399  <|@  <|@
f <@~|@floating>@ <|@
tid v1022 <|@
result [v4|QWORD[.] + v107|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a199 
index: j412 
=== Succesors ===
=== Usages ===
a977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a199 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a977 <|@
result v108|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1022 
lastLocationAccess: - 
=== Succesors ===
next: v400 
=== Usages ===
a411 
=== Predecessor ===
v398 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1022 lastLocationAccess: - #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid a411 <|@
result v109|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a977 
=== Succesors ===
=== Usages ===
a403 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a977  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
a977 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[_] = MOV input: [v4|QWORD[.] + v107|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v109|QWORD[.]] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: j929 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j929 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j951 
=== Usages ===
v1098 v1099 
=== Predecessor ===
v968 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j951  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j929 
index: - 
=== Succesors ===
=== Usages ===
j951 v953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j951 <|@
result v110|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1098 
lastLocationAccess: - 
=== Succesors ===
next: j952 
=== Usages ===
j933 v1100 v1101 a943 v1102 v1103 
=== Predecessor ===
j929 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1098 lastLocationAccess: - #next: j952  <|@  <|@
f <@~|@floating>@ <|@
tid v1099 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j929 
index: - 
=== Succesors ===
=== Usages ===
j952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j952 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1099 
lastLocationAccess: - 
=== Succesors ===
next: v932 
=== Usages ===
v934 
=== Predecessor ===
j951 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1099 lastLocationAccess: - #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid j933 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: i64
=== Inputs ===
x: j951 
y: j212 
=== Succesors ===
=== Usages ===
v934 v953 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j951 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j952 
y: j933 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j952 y: j933  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v934 
=== Succesors ===
trueSuccessor: v935 
falseSuccessor: v936 
=== Usages ===
=== Predecessor ===
j952 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v934 #trueSuccessor: v935 #falseSuccessor: v936  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = LEA address: [v110|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v111|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a937 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a937  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at List.makeList(int) [bci: 23]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a147 a133 - - a147 
virtualObjectMappings: ?164 ?170 
=== Succesors ===
=== Usages ===
v1001 a937 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a147 a133 - - a147 virtualObjectMappings: ?164 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a937 <|@
result v112|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?22 
arguments: v507 
=== Succesors ===
next: v1001 
=== Usages ===
v1001 a949 
=== Predecessor ===
v935 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?22 arguments: v507 #next: v1001  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-246897|0xfffffffffffc3b8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?22 
object: a937 
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
a937 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?22 object: a937 #next: v939  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v1001 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v112|QWORD[.]] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v112|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1098 
lastLocationAccess: - 
value: j933 
stateAfter: - 
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1098 lastLocationAccess: - value: j933 stateAfter: - #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid v1102 <|@
result [v110|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j951 
index: - 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
address: v1102 
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1102 #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
result [v110|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j951 
index: - 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1100 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v957 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1100 lastLocationAccess: - value: j472 stateAfter: - #next: v957  <|@  <|@
f <@~|@floating>@ <|@
tid v1103 <|@
result [v110|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j951 
index: - 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1103 
lastLocationAccess: - 
value: v971 
stateAfter: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1103 lastLocationAccess: - value: v971 stateAfter: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1101 <|@
result [v110|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j951 
index: - 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1101 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: a943 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1101 lastLocationAccess: - value: i461 stateAfter: - #next: a943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a943 <|@
result v114|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j951 
=== Succesors ===
next: v944 
=== Usages ===
a949 
=== Predecessor ===
v958 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j951 #next: v944  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
a943 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v110|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a949 <|@
result v115|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v940 
values: a937 a943 
=== Succesors ===
=== Usages ===
v1023 a421 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v940 values: a937 a943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v939 v944 
=== Succesors ===
next: v420 
=== Usages ===
a949 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v939 v944 #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid v1023 <|@
result [v115|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a949 
index: - 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a949 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1023 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1023 lastLocationAccess: - value: i2 stateAfter: - #next: v422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a421 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a421 <|@
result v115|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a949 
=== Succesors ===
next: v402 
=== Usages ===
a403 
=== Predecessor ===
v422 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a949 #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
a421 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v115|QWORD[.]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a403 <|@
result v116|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v401 
values: a411 a421 
=== Succesors ===
=== Usages ===
a429 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v401 values: a411 a421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v400 v402 
=== Succesors ===
next: v927 
=== Usages ===
a403 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v400 v402 #next: v927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j886 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j886 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j909 
=== Usages ===
v1091 v1092 
=== Predecessor ===
v927 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j909  <|@  <|@
f <@~|@floating>@ <|@
tid v1091 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j886 
index: - 
=== Succesors ===
=== Usages ===
j909 v911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j909 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1091 
lastLocationAccess: - 
=== Succesors ===
next: j910 
=== Usages ===
j890 v1093 v1094 a900 v1095 v1096 v1097 
=== Predecessor ===
j886 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1091 lastLocationAccess: - #next: j910  <|@  <|@
f <@~|@floating>@ <|@
tid v1092 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j886 
index: - 
=== Succesors ===
=== Usages ===
j910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j910 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1092 
lastLocationAccess: - 
=== Succesors ===
next: v889 
=== Usages ===
v891 
=== Predecessor ===
j909 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1092 lastLocationAccess: - #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid j890 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 6]
stamp: i64
=== Inputs ===
x: j909 
y: j463 
=== Succesors ===
=== Usages ===
v891 v911 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j909 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at List.makeList(int) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j910 
y: j890 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j910 y: j890  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v891 
=== Succesors ===
trueSuccessor: v892 
falseSuccessor: v893 
=== Usages ===
=== Predecessor ===
j910 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v891 #trueSuccessor: v892 #falseSuccessor: v893  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = LEA address: [v117|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v118|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a894 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a894  <|@  <|@
tid ?426 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.makeList(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.makeList(int) [bci: 11]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a147 a133 - - a147 
virtualObjectMappings: ?164 ?170 
=== Succesors ===
=== Usages ===
v999 a894 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a147 a133 - - a147 virtualObjectMappings: ?164 ?170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a894 <|@
result v119|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?426 
arguments: v455 
=== Succesors ===
next: v999 
=== Usages ===
v999 a907 
=== Predecessor ===
v892 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?426 arguments: v455 #next: v999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-236401|0xfffffffffffc648f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?426 
object: a894 
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
a894 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?426 object: a894 #next: v896  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v999 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v119|QWORD[.]] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v119|QWORD[.]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v911  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1091 
lastLocationAccess: - 
value: j890 
stateAfter: - 
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1091 lastLocationAccess: - value: j890 stateAfter: - #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
result [v117|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j909 
index: - 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
address: v1095 
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1095 #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v1093 <|@
result [v117|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j909 
index: - 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1093 
lastLocationAccess: - 
value: j472 
stateAfter: - 
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1093 lastLocationAccess: - value: j472 stateAfter: - #next: v915  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
result [v117|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j909 
index: - 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1097 
lastLocationAccess: - 
value: v970 
stateAfter: - 
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1097 lastLocationAccess: - value: v970 stateAfter: - #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
result [v117|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j909 
index: - 
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1094 
lastLocationAccess: - 
value: i461 
stateAfter: - 
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1094 lastLocationAccess: - value: i461 stateAfter: - #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
result [v117|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j909 
index: - 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1096 
lastLocationAccess: - 
value: j473 
stateAfter: - 
=== Succesors ===
next: a900 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1096 lastLocationAccess: - value: j473 stateAfter: - #next: a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a900 <|@
result v121|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j909 
=== Succesors ===
next: v901 
=== Usages ===
a907 
=== Predecessor ===
v917 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j909 #next: v901  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
a900 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v117|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a907 <|@
result v122|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v897 
values: a894 a900 
=== Succesors ===
=== Usages ===
v1025 a434 v1024 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v897 values: a894 a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at List.makeList(int) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v896 v901 
=== Succesors ===
next: v433 
=== Usages ===
a907 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v896 v901 #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
result [v122|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a907 
index: - 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a907 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a432 <|@
result v123|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
op: Compress
stamp: n# List$Element
=== Inputs ===
value: a133 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
lastLocationAccess: - 
value: a432 
stateAfter: - 
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1025 lastLocationAccess: - value: a432 stateAfter: - #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
result [v122|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a907 
index: - 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a907 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a429 <|@
result v124|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List.makeList(int) [bci: 6]
op: Compress
stamp: n!# java.lang.Integer
=== Inputs ===
value: a403 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at List.makeList(int) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1024 
lastLocationAccess: - 
value: a429 
stateAfter: - 
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1024 lastLocationAccess: - value: a429 stateAfter: - #next: v435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a434 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a434 <|@
result v122|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: -6] Placeholder
stamp: a!# List$Element
=== Inputs ===
object: a907 
=== Succesors ===
next: v27 
=== Usages ===
v27 
=== Predecessor ===
v435 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a907 #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.makeList(int) [bci: 30]
stamp: void
=== Inputs ===
memoryMap: - 
result: a434 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a434 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD[_] = COMPRESSPOINTER (input: v106|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v122|QWORD[.] + 16], y: v123|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = COMPRESSPOINTER (input: v116|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v122|QWORD[.] + 12], y: v124|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = LEA address: [v1|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LEA address: [v1|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA address: [v1|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v1|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v1|DWORD - 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v1|DWORD - 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA address: [v1|DWORD + 123] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v4|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v22|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + 12], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v1|DWORD + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v34|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v4|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v41|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + 16], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + 12], y: v48|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v1|DWORD + 125] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v54|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v53|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v4|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + 16], y: v66|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + 12], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA address: [v1|DWORD + 126] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA address: [v72|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v73|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v72|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v77|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV input: [v4|QWORD[.] + v69|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA address: [v79|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v79|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v79|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v83|QWORD[.]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = COMPRESSPOINTER (input: v68|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD[.] + 16], y: v85|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD[.] + 12], y: v86|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v84|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v1|DWORD + 127] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA address: [v91|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v92|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v91|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v95|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[_] = MOV input: [v4|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = LEA address: [v98|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v99|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v98|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v102|QWORD[.]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[.] + 16], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[_] = COMPRESSPOINTER (input: v97|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[.] + 12], y: v105|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = LEA address: [v1|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v107|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = LEA address: [v110|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v111|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v110|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v115|QWORD[.]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[_] = MOV input: [v4|QWORD[.] + v107|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v109|QWORD[.]] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = LEA address: [v117|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v118|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v117|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD[_] = COMPRESSPOINTER (input: v106|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v122|QWORD[.] + 16], y: v123|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = COMPRESSPOINTER (input: v116|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v122|QWORD[.] + 12], y: v124|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v119|QWORD[.]] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v119|QWORD[.]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v100|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v100|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v81|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|QWORD[.]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v128|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v62|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|QWORD[.]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v129|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v43|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v130|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v24|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v131|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v112|QWORD[.]] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v112|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v132|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v93|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v93|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v133|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v74|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v74|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v134|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v55|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v135|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v36|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v17|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = LEA address: [v1|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LEA address: [v1|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA address: [v1|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v1|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v1|DWORD - 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v1|DWORD - 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA address: [v1|DWORD + 123] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v4|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v22|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + 12], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v1|DWORD + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v34|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v4|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v41|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + 16], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + 12], y: v48|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v1|DWORD + 125] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v54|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v53|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v4|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + 16], y: v66|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + 12], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA address: [v1|DWORD + 126] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA address: [v72|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v73|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v72|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v77|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV input: [v4|QWORD[.] + v69|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA address: [v79|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v79|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v79|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v83|QWORD[.]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = COMPRESSPOINTER (input: v68|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD[.] + 16], y: v85|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD[.] + 12], y: v86|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v84|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v1|DWORD + 127] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA address: [v91|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v92|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v91|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v95|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[_] = MOV input: [v4|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = LEA address: [v98|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v99|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v98|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v102|QWORD[.]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[.] + 16], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[_] = COMPRESSPOINTER (input: v97|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[.] + 12], y: v105|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = LEA address: [v1|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v107|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = LEA address: [v110|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v111|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v110|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v115|QWORD[.]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[_] = MOV input: [v4|QWORD[.] + v107|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v109|QWORD[.]] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = LEA address: [v117|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v118|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v117|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD[_] = COMPRESSPOINTER (input: v106|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v122|QWORD[.] + 16], y: v123|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = COMPRESSPOINTER (input: v116|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v122|QWORD[.] + 12], y: v124|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v119|QWORD[.]] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v119|QWORD[.]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v100|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v100|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v81|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|QWORD[.]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v128|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v62|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|QWORD[.]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v129|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v43|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v130|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v24|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v131|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v112|QWORD[.]] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v112|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v132|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v93|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v93|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v133|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v74|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v74|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v134|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v55|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v135|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v36|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v17|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = LEA address: [v1|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LEA address: [v1|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA address: [v1|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v1|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v1|DWORD - 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v1|DWORD - 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA address: [v1|DWORD + 123] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v4|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v22|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + 12], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v1|DWORD + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v34|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v4|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v41|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + 16], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + 12], y: v48|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v1|DWORD + 125] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v54|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v53|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v4|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + 16], y: v66|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + 12], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA address: [v1|DWORD + 126] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA address: [v72|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v73|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v72|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v77|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV input: [v4|QWORD[.] + v69|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA address: [v79|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v79|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v79|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v83|QWORD[.]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = COMPRESSPOINTER (input: v68|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD[.] + 16], y: v85|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD[.] + 12], y: v86|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v84|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v1|DWORD + 127] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA address: [v91|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v92|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v91|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v95|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[_] = MOV input: [v4|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = LEA address: [v98|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v99|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v98|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v102|QWORD[.]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[.] + 16], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[_] = COMPRESSPOINTER (input: v97|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[.] + 12], y: v105|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = LEA address: [v1|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v107|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = LEA address: [v110|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v111|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v110|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v115|QWORD[.]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[_] = MOV input: [v4|QWORD[.] + v107|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v109|QWORD[.]] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = LEA address: [v117|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v118|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v117|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD[_] = COMPRESSPOINTER (input: v106|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v122|QWORD[.] + 16], y: v123|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = COMPRESSPOINTER (input: v116|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v122|QWORD[.] + 12], y: v124|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v119|QWORD[.]] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v119|QWORD[.]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v100|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v100|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v81|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|QWORD[.]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v128|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v62|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|QWORD[.]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v129|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v43|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v130|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v24|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v131|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v112|QWORD[.]] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v112|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v132|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v93|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v93|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v133|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v74|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v74|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v134|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v55|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v135|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v36|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v17|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = LEA address: [v1|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LEA address: [v1|DWORD - 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA address: [v1|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v1|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v1|DWORD - 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v1|DWORD - 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA address: [v1|DWORD + 123] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v15|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v4|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v22|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + 12], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v1|DWORD + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v34|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v4|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v41|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + 16], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + 12], y: v48|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v1|DWORD + 125] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v54|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v53|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v53|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v4|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v60|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + 16], y: v66|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + 12], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA address: [v1|DWORD + 126] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA address: [v72|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v73|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v72|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v72|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v77|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV input: [v4|QWORD[.] + v69|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA address: [v79|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v79|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v79|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v79|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v83|QWORD[.]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = COMPRESSPOINTER (input: v68|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD[.] + 16], y: v85|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD[.] + 12], y: v86|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v84|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v1|DWORD + 127] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA address: [v91|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v92|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v91|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v91|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v95|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[_] = MOV input: [v4|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = LEA address: [v98|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v99|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v98|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v98|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v102|QWORD[.]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[.] + 16], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[_] = COMPRESSPOINTER (input: v97|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[.] + 12], y: v105|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = LEA address: [v1|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v107|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = LEA address: [v110|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v111|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v110|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v110|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v115|QWORD[.]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[_] = MOV input: [v4|QWORD[.] + v107|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v109|QWORD[.]] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = LEA address: [v117|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v118|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v117|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v117|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD[_] = COMPRESSPOINTER (input: v106|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v122|QWORD[.] + 16], y: v123|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = COMPRESSPOINTER (input: v116|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v122|QWORD[.] + 12], y: v124|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v119|QWORD[.]] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v119|QWORD[.]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v100|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v100|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v81|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|QWORD[.]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v128|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v62|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v62|QWORD[.]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v129|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v43|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v130|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v24|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v131|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v112|QWORD[.]] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v112|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v132|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v93|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v93|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v133|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v74|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v74|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v134|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v55|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v135|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v36|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v136|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v17|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   12  <|@ instruction v5|DWORD = LEA address: [v1|DWORD - 4] size: DWORD <|@ <|@
      nr   14  <|@ instruction v6|DWORD = LEA address: [v1|DWORD - 3] size: DWORD <|@ <|@
      nr   16  <|@ instruction v7|DWORD = LEA address: [v1|DWORD - 2] size: DWORD <|@ <|@
      nr   18  <|@ instruction v8|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v1|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v9|DWORD = LEA address: [v1|DWORD - 6] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD = LEA address: [v1|DWORD - 5] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   34  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v12|DWORD = LEA address: [v1|DWORD + 123] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v15|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   44  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + 208] instr: 3 <|@ <|@
      nr   54  <|@ instruction MOV x: [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction MOV x: [v15|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   60  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   64  <|@ instruction [v20|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [v20|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v13|DWORD[_] = MOV input: [v4|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   78  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 24] size: QWORD <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: v23|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 440], y: v23|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~address: [v22|QWORD + 216] instr: 3 <|@ <|@
      nr   92  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction MOV x: [v22|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV x: [v22|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction v26|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  104  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction MOV (x: [v27|QWORD[.] + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr  110  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction MOV (x: [v27|QWORD[.] + 12], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  116  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  118  <|@ instruction v31|DWORD = LEA address: [v1|DWORD + 124] size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  126  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v35|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 440], y: v35|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v34|QWORD + 208] instr: 3 <|@ <|@
      nr  136  <|@ instruction MOV x: [v34|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [v34|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV x: [v34|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  142  <|@ instruction v38|QWORD[.] = MOVE input: v34|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  146  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction v32|DWORD[_] = MOV input: [v4|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  160  <|@ instruction [v40|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  164  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 24] size: QWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v41|QWORD + 216] instr: 3 <|@ <|@
      nr  174  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV x: [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  182  <|@ instruction v45|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  186  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ instruction v47|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction MOV (x: [v46|QWORD[.] + 16], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr  192  <|@ instruction v48|DWORD[_] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction MOV (x: [v46|QWORD[.] + 12], y: v48|DWORD[_]) size: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  198  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction v50|DWORD = LEA address: [v1|DWORD + 125] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v53|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  208  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: v54|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: v54|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [v53|QWORD + 208] instr: 3 <|@ <|@
      nr  218  <|@ instruction MOV x: [v53|QWORD] y: 1 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV x: [v53|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  222  <|@ instruction MOV x: [v53|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  224  <|@ instruction v57|QWORD[.] = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [v57|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  228  <|@ instruction [v58|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [v58|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction v51|DWORD[_] = MOV input: [v4|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  242  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction v60|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 24] size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + 216] instr: 3 <|@ <|@
      nr  256  <|@ instruction MOV x: [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV x: [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction MOV x: [v60|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV x: [v60|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  264  <|@ instruction v64|QWORD[.] = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  268  <|@ instruction [v65|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction v66|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  272  <|@ instruction MOV (x: [v65|QWORD[.] + 16], y: v66|DWORD[_]) size: DWORD <|@ <|@
      nr  274  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [v65|QWORD[.] + 12], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  280  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction v69|DWORD = LEA address: [v1|DWORD + 126] size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction v72|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  290  <|@ instruction v73|QWORD = LEA address: [v72|QWORD + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v73|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 440], y: v73|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [v72|QWORD + 208] instr: 3 <|@ <|@
      nr  300  <|@ instruction MOV x: [v72|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v72|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV x: [v72|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  306  <|@ instruction v76|QWORD[.] = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  310  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [v77|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction v70|DWORD[_] = MOV input: [v4|QWORD[.] + v69|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  320  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  324  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction v79|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  328  <|@ instruction v80|QWORD = LEA address: [v79|QWORD + 24] size: QWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v80|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: v80|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [v79|QWORD + 216] instr: 3 <|@ <|@
      nr  338  <|@ instruction MOV x: [v79|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [v79|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [v79|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [v79|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction v83|QWORD[.] = MOVE input: v79|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [v83|QWORD[.]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  350  <|@ instruction [v84|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction v85|DWORD[_] = COMPRESSPOINTER (input: v68|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction MOV (x: [v84|QWORD[.] + 16], y: v85|DWORD[_]) size: DWORD <|@ <|@
      nr  356  <|@ instruction v86|DWORD[_] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction MOV (x: [v84|QWORD[.] + 12], y: v86|DWORD[_]) size: DWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [v84|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  362  <|@ instruction [v87|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  364  <|@ instruction v88|DWORD = LEA address: [v1|DWORD + 127] size: DWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction v91|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  372  <|@ instruction v92|QWORD = LEA address: [v91|QWORD + 16] size: QWORD <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: v92|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV (x: [r15|QWORD + 440], y: v92|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [v91|QWORD + 208] instr: 3 <|@ <|@
      nr  382  <|@ instruction MOV x: [v91|QWORD] y: 1 size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV x: [v91|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  386  <|@ instruction MOV x: [v91|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  388  <|@ instruction v95|QWORD[.] = MOVE input: v91|QWORD moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [v95|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  392  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [v96|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction v89|DWORD[_] = MOV input: [v4|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  406  <|@ instruction [v97|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction v98|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction v99|QWORD = LEA address: [v98|QWORD + 24] size: QWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v99|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: v99|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [v98|QWORD + 216] instr: 3 <|@ <|@
      nr  420  <|@ instruction MOV x: [v98|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [v98|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV x: [v98|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [v98|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  428  <|@ instruction v102|QWORD[.] = MOVE input: v98|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v102|QWORD[.]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  432  <|@ instruction [v103|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  436  <|@ instruction MOV (x: [v103|QWORD[.] + 16], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr  438  <|@ instruction v105|DWORD[_] = COMPRESSPOINTER (input: v97|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [v103|QWORD[.] + 12], y: v105|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [v103|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  444  <|@ instruction [v106|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  446  <|@ instruction v107|DWORD = LEA address: [v1|DWORD + 128] size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: v107|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction v110|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  454  <|@ instruction v111|QWORD = LEA address: [v110|QWORD + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v111|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction MOV (x: [r15|QWORD + 440], y: v111|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [v110|QWORD + 208] instr: 3 <|@ <|@
      nr  464  <|@ instruction MOV x: [v110|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [v110|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV x: [v110|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  470  <|@ instruction v114|QWORD[.] = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  474  <|@ instruction [v115|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  476  <|@ instruction MOV (x: [v115|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [v115|QWORD[.]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction v108|DWORD[_] = MOV input: [v4|QWORD[.] + v107|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [v109|QWORD[.]] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  488  <|@ instruction [v116|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  490  <|@ instruction v117|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  492  <|@ instruction v118|QWORD = LEA address: [v117|QWORD + 24] size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v118|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: v118|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [v117|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [v117|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [v117|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  514  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction v123|DWORD[_] = COMPRESSPOINTER (input: v106|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [v122|QWORD[.] + 16], y: v123|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction v124|DWORD[_] = COMPRESSPOINTER (input: v116|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [v122|QWORD[.] + 12], y: v124|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  532  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  558  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  562  <|@ instruction v119|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v119|QWORD[.]] state [bci:26] <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [v119|QWORD[.]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  572  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  576  <|@ instruction v100|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v100|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [v100|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction v127|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOVE input: v127|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  590  <|@ instruction v81|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v81|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [v81|QWORD[.]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v128|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = MOVE input: v128|QWORD moveKind: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  604  <|@ instruction v62|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v62|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [v62|QWORD[.]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction v129|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  614  <|@ instruction rsi|QWORD = MOVE input: v129|QWORD moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  618  <|@ instruction v43|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v43|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction v130|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOVE input: v130|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  632  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v24|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [v24|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v131|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v131|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  646  <|@ instruction v112|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v112|QWORD[.]] state [bci:26] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [v112|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction v132|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  656  <|@ instruction rsi|QWORD = MOVE input: v132|QWORD moveKind: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  660  <|@ instruction v93|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v93|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [v93|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction v133|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE input: v133|QWORD moveKind: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  674  <|@ instruction v74|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v74|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [v74|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v134|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = MOVE input: v134|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  688  <|@ instruction v55|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v55|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction v135|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: v135|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  702  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v36|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction v136|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = MOVE input: v136|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  716  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v17|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   12  <|@ instruction v5|DWORD = LEA address: [v1|DWORD - 4] size: DWORD <|@ <|@
      nr   14  <|@ instruction v6|DWORD = LEA address: [v1|DWORD - 3] size: DWORD <|@ <|@
      nr   16  <|@ instruction v7|DWORD = LEA address: [v1|DWORD - 2] size: DWORD <|@ <|@
      nr   18  <|@ instruction v8|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v1|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v9|DWORD = LEA address: [v1|DWORD - 6] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD = LEA address: [v1|DWORD - 5] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   34  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v12|DWORD = LEA address: [v1|DWORD + 123] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v15|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   44  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + 208] instr: 3 <|@ <|@
      nr   54  <|@ instruction MOV x: [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction MOV x: [v15|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   60  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   64  <|@ instruction [v20|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [v20|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v13|DWORD[_] = MOV input: [v4|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   78  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 24] size: QWORD <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: v23|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 440], y: v23|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~address: [v22|QWORD + 216] instr: 3 <|@ <|@
      nr   92  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction MOV x: [v22|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV x: [v22|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction v26|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  104  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction MOV (x: [v27|QWORD[.] + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr  110  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction MOV (x: [v27|QWORD[.] + 12], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  116  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  118  <|@ instruction v31|DWORD = LEA address: [v1|DWORD + 124] size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  126  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v35|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 440], y: v35|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v34|QWORD + 208] instr: 3 <|@ <|@
      nr  136  <|@ instruction MOV x: [v34|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [v34|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV x: [v34|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  142  <|@ instruction v38|QWORD[.] = MOVE input: v34|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  146  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction v32|DWORD[_] = MOV input: [v4|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  160  <|@ instruction [v40|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  164  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 24] size: QWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v41|QWORD + 216] instr: 3 <|@ <|@
      nr  174  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV x: [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  182  <|@ instruction v45|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  186  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ instruction v47|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction MOV (x: [v46|QWORD[.] + 16], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr  192  <|@ instruction v48|DWORD[_] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction MOV (x: [v46|QWORD[.] + 12], y: v48|DWORD[_]) size: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  198  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction v50|DWORD = LEA address: [v1|DWORD + 125] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v53|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  208  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: v54|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: v54|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [v53|QWORD + 208] instr: 3 <|@ <|@
      nr  218  <|@ instruction MOV x: [v53|QWORD] y: 1 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV x: [v53|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  222  <|@ instruction MOV x: [v53|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  224  <|@ instruction v57|QWORD[.] = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [v57|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  228  <|@ instruction [v58|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [v58|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction v51|DWORD[_] = MOV input: [v4|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  242  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction v60|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 24] size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + 216] instr: 3 <|@ <|@
      nr  256  <|@ instruction MOV x: [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV x: [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction MOV x: [v60|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV x: [v60|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  264  <|@ instruction v64|QWORD[.] = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  268  <|@ instruction [v65|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction v66|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  272  <|@ instruction MOV (x: [v65|QWORD[.] + 16], y: v66|DWORD[_]) size: DWORD <|@ <|@
      nr  274  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [v65|QWORD[.] + 12], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  280  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction v69|DWORD = LEA address: [v1|DWORD + 126] size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction v72|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  290  <|@ instruction v73|QWORD = LEA address: [v72|QWORD + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v73|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 440], y: v73|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [v72|QWORD + 208] instr: 3 <|@ <|@
      nr  300  <|@ instruction MOV x: [v72|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v72|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV x: [v72|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  306  <|@ instruction v76|QWORD[.] = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  310  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [v77|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction v70|DWORD[_] = MOV input: [v4|QWORD[.] + v69|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  320  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  324  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction v79|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  328  <|@ instruction v80|QWORD = LEA address: [v79|QWORD + 24] size: QWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v80|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: v80|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [v79|QWORD + 216] instr: 3 <|@ <|@
      nr  338  <|@ instruction MOV x: [v79|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [v79|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [v79|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [v79|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction v83|QWORD[.] = MOVE input: v79|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [v83|QWORD[.]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  350  <|@ instruction [v84|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction v85|DWORD[_] = COMPRESSPOINTER (input: v68|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction MOV (x: [v84|QWORD[.] + 16], y: v85|DWORD[_]) size: DWORD <|@ <|@
      nr  356  <|@ instruction v86|DWORD[_] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction MOV (x: [v84|QWORD[.] + 12], y: v86|DWORD[_]) size: DWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [v84|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  362  <|@ instruction [v87|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  364  <|@ instruction v88|DWORD = LEA address: [v1|DWORD + 127] size: DWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction v91|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  372  <|@ instruction v92|QWORD = LEA address: [v91|QWORD + 16] size: QWORD <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: v92|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV (x: [r15|QWORD + 440], y: v92|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [v91|QWORD + 208] instr: 3 <|@ <|@
      nr  382  <|@ instruction MOV x: [v91|QWORD] y: 1 size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV x: [v91|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  386  <|@ instruction MOV x: [v91|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  388  <|@ instruction v95|QWORD[.] = MOVE input: v91|QWORD moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [v95|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  392  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [v96|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction v89|DWORD[_] = MOV input: [v4|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  406  <|@ instruction [v97|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction v98|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction v99|QWORD = LEA address: [v98|QWORD + 24] size: QWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v99|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: v99|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [v98|QWORD + 216] instr: 3 <|@ <|@
      nr  420  <|@ instruction MOV x: [v98|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [v98|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV x: [v98|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [v98|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  428  <|@ instruction v102|QWORD[.] = MOVE input: v98|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v102|QWORD[.]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  432  <|@ instruction [v103|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  436  <|@ instruction MOV (x: [v103|QWORD[.] + 16], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr  438  <|@ instruction v105|DWORD[_] = COMPRESSPOINTER (input: v97|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [v103|QWORD[.] + 12], y: v105|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [v103|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  444  <|@ instruction [v106|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  446  <|@ instruction v107|DWORD = LEA address: [v1|DWORD + 128] size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: v107|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction v110|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  454  <|@ instruction v111|QWORD = LEA address: [v110|QWORD + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v111|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction MOV (x: [r15|QWORD + 440], y: v111|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [v110|QWORD + 208] instr: 3 <|@ <|@
      nr  464  <|@ instruction MOV x: [v110|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [v110|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV x: [v110|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  470  <|@ instruction v114|QWORD[.] = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  474  <|@ instruction [v115|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  476  <|@ instruction MOV (x: [v115|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [v115|QWORD[.]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction v108|DWORD[_] = MOV input: [v4|QWORD[.] + v107|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [v109|QWORD[.]] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  488  <|@ instruction [v116|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  490  <|@ instruction v117|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  492  <|@ instruction v118|QWORD = LEA address: [v117|QWORD + 24] size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v118|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: v118|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [v117|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [v117|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [v117|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  514  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction v123|DWORD[_] = COMPRESSPOINTER (input: v106|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [v122|QWORD[.] + 16], y: v123|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction v124|DWORD[_] = COMPRESSPOINTER (input: v116|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [v122|QWORD[.] + 12], y: v124|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  532  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  558  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  562  <|@ instruction v119|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v119|QWORD[.]] state [bci:26] <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [v119|QWORD[.]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  572  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  576  <|@ instruction v100|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v100|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [v100|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction v127|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOVE input: v127|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  590  <|@ instruction v81|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v81|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [v81|QWORD[.]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v128|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = MOVE input: v128|QWORD moveKind: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  604  <|@ instruction v62|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v62|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [v62|QWORD[.]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction v129|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  614  <|@ instruction rsi|QWORD = MOVE input: v129|QWORD moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  618  <|@ instruction v43|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v43|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction v130|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOVE input: v130|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  632  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v24|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [v24|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v131|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v131|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  646  <|@ instruction v112|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v112|QWORD[.]] state [bci:26] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [v112|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction v132|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  656  <|@ instruction rsi|QWORD = MOVE input: v132|QWORD moveKind: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  660  <|@ instruction v93|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v93|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [v93|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction v133|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE input: v133|QWORD moveKind: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  674  <|@ instruction v74|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v74|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [v74|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v134|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = MOVE input: v134|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  688  <|@ instruction v55|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v55|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction v135|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: v135|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  702  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v36|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction v136|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = MOVE input: v136|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  716  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v17|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v122|q [0, 1[[32, 34[[524, 526[[530, 532[[560, 562[[574, 576[[588, 590[[602, 604[[616, 618[[630, 632[[644, 646[[658, 660[[672, 674[[686, 688[[700, 702[[714, 716[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v9|d [0, 8[[30, 33[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[32, 33[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 6[[28, 33[[558, 560[[572, 574[[586, 588[[600, 602[[614, 616[[628, 630[[642, 644[[656, 658[[670, 672[[684, 686[[698, 700[[712, 714[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 28[6 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [8, 496[[534, 565[[568, 722[8 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister 18 ShouldHaveRegister 20 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 36 MustHaveRegister 118 MustHaveRegister 200 MustHaveRegister 282 MustHaveRegister 364 MustHaveRegister 446 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [10, 450[[480, 482[[534, 554[[568, 638[[652, 722[10 MustHaveRegister 72 MustHaveRegister 154 MustHaveRegister 236 MustHaveRegister 318 MustHaveRegister 400 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [12, 168[[550, 554[[610, 621[[624, 638[[694, 722[12 MustHaveRegister 148 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [14, 250[[546, 554[[596, 607[[610, 638[[680, 722[14 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [16, 332[[542, 554[[582, 593[[596, 638[[666, 722[16 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v1|d [18, 414[[538, 554[[568, 579[[582, 638[[652, 722[18 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [24, 30[24 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [26, 86[[624, 635[[708, 722[26 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q rax|q [34, 106[[624, 638[[708, 722[34 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [36, 40[[70, 72[36 MustHaveRegister 38 ShouldHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v13|d [74, 77[74 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [42, 60[42 MustHaveRegister 44 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [44, 50[44 MustHaveRegister 46 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q rax|q [716, 721[716 MustHaveRegister 718 MustHaveRegister 720 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v15|q [60, 63[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v19|q [64, 69[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v14|q [78, 110[[624, 638[110 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [80, 100[80 MustHaveRegister 82 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [82, 88[82 MustHaveRegister 84 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q rax|q [632, 637[632 MustHaveRegister 634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v22|q [100, 103[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v26|q [104, 115[108 MustHaveRegister 112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v11|q [106, 108[106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v21|q [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v27|q [116, 188[[610, 624[[694, 708[188 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [118, 122[[152, 154[118 MustHaveRegister 120 ShouldHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v32|d [156, 159[156 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [124, 142[124 MustHaveRegister 126 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q -1 [126, 132[126 MustHaveRegister 128 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q rax|q [702, 707[702 MustHaveRegister 704 MustHaveRegister 706 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v34|q [142, 145[142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v38|q [146, 151[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v33|q [160, 192[[610, 624[192 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [162, 182[162 MustHaveRegister 164 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [164, 170[164 MustHaveRegister 166 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q rax|q [618, 623[618 MustHaveRegister 620 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v41|q [182, 185[182 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v45|q [186, 197[190 MustHaveRegister 194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d v30|q [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d v40|q [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v46|q [198, 270[[596, 610[[680, 694[270 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [200, 204[[234, 236[200 MustHaveRegister 202 ShouldHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d -1 [236, 238[236 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v51|d [238, 241[238 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q -1 [206, 224[206 MustHaveRegister 208 MustHaveRegister 216 MustHaveRegister 218 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q -1 [208, 214[208 MustHaveRegister 210 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q rax|q [688, 693[688 MustHaveRegister 690 MustHaveRegister 692 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v53|q [224, 227[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v57|q [228, 233[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q v52|q [242, 274[[596, 610[274 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [244, 264[244 MustHaveRegister 246 MustHaveRegister 254 MustHaveRegister 256 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q -1 [246, 252[246 MustHaveRegister 248 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q rax|q [604, 609[604 MustHaveRegister 606 MustHaveRegister 608 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q v60|q [264, 267[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q v64|q [268, 279[272 MustHaveRegister 276 MustHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d v49|q [270, 272[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[v67|d]" v67|d v59|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q v65|q [280, 352[[582, 596[[666, 680[352 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d -1 [282, 286[[316, 318[282 MustHaveRegister 284 ShouldHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d -1 [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q v70|d [320, 323[320 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q -1 [288, 306[288 MustHaveRegister 290 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 306 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q -1 [290, 296[290 MustHaveRegister 292 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q rax|q [674, 679[674 MustHaveRegister 676 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q v72|q [306, 309[306 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q v76|q [310, 315[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q v71|q [324, 356[[582, 596[356 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [326, 346[326 MustHaveRegister 328 MustHaveRegister 336 MustHaveRegister 338 MustHaveRegister 340 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q -1 [328, 334[328 MustHaveRegister 330 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q rax|q [590, 595[590 MustHaveRegister 592 MustHaveRegister 594 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q v79|q [346, 349[346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q v83|q [350, 361[354 MustHaveRegister 358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[v85|d]" v85|d v68|q [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d v78|q [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q v84|q [362, 434[[568, 582[[652, 666[434 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[v88|d]" v88|d -1 [364, 368[[398, 400[364 MustHaveRegister 366 ShouldHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d -1 [400, 402[400 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q v89|d [402, 405[402 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[v91|q]" v91|q -1 [370, 388[370 MustHaveRegister 372 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister 386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v92|q QWORD "[v92|q]" v92|q -1 [372, 378[372 MustHaveRegister 374 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[v93|q]" v93|q rax|q [660, 665[660 MustHaveRegister 662 MustHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[v95|q]" v95|q v91|q [388, 391[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[v96|q]" v96|q v95|q [392, 397[394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[v97|q]" v97|q v90|q [406, 438[[568, 582[438 MustHaveRegister  "NoSpillStore"
  v98|q QWORD "[v98|q]" v98|q -1 [408, 428[408 MustHaveRegister 410 MustHaveRegister 418 MustHaveRegister 420 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v99|q QWORD "[v99|q]" v99|q -1 [410, 416[410 MustHaveRegister 412 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[v100|q]" v100|q rax|q [576, 581[576 MustHaveRegister 578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v102|q QWORD "[v102|q]" v102|q v98|q [428, 431[428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[v103|q]" v103|q v102|q [432, 443[436 MustHaveRegister 440 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[v104|d]" v104|d v87|q [434, 436[434 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[v105|d]" v105|d v97|q [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v106|q QWORD "[v106|q]" v106|q v103|q [444, 516[[554, 568[[638, 652[516 MustHaveRegister  "NoSpillStore"
  v107|d DWORD "[v107|d]" v107|d -1 [446, 450[[480, 482[446 MustHaveRegister 448 ShouldHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v108|d DWORD "[v108|d]" v108|d -1 [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[v109|q]" v109|q v108|d [484, 487[484 MustHaveRegister 486 ShouldHaveRegister  "NoSpillStore"
  v110|q QWORD "[v110|q]" v110|q -1 [452, 470[452 MustHaveRegister 454 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 466 MustHaveRegister 468 MustHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v111|q QWORD "[v111|q]" v111|q -1 [454, 460[454 MustHaveRegister 456 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[v112|q]" v112|q rax|q [646, 651[646 MustHaveRegister 648 MustHaveRegister 650 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[v114|q]" v114|q v110|q [470, 473[470 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[v115|q]" v115|q v114|q [474, 479[476 MustHaveRegister 478 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[v116|q]" v116|q v109|q [488, 520[[554, 568[520 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[v117|q]" v117|q -1 [490, 510[490 MustHaveRegister 492 MustHaveRegister 500 MustHaveRegister 502 MustHaveRegister 504 MustHaveRegister 506 MustHaveRegister 508 MustHaveRegister 510 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[v118|q]" v118|q -1 [492, 498[492 MustHaveRegister 494 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[v119|q]" v119|q rax|q [562, 567[562 MustHaveRegister 564 MustHaveRegister 566 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[v121|q]" v121|q v117|q [510, 513[510 MustHaveRegister 512 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[v122|q]" v122|q v121|q [514, 524[518 MustHaveRegister 522 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v123|d DWORD "[v123|d]" v123|d v106|q [516, 518[516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[v124|d]" v124|d v116|q [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[v125|q]" v125|q -1 [556, 558[556 MustHaveRegister 558 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[v126|q]" v126|q -1 [570, 572[570 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[v127|q]" v127|q -1 [584, 586[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v128|q QWORD "[v128|q]" v128|q -1 [598, 600[598 MustHaveRegister 600 ShouldHaveRegister  "NoSpillStore"
  v129|q QWORD "[v129|q]" v129|q -1 [612, 614[612 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v130|q QWORD "[v130|q]" v130|q -1 [626, 628[626 MustHaveRegister 628 ShouldHaveRegister  "NoSpillStore"
  v131|q QWORD "[v131|q]" v131|q -1 [640, 642[640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v132|q QWORD "[v132|q]" v132|q -1 [654, 656[654 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v133|q QWORD "[v133|q]" v133|q -1 [668, 670[668 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v134|q QWORD "[v134|q]" v134|q -1 [682, 684[682 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v135|q QWORD "[v135|q]" v135|q -1 [696, 698[696 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v136|q QWORD "[v136|q]" v136|q -1 [710, 712[710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v122|q [0, 1[[32, 34[[524, 526[[530, 532[[560, 562[[574, 576[[588, 590[[602, 604[[616, 618[[630, 632[[644, 646[[658, 660[[672, 674[[686, 688[[700, 702[[714, 716[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v9|d [0, 8[[30, 33[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[32, 33[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 6[[28, 33[[558, 560[[572, 574[[586, 588[[600, 602[[614, 616[[628, 630[[642, 644[[656, 658[[670, 672[[684, 686[[698, 700[[712, 714[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 28[6 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 29[8 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister 18 ShouldHaveRegister 20 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister  "OneSpillStore"
  v4|q QWORD "[r10|q]" v4|q -1 [10, 22[10 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [12, 22[12 MustHaveRegister  "OneSpillStore"
  v6|d DWORD "[r8|d]" v6|d -1 [14, 22[14 MustHaveRegister  "OneSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [16, 22[16 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[rcx|d]" v8|d v1|d [18, 22[18 MustHaveRegister  "OneSpillStore"
  v9|d DWORD "[rbx|d]" v9|d -1 [24, 30[24 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdi|d]" v10|d -1 [26, 31[26 MustHaveRegister  "OneSpillStore"
  v11|q QWORD "[r10|q]" v11|q rax|q [34, 106[[624, 638[[708, 722[34 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [36, 40[[70, 72[36 MustHaveRegister 38 ShouldHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q v13|d [74, 77[74 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q -1 [42, 60[42 MustHaveRegister 44 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q -1 [44, 50[44 MustHaveRegister 46 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q rax|q [716, 721[716 MustHaveRegister 718 MustHaveRegister 720 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q v15|q [60, 63[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q v19|q [64, 69[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[r8|q]" v21|q v14|q [78, 110[[624, 638[110 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q -1 [80, 100[80 MustHaveRegister 82 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q -1 [82, 88[82 MustHaveRegister 84 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q rax|q [632, 637[632 MustHaveRegister 634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v22|q [100, 103[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q v26|q [104, 115[108 MustHaveRegister 112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r10|d]" v28|d v11|q [106, 108[106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v21|q [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r10|q]" v30|q v27|q [116, 188[[610, 624[[694, 708[188 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [118, 122[[152, 154[118 MustHaveRegister 120 ShouldHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q v32|d [156, 159[156 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q -1 [124, 142[124 MustHaveRegister 126 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rsi|q]" v35|q -1 [126, 132[126 MustHaveRegister 128 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q rax|q [702, 707[702 MustHaveRegister 704 MustHaveRegister 706 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q v34|q [142, 145[142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q v38|q [146, 151[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[r8|q]" v40|q v33|q [160, 192[[610, 624[192 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q -1 [162, 182[162 MustHaveRegister 164 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q -1 [164, 170[164 MustHaveRegister 166 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q rax|q [618, 623[618 MustHaveRegister 620 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q v41|q [182, 185[182 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v45|q [186, 197[190 MustHaveRegister 194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[r10|d]" v47|d v30|q [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r8|d]" v48|d v40|q [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r10|q]" v49|q v46|q [198, 270[[596, 610[[680, 694[270 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rax|d]" v50|d -1 [200, 204[[234, 236[200 MustHaveRegister 202 ShouldHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rax|d]" v51|d -1 [236, 238[236 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rax|q]" v52|q v51|d [238, 241[238 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q -1 [206, 224[206 MustHaveRegister 208 MustHaveRegister 216 MustHaveRegister 218 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q -1 [208, 214[208 MustHaveRegister 210 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rax|q]" v55|q rax|q [688, 693[688 MustHaveRegister 690 MustHaveRegister 692 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rax|q]" v57|q v53|q [224, 227[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rax|q]" v58|q v57|q [228, 233[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r8|q]" v59|q v52|q [242, 274[[596, 610[274 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q -1 [244, 264[244 MustHaveRegister 246 MustHaveRegister 254 MustHaveRegister 256 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rsi|q]" v61|q -1 [246, 252[246 MustHaveRegister 248 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rax|q]" v62|q rax|q [604, 609[604 MustHaveRegister 606 MustHaveRegister 608 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rax|q]" v64|q v60|q [264, 267[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q v64|q [268, 279[272 MustHaveRegister 276 MustHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[r10|d]" v66|d v49|q [270, 272[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r8|d]" v67|d v59|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[r10|q]" v68|q v65|q [280, 352[[582, 596[[666, 680[352 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[rax|d]" v69|d -1 [282, 286[[316, 318[282 MustHaveRegister 284 ShouldHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[rax|d]" v70|d -1 [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q v70|d [320, 323[320 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rax|q]" v72|q -1 [288, 306[288 MustHaveRegister 290 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 306 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [290, 296[290 MustHaveRegister 292 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rax|q]" v74|q rax|q [674, 679[674 MustHaveRegister 676 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rax|q]" v76|q v72|q [306, 309[306 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q v76|q [310, 315[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[r8|q]" v78|q v71|q [324, 356[[582, 596[356 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rax|q]" v79|q -1 [326, 346[326 MustHaveRegister 328 MustHaveRegister 336 MustHaveRegister 338 MustHaveRegister 340 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rsi|q]" v80|q -1 [328, 334[328 MustHaveRegister 330 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q rax|q [590, 595[590 MustHaveRegister 592 MustHaveRegister 594 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[rax|q]" v83|q v79|q [346, 349[346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[rax|q]" v84|q v83|q [350, 361[354 MustHaveRegister 358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[r10|d]" v85|d v68|q [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[r8|d]" v86|d v78|q [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[r10|q]" v87|q v84|q [362, 434[[568, 582[[652, 666[434 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[rax|d]" v88|d -1 [364, 368[[398, 400[364 MustHaveRegister 366 ShouldHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[rax|d]" v89|d -1 [400, 402[400 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rax|q]" v90|q v89|d [402, 405[402 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[rax|q]" v91|q -1 [370, 388[370 MustHaveRegister 372 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister 386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v92|q QWORD "[rsi|q]" v92|q -1 [372, 378[372 MustHaveRegister 374 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[rax|q]" v93|q rax|q [660, 665[660 MustHaveRegister 662 MustHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rax|q]" v95|q v91|q [388, 391[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q v95|q [392, 397[394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[r8|q]" v97|q v90|q [406, 438[[568, 582[438 MustHaveRegister  "NoSpillStore"
  v98|q QWORD "[rax|q]" v98|q -1 [408, 428[408 MustHaveRegister 410 MustHaveRegister 418 MustHaveRegister 420 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v99|q QWORD "[rsi|q]" v99|q -1 [410, 416[410 MustHaveRegister 412 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[rax|q]" v100|q rax|q [576, 581[576 MustHaveRegister 578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v102|q QWORD "[rax|q]" v102|q v98|q [428, 431[428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[rax|q]" v103|q v102|q [432, 443[436 MustHaveRegister 440 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[r10|d]" v104|d v87|q [434, 436[434 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[r8|d]" v105|d v97|q [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v106|q QWORD "[r10|q]" v106|q v103|q [444, 516[[554, 568[[638, 652[516 MustHaveRegister  "NoSpillStore"
  v107|d DWORD "[rax|d]" v107|d -1 [446, 450[[480, 482[446 MustHaveRegister 448 ShouldHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v108|d DWORD "[rax|d]" v108|d -1 [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[rax|q]" v109|q v108|d [484, 487[484 MustHaveRegister 486 ShouldHaveRegister  "NoSpillStore"
  v110|q QWORD "[rax|q]" v110|q -1 [452, 470[452 MustHaveRegister 454 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 466 MustHaveRegister 468 MustHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v111|q QWORD "[rsi|q]" v111|q -1 [454, 460[454 MustHaveRegister 456 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rax|q]" v112|q rax|q [646, 651[646 MustHaveRegister 648 MustHaveRegister 650 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[rax|q]" v114|q v110|q [470, 473[470 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[rax|q]" v115|q v114|q [474, 479[476 MustHaveRegister 478 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[r11|q]" v116|q v109|q [488, 520[[554, 568[520 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rax|q]" v117|q -1 [490, 510[490 MustHaveRegister 492 MustHaveRegister 500 MustHaveRegister 502 MustHaveRegister 504 MustHaveRegister 506 MustHaveRegister 508 MustHaveRegister 510 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rsi|q]" v118|q -1 [492, 498[492 MustHaveRegister 494 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[rax|q]" v119|q rax|q [562, 567[562 MustHaveRegister 564 MustHaveRegister 566 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[rax|q]" v121|q v117|q [510, 513[510 MustHaveRegister 512 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[rax|q]" v122|q v121|q [514, 524[518 MustHaveRegister 522 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v123|d DWORD "[r10|d]" v123|d v106|q [516, 518[516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[r11|d]" v124|d v116|q [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rsi|q]" v125|q -1 [556, 558[556 MustHaveRegister 558 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q -1 [570, 572[570 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[rsi|q]" v127|q -1 [584, 586[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v128|q QWORD "[rsi|q]" v128|q -1 [598, 600[598 MustHaveRegister 600 ShouldHaveRegister  "NoSpillStore"
  v129|q QWORD "[rsi|q]" v129|q -1 [612, 614[612 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v130|q QWORD "[rsi|q]" v130|q -1 [626, 628[626 MustHaveRegister 628 ShouldHaveRegister  "NoSpillStore"
  v131|q QWORD "[rsi|q]" v131|q -1 [640, 642[640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v132|q QWORD "[rsi|q]" v132|q -1 [654, 656[654 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v133|q QWORD "[rsi|q]" v133|q -1 [668, 670[668 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v134|q QWORD "[rsi|q]" v134|q -1 [682, 684[682 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v135|q QWORD "[rsi|q]" v135|q -1 [696, 698[696 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v136|q QWORD "[rsi|q]" v136|q -1 [710, 712[710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v137|d DWORD "[vstack:0|d]" v1|d v1|d [29, 35[ "OneSpillStore"
  v138|q QWORD "[-]" v4|q v4|q [22, 31[ "OneSpillStore"
  v139|d DWORD "[vstack:2|d]" v5|d v5|d [22, 31[ "OneSpillStore"
  v140|d DWORD "[vstack:3|d]" v6|d v6|d [22, 31[ "OneSpillStore"
  v141|d DWORD "[vstack:4|d]" v7|d v7|d [22, 31[ "OneSpillStore"
  v142|d DWORD "[vstack:5|d]" v8|d v8|d [22, 31[ "OneSpillStore"
  v143|q QWORD "[-]" v4|q v4|q [31, 70[ "OneSpillStore"
  v144|d DWORD "[vstack:2|d]" v5|d v5|d [31, 146[ "OneSpillStore"
  v145|d DWORD "[vstack:3|d]" v6|d v6|d [31, 228[ "OneSpillStore"
  v146|d DWORD "[vstack:4|d]" v7|d v7|d [31, 310[ "OneSpillStore"
  v147|d DWORD "[vstack:5|d]" v8|d v8|d [31, 392[ "OneSpillStore"
  v148|d DWORD "[vstack:1|d]" v10|d v10|d [31, 64[ "OneSpillStore"
  v149|d DWORD "[rdx|d]" v1|d v1|d [35, 496[[534, 565[[568, 722[36 MustHaveRegister 118 MustHaveRegister 200 MustHaveRegister 282 MustHaveRegister 364 MustHaveRegister 446 MustHaveRegister 476 MustHaveRegister  "OneSpillStore"
  v150|d DWORD "[rdi|d]" v10|d v10|d [64, 86[[624, 635[[708, 722[66 MustHaveRegister  "OneSpillStore"
  v151|q QWORD "[r11|q]" v4|q v4|q [70, 450[[480, 482[[534, 554[[568, 638[[652, 722[72 MustHaveRegister 154 MustHaveRegister 236 MustHaveRegister 318 MustHaveRegister 400 MustHaveRegister 482 MustHaveRegister  "OneSpillStore"
  v152|d DWORD "[r9|d]" v5|d v5|d [146, 168[[550, 554[[610, 621[[624, 638[[694, 722[148 MustHaveRegister  "OneSpillStore"
  v153|d DWORD "[rcx|d]" v6|d v6|d [228, 250[[546, 554[[596, 607[[610, 638[[680, 722[230 MustHaveRegister  "OneSpillStore"
  v154|d DWORD "[rbx|d]" v7|d v7|d [310, 332[[542, 554[[582, 593[[596, 638[[666, 722[312 MustHaveRegister  "OneSpillStore"
  v155|d DWORD "[rbp|d]" v8|d v8|d [392, 414[[538, 554[[568, 579[[582, 638[[652, 722[394 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   12  <|@ instruction v5|DWORD = LEA address: [v1|DWORD - 4] size: DWORD <|@ <|@
      nr   14  <|@ instruction v6|DWORD = LEA address: [v1|DWORD - 3] size: DWORD <|@ <|@
      nr   16  <|@ instruction v7|DWORD = LEA address: [v1|DWORD - 2] size: DWORD <|@ <|@
      nr   18  <|@ instruction v8|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v1|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v9|DWORD = LEA address: [v1|DWORD - 6] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD = LEA address: [v1|DWORD - 5] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = STACKMOVE (input: v142|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = STACKMOVE (input: v141|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = STACKMOVE (input: v140|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = STACKMOVE (input: v139|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   34  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = MOVE input: v137|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction v12|DWORD = LEA address: [v1|DWORD + 123] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v15|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   44  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + 208] instr: 3 <|@ <|@
      nr   54  <|@ instruction MOV x: [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction MOV x: [v15|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   60  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   64  <|@ instruction [v20|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [v20|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v13|DWORD[_] = MOV input: [v4|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   78  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 24] size: QWORD <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: v23|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 440], y: v23|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~address: [v22|QWORD + 216] instr: 3 <|@ <|@
      nr   92  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction MOV x: [v22|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV x: [v22|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction v26|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  104  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction MOV (x: [v27|QWORD[.] + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr  110  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction MOV (x: [v27|QWORD[.] + 12], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  116  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  118  <|@ instruction v31|DWORD = LEA address: [v1|DWORD + 124] size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  126  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v35|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 440], y: v35|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v34|QWORD + 208] instr: 3 <|@ <|@
      nr  136  <|@ instruction MOV x: [v34|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [v34|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV x: [v34|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  142  <|@ instruction v38|QWORD[.] = MOVE input: v34|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  146  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction v32|DWORD[_] = MOV input: [v4|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  160  <|@ instruction [v40|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  164  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 24] size: QWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v41|QWORD + 216] instr: 3 <|@ <|@
      nr  174  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV x: [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  182  <|@ instruction v45|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  186  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ instruction v47|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction MOV (x: [v46|QWORD[.] + 16], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr  192  <|@ instruction v48|DWORD[_] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction MOV (x: [v46|QWORD[.] + 12], y: v48|DWORD[_]) size: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  198  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction v50|DWORD = LEA address: [v1|DWORD + 125] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v53|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  208  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: v54|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: v54|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [v53|QWORD + 208] instr: 3 <|@ <|@
      nr  218  <|@ instruction MOV x: [v53|QWORD] y: 1 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV x: [v53|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  222  <|@ instruction MOV x: [v53|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  224  <|@ instruction v57|QWORD[.] = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [v57|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  228  <|@ instruction [v58|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [v58|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction v51|DWORD[_] = MOV input: [v4|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  242  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction v60|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 24] size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + 216] instr: 3 <|@ <|@
      nr  256  <|@ instruction MOV x: [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV x: [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction MOV x: [v60|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV x: [v60|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  264  <|@ instruction v64|QWORD[.] = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  268  <|@ instruction [v65|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction v66|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  272  <|@ instruction MOV (x: [v65|QWORD[.] + 16], y: v66|DWORD[_]) size: DWORD <|@ <|@
      nr  274  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [v65|QWORD[.] + 12], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  280  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction v69|DWORD = LEA address: [v1|DWORD + 126] size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction v72|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  290  <|@ instruction v73|QWORD = LEA address: [v72|QWORD + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v73|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 440], y: v73|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [v72|QWORD + 208] instr: 3 <|@ <|@
      nr  300  <|@ instruction MOV x: [v72|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v72|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV x: [v72|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  306  <|@ instruction v76|QWORD[.] = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  310  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [v77|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction v70|DWORD[_] = MOV input: [v4|QWORD[.] + v69|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  320  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  324  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction v79|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  328  <|@ instruction v80|QWORD = LEA address: [v79|QWORD + 24] size: QWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v80|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: v80|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [v79|QWORD + 216] instr: 3 <|@ <|@
      nr  338  <|@ instruction MOV x: [v79|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [v79|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [v79|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [v79|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction v83|QWORD[.] = MOVE input: v79|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [v83|QWORD[.]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  350  <|@ instruction [v84|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction v85|DWORD[_] = COMPRESSPOINTER (input: v68|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction MOV (x: [v84|QWORD[.] + 16], y: v85|DWORD[_]) size: DWORD <|@ <|@
      nr  356  <|@ instruction v86|DWORD[_] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction MOV (x: [v84|QWORD[.] + 12], y: v86|DWORD[_]) size: DWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [v84|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  362  <|@ instruction [v87|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  364  <|@ instruction v88|DWORD = LEA address: [v1|DWORD + 127] size: DWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction v91|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  372  <|@ instruction v92|QWORD = LEA address: [v91|QWORD + 16] size: QWORD <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: v92|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV (x: [r15|QWORD + 440], y: v92|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [v91|QWORD + 208] instr: 3 <|@ <|@
      nr  382  <|@ instruction MOV x: [v91|QWORD] y: 1 size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV x: [v91|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  386  <|@ instruction MOV x: [v91|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  388  <|@ instruction v95|QWORD[.] = MOVE input: v91|QWORD moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [v95|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  392  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [v96|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction v89|DWORD[_] = MOV input: [v4|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  406  <|@ instruction [v97|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction v98|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction v99|QWORD = LEA address: [v98|QWORD + 24] size: QWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v99|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: v99|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [v98|QWORD + 216] instr: 3 <|@ <|@
      nr  420  <|@ instruction MOV x: [v98|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [v98|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV x: [v98|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [v98|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  428  <|@ instruction v102|QWORD[.] = MOVE input: v98|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v102|QWORD[.]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  432  <|@ instruction [v103|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  436  <|@ instruction MOV (x: [v103|QWORD[.] + 16], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr  438  <|@ instruction v105|DWORD[_] = COMPRESSPOINTER (input: v97|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [v103|QWORD[.] + 12], y: v105|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [v103|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  444  <|@ instruction [v106|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  446  <|@ instruction v107|DWORD = LEA address: [v1|DWORD + 128] size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: v107|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction v110|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  454  <|@ instruction v111|QWORD = LEA address: [v110|QWORD + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v111|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction MOV (x: [r15|QWORD + 440], y: v111|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [v110|QWORD + 208] instr: 3 <|@ <|@
      nr  464  <|@ instruction MOV x: [v110|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [v110|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV x: [v110|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  470  <|@ instruction v114|QWORD[.] = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  474  <|@ instruction [v115|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  476  <|@ instruction MOV (x: [v115|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [v115|QWORD[.]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction v108|DWORD[_] = MOV input: [v4|QWORD[.] + v107|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [v109|QWORD[.]] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  488  <|@ instruction [v116|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  490  <|@ instruction v117|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  492  <|@ instruction v118|QWORD = LEA address: [v117|QWORD + 24] size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v118|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: v118|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [v117|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [v117|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [v117|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  514  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction v123|DWORD[_] = COMPRESSPOINTER (input: v106|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [v122|QWORD[.] + 16], y: v123|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction v124|DWORD[_] = COMPRESSPOINTER (input: v116|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [v122|QWORD[.] + 12], y: v124|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  532  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  558  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  562  <|@ instruction v119|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v119|QWORD[.]] state [bci:26] <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [v119|QWORD[.]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  572  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  576  <|@ instruction v100|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v100|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [v100|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction v127|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOVE input: v127|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  590  <|@ instruction v81|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v81|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [v81|QWORD[.]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v128|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = MOVE input: v128|QWORD moveKind: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  604  <|@ instruction v62|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v62|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [v62|QWORD[.]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction v129|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  614  <|@ instruction rsi|QWORD = MOVE input: v129|QWORD moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  618  <|@ instruction v43|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v43|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction v130|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOVE input: v130|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  632  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v24|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [v24|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v131|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v131|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  646  <|@ instruction v112|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v112|QWORD[.]] state [bci:26] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [v112|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction v132|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  656  <|@ instruction rsi|QWORD = MOVE input: v132|QWORD moveKind: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  660  <|@ instruction v93|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v93|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [v93|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction v133|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE input: v133|QWORD moveKind: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  674  <|@ instruction v74|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v74|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [v74|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v134|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = MOVE input: v134|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  688  <|@ instruction v55|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v55|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction v135|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: v135|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  702  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v36|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction v136|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = MOVE input: v136|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  716  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v17|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v122|q [0, 1[[32, 34[[524, 526[[530, 532[[560, 562[[574, 576[[588, 590[[602, 604[[616, 618[[630, 632[[644, 646[[658, 660[[672, 674[[686, 688[[700, 702[[714, 716[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v9|d [0, 8[[30, 33[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[32, 33[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 6[[28, 33[[558, 560[[572, 574[[586, 588[[600, 602[[614, 616[[628, 630[[642, 644[[656, 658[[670, 672[[684, 686[[698, 700[[712, 714[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 28[6 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 29[8 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister 18 ShouldHaveRegister 20 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister  "OneSpillStore"
  v4|q QWORD "[r10|q]" v4|q -1 [10, 22[10 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [12, 22[12 MustHaveRegister  "OneSpillStore"
  v6|d DWORD "[r8|d]" v6|d -1 [14, 22[14 MustHaveRegister  "OneSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [16, 22[16 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[rcx|d]" v8|d v1|d [18, 22[18 MustHaveRegister  "OneSpillStore"
  v9|d DWORD "[rbx|d]" v9|d -1 [24, 30[24 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdi|d]" v10|d -1 [26, 31[26 MustHaveRegister  "OneSpillStore"
  v11|q QWORD "[r10|q]" v11|q rax|q [34, 106[[624, 638[[708, 722[34 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [36, 40[[70, 72[36 MustHaveRegister 38 ShouldHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q v13|d [74, 77[74 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q -1 [42, 60[42 MustHaveRegister 44 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q -1 [44, 50[44 MustHaveRegister 46 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q rax|q [716, 721[716 MustHaveRegister 718 MustHaveRegister 720 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q v15|q [60, 63[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q v19|q [64, 69[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[r8|q]" v21|q v14|q [78, 110[[624, 638[110 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q -1 [80, 100[80 MustHaveRegister 82 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q -1 [82, 88[82 MustHaveRegister 84 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q rax|q [632, 637[632 MustHaveRegister 634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v22|q [100, 103[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q v26|q [104, 115[108 MustHaveRegister 112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r10|d]" v28|d v11|q [106, 108[106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v21|q [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r10|q]" v30|q v27|q [116, 188[[610, 624[[694, 708[188 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [118, 122[[152, 154[118 MustHaveRegister 120 ShouldHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q v32|d [156, 159[156 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q -1 [124, 142[124 MustHaveRegister 126 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rsi|q]" v35|q -1 [126, 132[126 MustHaveRegister 128 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q rax|q [702, 707[702 MustHaveRegister 704 MustHaveRegister 706 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q v34|q [142, 145[142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q v38|q [146, 151[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[r8|q]" v40|q v33|q [160, 192[[610, 624[192 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q -1 [162, 182[162 MustHaveRegister 164 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q -1 [164, 170[164 MustHaveRegister 166 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q rax|q [618, 623[618 MustHaveRegister 620 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q v41|q [182, 185[182 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v45|q [186, 197[190 MustHaveRegister 194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[r10|d]" v47|d v30|q [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r8|d]" v48|d v40|q [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r10|q]" v49|q v46|q [198, 270[[596, 610[[680, 694[270 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rax|d]" v50|d -1 [200, 204[[234, 236[200 MustHaveRegister 202 ShouldHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rax|d]" v51|d -1 [236, 238[236 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rax|q]" v52|q v51|d [238, 241[238 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q -1 [206, 224[206 MustHaveRegister 208 MustHaveRegister 216 MustHaveRegister 218 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q -1 [208, 214[208 MustHaveRegister 210 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rax|q]" v55|q rax|q [688, 693[688 MustHaveRegister 690 MustHaveRegister 692 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rax|q]" v57|q v53|q [224, 227[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rax|q]" v58|q v57|q [228, 233[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r8|q]" v59|q v52|q [242, 274[[596, 610[274 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q -1 [244, 264[244 MustHaveRegister 246 MustHaveRegister 254 MustHaveRegister 256 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rsi|q]" v61|q -1 [246, 252[246 MustHaveRegister 248 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rax|q]" v62|q rax|q [604, 609[604 MustHaveRegister 606 MustHaveRegister 608 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rax|q]" v64|q v60|q [264, 267[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q v64|q [268, 279[272 MustHaveRegister 276 MustHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[r10|d]" v66|d v49|q [270, 272[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r8|d]" v67|d v59|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[r10|q]" v68|q v65|q [280, 352[[582, 596[[666, 680[352 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[rax|d]" v69|d -1 [282, 286[[316, 318[282 MustHaveRegister 284 ShouldHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[rax|d]" v70|d -1 [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q v70|d [320, 323[320 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rax|q]" v72|q -1 [288, 306[288 MustHaveRegister 290 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 306 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [290, 296[290 MustHaveRegister 292 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rax|q]" v74|q rax|q [674, 679[674 MustHaveRegister 676 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rax|q]" v76|q v72|q [306, 309[306 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q v76|q [310, 315[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[r8|q]" v78|q v71|q [324, 356[[582, 596[356 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rax|q]" v79|q -1 [326, 346[326 MustHaveRegister 328 MustHaveRegister 336 MustHaveRegister 338 MustHaveRegister 340 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rsi|q]" v80|q -1 [328, 334[328 MustHaveRegister 330 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q rax|q [590, 595[590 MustHaveRegister 592 MustHaveRegister 594 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[rax|q]" v83|q v79|q [346, 349[346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[rax|q]" v84|q v83|q [350, 361[354 MustHaveRegister 358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[r10|d]" v85|d v68|q [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[r8|d]" v86|d v78|q [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[r10|q]" v87|q v84|q [362, 434[[568, 582[[652, 666[434 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[rax|d]" v88|d -1 [364, 368[[398, 400[364 MustHaveRegister 366 ShouldHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[rax|d]" v89|d -1 [400, 402[400 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rax|q]" v90|q v89|d [402, 405[402 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[rax|q]" v91|q -1 [370, 388[370 MustHaveRegister 372 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister 386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v92|q QWORD "[rsi|q]" v92|q -1 [372, 378[372 MustHaveRegister 374 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[rax|q]" v93|q rax|q [660, 665[660 MustHaveRegister 662 MustHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rax|q]" v95|q v91|q [388, 391[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q v95|q [392, 397[394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[r8|q]" v97|q v90|q [406, 438[[568, 582[438 MustHaveRegister  "NoSpillStore"
  v98|q QWORD "[rax|q]" v98|q -1 [408, 428[408 MustHaveRegister 410 MustHaveRegister 418 MustHaveRegister 420 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v99|q QWORD "[rsi|q]" v99|q -1 [410, 416[410 MustHaveRegister 412 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[rax|q]" v100|q rax|q [576, 581[576 MustHaveRegister 578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v102|q QWORD "[rax|q]" v102|q v98|q [428, 431[428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[rax|q]" v103|q v102|q [432, 443[436 MustHaveRegister 440 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[r10|d]" v104|d v87|q [434, 436[434 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[r8|d]" v105|d v97|q [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v106|q QWORD "[r10|q]" v106|q v103|q [444, 516[[554, 568[[638, 652[516 MustHaveRegister  "NoSpillStore"
  v107|d DWORD "[rax|d]" v107|d -1 [446, 450[[480, 482[446 MustHaveRegister 448 ShouldHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v108|d DWORD "[rax|d]" v108|d -1 [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[rax|q]" v109|q v108|d [484, 487[484 MustHaveRegister 486 ShouldHaveRegister  "NoSpillStore"
  v110|q QWORD "[rax|q]" v110|q -1 [452, 470[452 MustHaveRegister 454 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 466 MustHaveRegister 468 MustHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v111|q QWORD "[rsi|q]" v111|q -1 [454, 460[454 MustHaveRegister 456 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rax|q]" v112|q rax|q [646, 651[646 MustHaveRegister 648 MustHaveRegister 650 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[rax|q]" v114|q v110|q [470, 473[470 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[rax|q]" v115|q v114|q [474, 479[476 MustHaveRegister 478 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[r11|q]" v116|q v109|q [488, 520[[554, 568[520 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rax|q]" v117|q -1 [490, 510[490 MustHaveRegister 492 MustHaveRegister 500 MustHaveRegister 502 MustHaveRegister 504 MustHaveRegister 506 MustHaveRegister 508 MustHaveRegister 510 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rsi|q]" v118|q -1 [492, 498[492 MustHaveRegister 494 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[rax|q]" v119|q rax|q [562, 567[562 MustHaveRegister 564 MustHaveRegister 566 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[rax|q]" v121|q v117|q [510, 513[510 MustHaveRegister 512 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[rax|q]" v122|q v121|q [514, 524[518 MustHaveRegister 522 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v123|d DWORD "[r10|d]" v123|d v106|q [516, 518[516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[r11|d]" v124|d v116|q [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rsi|q]" v125|q -1 [556, 558[556 MustHaveRegister 558 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q -1 [570, 572[570 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[rsi|q]" v127|q -1 [584, 586[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v128|q QWORD "[rsi|q]" v128|q -1 [598, 600[598 MustHaveRegister 600 ShouldHaveRegister  "NoSpillStore"
  v129|q QWORD "[rsi|q]" v129|q -1 [612, 614[612 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v130|q QWORD "[rsi|q]" v130|q -1 [626, 628[626 MustHaveRegister 628 ShouldHaveRegister  "NoSpillStore"
  v131|q QWORD "[rsi|q]" v131|q -1 [640, 642[640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v132|q QWORD "[rsi|q]" v132|q -1 [654, 656[654 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v133|q QWORD "[rsi|q]" v133|q -1 [668, 670[668 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v134|q QWORD "[rsi|q]" v134|q -1 [682, 684[682 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v135|q QWORD "[rsi|q]" v135|q -1 [696, 698[696 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v136|q QWORD "[rsi|q]" v136|q -1 [710, 712[710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v137|d DWORD "[vstack:0|d]" v1|d v1|d [29, 35[ "OneSpillStore"
  v138|q QWORD "[-]" v4|q v4|q [22, 31[ "OneSpillStore"
  v139|d DWORD "[vstack:2|d]" v5|d v5|d [22, 31[ "OneSpillStore"
  v140|d DWORD "[vstack:3|d]" v6|d v6|d [22, 31[ "OneSpillStore"
  v141|d DWORD "[vstack:4|d]" v7|d v7|d [22, 31[ "OneSpillStore"
  v142|d DWORD "[vstack:5|d]" v8|d v8|d [22, 31[ "OneSpillStore"
  v143|q QWORD "[-]" v4|q v4|q [31, 70[ "OneSpillStore"
  v144|d DWORD "[vstack:2|d]" v5|d v5|d [31, 146[ "OneSpillStore"
  v145|d DWORD "[vstack:3|d]" v6|d v6|d [31, 228[ "OneSpillStore"
  v146|d DWORD "[vstack:4|d]" v7|d v7|d [31, 310[ "OneSpillStore"
  v147|d DWORD "[vstack:5|d]" v8|d v8|d [31, 392[ "OneSpillStore"
  v148|d DWORD "[vstack:1|d]" v10|d v10|d [31, 64[ "OneSpillStore"
  v149|d DWORD "[rdx|d]" v1|d v1|d [35, 496[[534, 565[[568, 722[36 MustHaveRegister 118 MustHaveRegister 200 MustHaveRegister 282 MustHaveRegister 364 MustHaveRegister 446 MustHaveRegister 476 MustHaveRegister  "OneSpillStore"
  v150|d DWORD "[rdi|d]" v10|d v10|d [64, 86[[624, 635[[708, 722[66 MustHaveRegister  "OneSpillStore"
  v151|q QWORD "[r11|q]" v4|q v4|q [70, 450[[480, 482[[534, 554[[568, 638[[652, 722[72 MustHaveRegister 154 MustHaveRegister 236 MustHaveRegister 318 MustHaveRegister 400 MustHaveRegister 482 MustHaveRegister  "OneSpillStore"
  v152|d DWORD "[r9|d]" v5|d v5|d [146, 168[[550, 554[[610, 621[[624, 638[[694, 722[148 MustHaveRegister  "OneSpillStore"
  v153|d DWORD "[rcx|d]" v6|d v6|d [228, 250[[546, 554[[596, 607[[610, 638[[680, 722[230 MustHaveRegister  "OneSpillStore"
  v154|d DWORD "[rbx|d]" v7|d v7|d [310, 332[[542, 554[[582, 593[[596, 638[[666, 722[312 MustHaveRegister  "OneSpillStore"
  v155|d DWORD "[rbp|d]" v8|d v8|d [392, 414[[538, 554[[568, 579[[582, 638[[652, 722[394 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   12  <|@ instruction v5|DWORD = LEA address: [v1|DWORD - 4] size: DWORD <|@ <|@
      nr   14  <|@ instruction v6|DWORD = LEA address: [v1|DWORD - 3] size: DWORD <|@ <|@
      nr   16  <|@ instruction v7|DWORD = LEA address: [v1|DWORD - 2] size: DWORD <|@ <|@
      nr   18  <|@ instruction v8|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v1|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v9|DWORD = LEA address: [v1|DWORD - 6] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD = LEA address: [v1|DWORD - 5] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = STACKMOVE (input: v142|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = STACKMOVE (input: v141|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = STACKMOVE (input: v140|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = STACKMOVE (input: v139|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   34  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = MOVE input: v137|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction v12|DWORD = LEA address: [v1|DWORD + 123] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v15|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   44  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + 208] instr: 3 <|@ <|@
      nr   54  <|@ instruction MOV x: [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction MOV x: [v15|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   60  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   64  <|@ instruction [v20|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [v20|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v13|DWORD[_] = MOV input: [v4|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   78  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 24] size: QWORD <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: v23|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 440], y: v23|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~address: [v22|QWORD + 216] instr: 3 <|@ <|@
      nr   92  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction MOV x: [v22|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV x: [v22|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction v26|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  104  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction MOV (x: [v27|QWORD[.] + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr  110  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction MOV (x: [v27|QWORD[.] + 12], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  116  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  118  <|@ instruction v31|DWORD = LEA address: [v1|DWORD + 124] size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  126  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v35|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 440], y: v35|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v34|QWORD + 208] instr: 3 <|@ <|@
      nr  136  <|@ instruction MOV x: [v34|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [v34|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV x: [v34|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  142  <|@ instruction v38|QWORD[.] = MOVE input: v34|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  146  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction v32|DWORD[_] = MOV input: [v4|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [v33|QWORD[.]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  160  <|@ instruction [v40|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  164  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 24] size: QWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v41|QWORD + 216] instr: 3 <|@ <|@
      nr  174  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV x: [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  182  <|@ instruction v45|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  186  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ instruction v47|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction MOV (x: [v46|QWORD[.] + 16], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr  192  <|@ instruction v48|DWORD[_] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction MOV (x: [v46|QWORD[.] + 12], y: v48|DWORD[_]) size: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  198  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction v50|DWORD = LEA address: [v1|DWORD + 125] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v53|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  208  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: v54|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: v54|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [v53|QWORD + 208] instr: 3 <|@ <|@
      nr  218  <|@ instruction MOV x: [v53|QWORD] y: 1 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV x: [v53|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  222  <|@ instruction MOV x: [v53|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  224  <|@ instruction v57|QWORD[.] = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [v57|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  228  <|@ instruction [v58|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [v58|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction v51|DWORD[_] = MOV input: [v4|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  242  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction v60|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 24] size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + 216] instr: 3 <|@ <|@
      nr  256  <|@ instruction MOV x: [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV x: [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction MOV x: [v60|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV x: [v60|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  264  <|@ instruction v64|QWORD[.] = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  268  <|@ instruction [v65|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction v66|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  272  <|@ instruction MOV (x: [v65|QWORD[.] + 16], y: v66|DWORD[_]) size: DWORD <|@ <|@
      nr  274  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [v65|QWORD[.] + 12], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  280  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction v69|DWORD = LEA address: [v1|DWORD + 126] size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction v72|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  290  <|@ instruction v73|QWORD = LEA address: [v72|QWORD + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v73|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 440], y: v73|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [v72|QWORD + 208] instr: 3 <|@ <|@
      nr  300  <|@ instruction MOV x: [v72|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v72|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV x: [v72|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  306  <|@ instruction v76|QWORD[.] = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  310  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [v77|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction v70|DWORD[_] = MOV input: [v4|QWORD[.] + v69|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  320  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  324  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction v79|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  328  <|@ instruction v80|QWORD = LEA address: [v79|QWORD + 24] size: QWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v80|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: v80|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [v79|QWORD + 216] instr: 3 <|@ <|@
      nr  338  <|@ instruction MOV x: [v79|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [v79|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [v79|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [v79|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction v83|QWORD[.] = MOVE input: v79|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [v83|QWORD[.]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  350  <|@ instruction [v84|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction v85|DWORD[_] = COMPRESSPOINTER (input: v68|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction MOV (x: [v84|QWORD[.] + 16], y: v85|DWORD[_]) size: DWORD <|@ <|@
      nr  356  <|@ instruction v86|DWORD[_] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction MOV (x: [v84|QWORD[.] + 12], y: v86|DWORD[_]) size: DWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [v84|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  362  <|@ instruction [v87|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  364  <|@ instruction v88|DWORD = LEA address: [v1|DWORD + 127] size: DWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction v91|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  372  <|@ instruction v92|QWORD = LEA address: [v91|QWORD + 16] size: QWORD <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: v92|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV (x: [r15|QWORD + 440], y: v92|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [v91|QWORD + 208] instr: 3 <|@ <|@
      nr  382  <|@ instruction MOV x: [v91|QWORD] y: 1 size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV x: [v91|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  386  <|@ instruction MOV x: [v91|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  388  <|@ instruction v95|QWORD[.] = MOVE input: v91|QWORD moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [v95|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  392  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [v96|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction v89|DWORD[_] = MOV input: [v4|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [v90|QWORD[.]] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  406  <|@ instruction [v97|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction v98|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction v99|QWORD = LEA address: [v98|QWORD + 24] size: QWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v99|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: v99|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [v98|QWORD + 216] instr: 3 <|@ <|@
      nr  420  <|@ instruction MOV x: [v98|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [v98|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV x: [v98|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [v98|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  428  <|@ instruction v102|QWORD[.] = MOVE input: v98|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v102|QWORD[.]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  432  <|@ instruction [v103|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  436  <|@ instruction MOV (x: [v103|QWORD[.] + 16], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr  438  <|@ instruction v105|DWORD[_] = COMPRESSPOINTER (input: v97|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [v103|QWORD[.] + 12], y: v105|DWORD[_]) size: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [v103|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  444  <|@ instruction [v106|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  446  <|@ instruction v107|DWORD = LEA address: [v1|DWORD + 128] size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: v107|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction v110|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  454  <|@ instruction v111|QWORD = LEA address: [v110|QWORD + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v111|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction MOV (x: [r15|QWORD + 440], y: v111|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [v110|QWORD + 208] instr: 3 <|@ <|@
      nr  464  <|@ instruction MOV x: [v110|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [v110|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV x: [v110|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  470  <|@ instruction v114|QWORD[.] = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  474  <|@ instruction [v115|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  476  <|@ instruction MOV (x: [v115|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [v115|QWORD[.]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction v108|DWORD[_] = MOV input: [v4|QWORD[.] + v107|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [v109|QWORD[.]] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  488  <|@ instruction [v116|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  490  <|@ instruction v117|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  492  <|@ instruction v118|QWORD = LEA address: [v117|QWORD + 24] size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v118|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: v118|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [v117|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [v117|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [v117|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  514  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction v123|DWORD[_] = COMPRESSPOINTER (input: v106|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [v122|QWORD[.] + 16], y: v123|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction v124|DWORD[_] = COMPRESSPOINTER (input: v116|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [v122|QWORD[.] + 12], y: v124|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  532  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  558  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  562  <|@ instruction v119|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v119|QWORD[.]] state [bci:26] <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [v119|QWORD[.]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  572  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  576  <|@ instruction v100|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v100|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [v100|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction v127|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOVE input: v127|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  590  <|@ instruction v81|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v81|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [v81|QWORD[.]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v128|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = MOVE input: v128|QWORD moveKind: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  604  <|@ instruction v62|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v62|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [v62|QWORD[.]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction v129|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  614  <|@ instruction rsi|QWORD = MOVE input: v129|QWORD moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  618  <|@ instruction v43|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v43|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction v130|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOVE input: v130|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  632  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v24|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [v24|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v131|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v131|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  646  <|@ instruction v112|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v112|QWORD[.]] state [bci:26] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [v112|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction v132|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  656  <|@ instruction rsi|QWORD = MOVE input: v132|QWORD moveKind: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  660  <|@ instruction v93|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v93|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [v93|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction v133|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE input: v133|QWORD moveKind: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  674  <|@ instruction v74|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v74|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [v74|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v134|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = MOVE input: v134|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  688  <|@ instruction v55|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v55|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction v135|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: v135|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  702  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v36|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction v136|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = MOVE input: v136|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  716  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v17|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v122|q [0, 1[[32, 34[[524, 526[[530, 532[[560, 562[[574, 576[[588, 590[[602, 604[[616, 618[[630, 632[[644, 646[[658, 660[[672, 674[[686, 688[[700, 702[[714, 716[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v9|d [0, 8[[30, 33[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[32, 33[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 6[[28, 33[[558, 560[[572, 574[[586, 588[[600, 602[[614, 616[[628, 630[[642, 644[[656, 658[[670, 672[[684, 686[[698, 700[[712, 714[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[32, 33[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 28[6 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 29[8 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister 18 ShouldHaveRegister 20 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister  "OneSpillStore"
  v4|q QWORD "[r10|q]" v4|q -1 [10, 22[10 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [12, 22[12 MustHaveRegister  "OneSpillStore"
  v6|d DWORD "[r8|d]" v6|d -1 [14, 22[14 MustHaveRegister  "OneSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [16, 22[16 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[rcx|d]" v8|d v1|d [18, 22[18 MustHaveRegister  "OneSpillStore"
  v9|d DWORD "[rbx|d]" v9|d -1 [24, 30[24 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdi|d]" v10|d -1 [26, 31[26 MustHaveRegister  "OneSpillStore"
  v11|q QWORD "[r10|q]" v11|q rax|q [34, 106[[624, 638[[708, 722[34 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [36, 40[[70, 72[36 MustHaveRegister 38 ShouldHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q v13|d [74, 77[74 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q -1 [42, 60[42 MustHaveRegister 44 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q -1 [44, 50[44 MustHaveRegister 46 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q rax|q [716, 721[716 MustHaveRegister 718 MustHaveRegister 720 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q v15|q [60, 63[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q v19|q [64, 69[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[r8|q]" v21|q v14|q [78, 110[[624, 638[110 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q -1 [80, 100[80 MustHaveRegister 82 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q -1 [82, 88[82 MustHaveRegister 84 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q rax|q [632, 637[632 MustHaveRegister 634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v22|q [100, 103[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q v26|q [104, 115[108 MustHaveRegister 112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r10|d]" v28|d v11|q [106, 108[106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v21|q [110, 112[110 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r10|q]" v30|q v27|q [116, 188[[610, 624[[694, 708[188 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [118, 122[[152, 154[118 MustHaveRegister 120 ShouldHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q v32|d [156, 159[156 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q -1 [124, 142[124 MustHaveRegister 126 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rsi|q]" v35|q -1 [126, 132[126 MustHaveRegister 128 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q rax|q [702, 707[702 MustHaveRegister 704 MustHaveRegister 706 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q v34|q [142, 145[142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q v38|q [146, 151[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[r8|q]" v40|q v33|q [160, 192[[610, 624[192 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q -1 [162, 182[162 MustHaveRegister 164 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q -1 [164, 170[164 MustHaveRegister 166 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q rax|q [618, 623[618 MustHaveRegister 620 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q v41|q [182, 185[182 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v45|q [186, 197[190 MustHaveRegister 194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[r10|d]" v47|d v30|q [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r8|d]" v48|d v40|q [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r10|q]" v49|q v46|q [198, 270[[596, 610[[680, 694[270 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rax|d]" v50|d -1 [200, 204[[234, 236[200 MustHaveRegister 202 ShouldHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rax|d]" v51|d -1 [236, 238[236 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rax|q]" v52|q v51|d [238, 241[238 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q -1 [206, 224[206 MustHaveRegister 208 MustHaveRegister 216 MustHaveRegister 218 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q -1 [208, 214[208 MustHaveRegister 210 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rax|q]" v55|q rax|q [688, 693[688 MustHaveRegister 690 MustHaveRegister 692 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rax|q]" v57|q v53|q [224, 227[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rax|q]" v58|q v57|q [228, 233[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r8|q]" v59|q v52|q [242, 274[[596, 610[274 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q -1 [244, 264[244 MustHaveRegister 246 MustHaveRegister 254 MustHaveRegister 256 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rsi|q]" v61|q -1 [246, 252[246 MustHaveRegister 248 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rax|q]" v62|q rax|q [604, 609[604 MustHaveRegister 606 MustHaveRegister 608 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rax|q]" v64|q v60|q [264, 267[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q v64|q [268, 279[272 MustHaveRegister 276 MustHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[r10|d]" v66|d v49|q [270, 272[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r8|d]" v67|d v59|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[r10|q]" v68|q v65|q [280, 352[[582, 596[[666, 680[352 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[rax|d]" v69|d -1 [282, 286[[316, 318[282 MustHaveRegister 284 ShouldHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[rax|d]" v70|d -1 [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q v70|d [320, 323[320 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rax|q]" v72|q -1 [288, 306[288 MustHaveRegister 290 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 306 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [290, 296[290 MustHaveRegister 292 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rax|q]" v74|q rax|q [674, 679[674 MustHaveRegister 676 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rax|q]" v76|q v72|q [306, 309[306 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q v76|q [310, 315[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[r8|q]" v78|q v71|q [324, 356[[582, 596[356 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rax|q]" v79|q -1 [326, 346[326 MustHaveRegister 328 MustHaveRegister 336 MustHaveRegister 338 MustHaveRegister 340 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rsi|q]" v80|q -1 [328, 334[328 MustHaveRegister 330 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q rax|q [590, 595[590 MustHaveRegister 592 MustHaveRegister 594 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[rax|q]" v83|q v79|q [346, 349[346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[rax|q]" v84|q v83|q [350, 361[354 MustHaveRegister 358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[r10|d]" v85|d v68|q [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[r8|d]" v86|d v78|q [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[r10|q]" v87|q v84|q [362, 434[[568, 582[[652, 666[434 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[rax|d]" v88|d -1 [364, 368[[398, 400[364 MustHaveRegister 366 ShouldHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[rax|d]" v89|d -1 [400, 402[400 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rax|q]" v90|q v89|d [402, 405[402 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[rax|q]" v91|q -1 [370, 388[370 MustHaveRegister 372 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister 386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v92|q QWORD "[rsi|q]" v92|q -1 [372, 378[372 MustHaveRegister 374 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[rax|q]" v93|q rax|q [660, 665[660 MustHaveRegister 662 MustHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rax|q]" v95|q v91|q [388, 391[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q v95|q [392, 397[394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[r8|q]" v97|q v90|q [406, 438[[568, 582[438 MustHaveRegister  "NoSpillStore"
  v98|q QWORD "[rax|q]" v98|q -1 [408, 428[408 MustHaveRegister 410 MustHaveRegister 418 MustHaveRegister 420 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v99|q QWORD "[rsi|q]" v99|q -1 [410, 416[410 MustHaveRegister 412 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[rax|q]" v100|q rax|q [576, 581[576 MustHaveRegister 578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v102|q QWORD "[rax|q]" v102|q v98|q [428, 431[428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[rax|q]" v103|q v102|q [432, 443[436 MustHaveRegister 440 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[r10|d]" v104|d v87|q [434, 436[434 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[r8|d]" v105|d v97|q [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v106|q QWORD "[r10|q]" v106|q v103|q [444, 516[[554, 568[[638, 652[516 MustHaveRegister  "NoSpillStore"
  v107|d DWORD "[rax|d]" v107|d -1 [446, 450[[480, 482[446 MustHaveRegister 448 ShouldHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v108|d DWORD "[rax|d]" v108|d -1 [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[rax|q]" v109|q v108|d [484, 487[484 MustHaveRegister 486 ShouldHaveRegister  "NoSpillStore"
  v110|q QWORD "[rax|q]" v110|q -1 [452, 470[452 MustHaveRegister 454 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 466 MustHaveRegister 468 MustHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v111|q QWORD "[rsi|q]" v111|q -1 [454, 460[454 MustHaveRegister 456 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rax|q]" v112|q rax|q [646, 651[646 MustHaveRegister 648 MustHaveRegister 650 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[rax|q]" v114|q v110|q [470, 473[470 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[rax|q]" v115|q v114|q [474, 479[476 MustHaveRegister 478 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[r11|q]" v116|q v109|q [488, 520[[554, 568[520 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rax|q]" v117|q -1 [490, 510[490 MustHaveRegister 492 MustHaveRegister 500 MustHaveRegister 502 MustHaveRegister 504 MustHaveRegister 506 MustHaveRegister 508 MustHaveRegister 510 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rsi|q]" v118|q -1 [492, 498[492 MustHaveRegister 494 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[rax|q]" v119|q rax|q [562, 567[562 MustHaveRegister 564 MustHaveRegister 566 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[rax|q]" v121|q v117|q [510, 513[510 MustHaveRegister 512 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[rax|q]" v122|q v121|q [514, 524[518 MustHaveRegister 522 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v123|d DWORD "[r10|d]" v123|d v106|q [516, 518[516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[r11|d]" v124|d v116|q [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rsi|q]" v125|q -1 [556, 558[556 MustHaveRegister 558 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q -1 [570, 572[570 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[rsi|q]" v127|q -1 [584, 586[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v128|q QWORD "[rsi|q]" v128|q -1 [598, 600[598 MustHaveRegister 600 ShouldHaveRegister  "NoSpillStore"
  v129|q QWORD "[rsi|q]" v129|q -1 [612, 614[612 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v130|q QWORD "[rsi|q]" v130|q -1 [626, 628[626 MustHaveRegister 628 ShouldHaveRegister  "NoSpillStore"
  v131|q QWORD "[rsi|q]" v131|q -1 [640, 642[640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v132|q QWORD "[rsi|q]" v132|q -1 [654, 656[654 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v133|q QWORD "[rsi|q]" v133|q -1 [668, 670[668 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v134|q QWORD "[rsi|q]" v134|q -1 [682, 684[682 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v135|q QWORD "[rsi|q]" v135|q -1 [696, 698[696 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v136|q QWORD "[rsi|q]" v136|q -1 [710, 712[710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v137|d DWORD "[vstack:0|d]" v1|d v1|d [29, 35[ "OneSpillStore"
  v138|q QWORD "[-]" v4|q v4|q [22, 31[ "OneSpillStore"
  v139|d DWORD "[vstack:2|d]" v5|d v5|d [22, 31[ "OneSpillStore"
  v140|d DWORD "[vstack:3|d]" v6|d v6|d [22, 31[ "OneSpillStore"
  v141|d DWORD "[vstack:4|d]" v7|d v7|d [22, 31[ "OneSpillStore"
  v142|d DWORD "[vstack:5|d]" v8|d v8|d [22, 31[ "OneSpillStore"
  v143|q QWORD "[-]" v4|q v4|q [31, 70[ "OneSpillStore"
  v144|d DWORD "[vstack:2|d]" v5|d v5|d [31, 146[ "OneSpillStore"
  v145|d DWORD "[vstack:3|d]" v6|d v6|d [31, 228[ "OneSpillStore"
  v146|d DWORD "[vstack:4|d]" v7|d v7|d [31, 310[ "OneSpillStore"
  v147|d DWORD "[vstack:5|d]" v8|d v8|d [31, 392[ "OneSpillStore"
  v148|d DWORD "[vstack:1|d]" v10|d v10|d [31, 64[ "OneSpillStore"
  v149|d DWORD "[rdx|d]" v1|d v1|d [35, 496[[534, 565[[568, 722[36 MustHaveRegister 118 MustHaveRegister 200 MustHaveRegister 282 MustHaveRegister 364 MustHaveRegister 446 MustHaveRegister 476 MustHaveRegister  "OneSpillStore"
  v150|d DWORD "[rdi|d]" v10|d v10|d [64, 86[[624, 635[[708, 722[66 MustHaveRegister  "OneSpillStore"
  v151|q QWORD "[r11|q]" v4|q v4|q [70, 450[[480, 482[[534, 554[[568, 638[[652, 722[72 MustHaveRegister 154 MustHaveRegister 236 MustHaveRegister 318 MustHaveRegister 400 MustHaveRegister 482 MustHaveRegister  "OneSpillStore"
  v152|d DWORD "[r9|d]" v5|d v5|d [146, 168[[550, 554[[610, 621[[624, 638[[694, 722[148 MustHaveRegister  "OneSpillStore"
  v153|d DWORD "[rcx|d]" v6|d v6|d [228, 250[[546, 554[[596, 607[[610, 638[[680, 722[230 MustHaveRegister  "OneSpillStore"
  v154|d DWORD "[rbx|d]" v7|d v7|d [310, 332[[542, 554[[582, 593[[596, 638[[666, 722[312 MustHaveRegister  "OneSpillStore"
  v155|d DWORD "[rbp|d]" v8|d v8|d [392, 414[[538, 554[[568, 579[[582, 638[[652, 722[394 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   12  <|@ instruction v5|DWORD = LEA address: [v1|DWORD - 4] size: DWORD <|@ <|@
      nr   14  <|@ instruction v6|DWORD = LEA address: [v1|DWORD - 3] size: DWORD <|@ <|@
      nr   16  <|@ instruction v7|DWORD = LEA address: [v1|DWORD - 2] size: DWORD <|@ <|@
      nr   18  <|@ instruction v8|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v1|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   24  <|@ instruction v9|DWORD = LEA address: [v1|DWORD - 6] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD = LEA address: [v1|DWORD - 5] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = STACKMOVE (input: v142|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = STACKMOVE (input: v141|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = STACKMOVE (input: v140|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = STACKMOVE (input: v139|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   34  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = MOVE input: v137|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction v12|DWORD = LEA address: [v1|DWORD + 123] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v15|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   44  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + 208] instr: 3 <|@ <|@
      nr   54  <|@ instruction MOV x: [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction MOV x: [v15|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   60  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v148|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   64  <|@ instruction [v20|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [v20|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v148|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction v13|DWORD[_] = MOV input: [v4|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   78  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 24] size: QWORD <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: v23|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 440], y: v23|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~address: [v22|QWORD + 216] instr: 3 <|@ <|@
      nr   92  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction MOV x: [v22|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV x: [v22|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction v26|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  104  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction MOV (x: [v27|QWORD[.] + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr  110  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction MOV (x: [v27|QWORD[.] + 12], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  116  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  118  <|@ instruction v31|DWORD = LEA address: [v1|DWORD + 124] size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  126  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v35|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 440], y: v35|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v34|QWORD + 208] instr: 3 <|@ <|@
      nr  136  <|@ instruction MOV x: [v34|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [v34|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV x: [v34|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  142  <|@ instruction v38|QWORD[.] = MOVE input: v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v144|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  146  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v144|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction v32|DWORD[_] = MOV input: [v4|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  160  <|@ instruction [v40|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  164  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 24] size: QWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v41|QWORD + 216] instr: 3 <|@ <|@
      nr  174  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV x: [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  182  <|@ instruction v45|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  186  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ instruction v47|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction MOV (x: [v46|QWORD[.] + 16], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr  192  <|@ instruction v48|DWORD[_] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction MOV (x: [v46|QWORD[.] + 12], y: v48|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  198  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction v50|DWORD = LEA address: [v1|DWORD + 125] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v53|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  208  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: v54|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: v54|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [v53|QWORD + 208] instr: 3 <|@ <|@
      nr  218  <|@ instruction MOV x: [v53|QWORD] y: 1 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV x: [v53|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  222  <|@ instruction MOV x: [v53|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  224  <|@ instruction v57|QWORD[.] = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  228  <|@ instruction [v58|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [v58|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction v51|DWORD[_] = MOV input: [v4|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  242  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction v60|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 24] size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + 216] instr: 3 <|@ <|@
      nr  256  <|@ instruction MOV x: [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV x: [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction MOV x: [v60|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV x: [v60|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  264  <|@ instruction v64|QWORD[.] = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  268  <|@ instruction [v65|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction v66|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  272  <|@ instruction MOV (x: [v65|QWORD[.] + 16], y: v66|DWORD[_]) size: DWORD <|@ <|@
      nr  274  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [v65|QWORD[.] + 12], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  280  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction v69|DWORD = LEA address: [v1|DWORD + 126] size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction v72|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  290  <|@ instruction v73|QWORD = LEA address: [v72|QWORD + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v73|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 440], y: v73|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [v72|QWORD + 208] instr: 3 <|@ <|@
      nr  300  <|@ instruction MOV x: [v72|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v72|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV x: [v72|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  306  <|@ instruction v76|QWORD[.] = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  310  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [v77|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction v70|DWORD[_] = MOV input: [v4|QWORD[.] + v69|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  320  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  324  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction v79|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  328  <|@ instruction v80|QWORD = LEA address: [v79|QWORD + 24] size: QWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v80|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: v80|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [v79|QWORD + 216] instr: 3 <|@ <|@
      nr  338  <|@ instruction MOV x: [v79|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [v79|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [v79|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [v79|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction v83|QWORD[.] = MOVE input: v79|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  350  <|@ instruction [v84|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction v85|DWORD[_] = COMPRESSPOINTER (input: v68|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction MOV (x: [v84|QWORD[.] + 16], y: v85|DWORD[_]) size: DWORD <|@ <|@
      nr  356  <|@ instruction v86|DWORD[_] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction MOV (x: [v84|QWORD[.] + 12], y: v86|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  362  <|@ instruction [v87|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  364  <|@ instruction v88|DWORD = LEA address: [v1|DWORD + 127] size: DWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction v91|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  372  <|@ instruction v92|QWORD = LEA address: [v91|QWORD + 16] size: QWORD <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: v92|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV (x: [r15|QWORD + 440], y: v92|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [v91|QWORD + 208] instr: 3 <|@ <|@
      nr  382  <|@ instruction MOV x: [v91|QWORD] y: 1 size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV x: [v91|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  386  <|@ instruction MOV x: [v91|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  388  <|@ instruction v95|QWORD[.] = MOVE input: v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  392  <|@ instruction [v96|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [v96|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v96|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction v89|DWORD[_] = MOV input: [v4|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  406  <|@ instruction [v97|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction v98|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction v99|QWORD = LEA address: [v98|QWORD + 24] size: QWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v99|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: v99|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [v98|QWORD + 216] instr: 3 <|@ <|@
      nr  420  <|@ instruction MOV x: [v98|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [v98|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV x: [v98|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [v98|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  428  <|@ instruction v102|QWORD[.] = MOVE input: v98|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  432  <|@ instruction [v103|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  436  <|@ instruction MOV (x: [v103|QWORD[.] + 16], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr  438  <|@ instruction v105|DWORD[_] = COMPRESSPOINTER (input: v97|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [v103|QWORD[.] + 12], y: v105|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  444  <|@ instruction [v106|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  446  <|@ instruction v107|DWORD = LEA address: [v1|DWORD + 128] size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: v107|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction v110|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  454  <|@ instruction v111|QWORD = LEA address: [v110|QWORD + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v111|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction MOV (x: [r15|QWORD + 440], y: v111|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [v110|QWORD + 208] instr: 3 <|@ <|@
      nr  464  <|@ instruction MOV x: [v110|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [v110|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV x: [v110|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  470  <|@ instruction v114|QWORD[.] = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  474  <|@ instruction [v115|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  476  <|@ instruction MOV (x: [v115|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE input: v115|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction v108|DWORD[_] = MOV input: [v4|QWORD[.] + v107|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  488  <|@ instruction [v116|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  490  <|@ instruction v117|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  492  <|@ instruction v118|QWORD = LEA address: [v117|QWORD + 24] size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v118|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: v118|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [v117|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [v117|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [v117|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  514  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction v123|DWORD[_] = COMPRESSPOINTER (input: v106|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [v122|QWORD[.] + 16], y: v123|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction v124|DWORD[_] = COMPRESSPOINTER (input: v116|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [v122|QWORD[.] + 12], y: v124|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  532  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  558  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  562  <|@ instruction v119|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v119|QWORD[.]] state [bci:26] <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  572  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  576  <|@ instruction v100|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v100|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction v127|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOVE input: v127|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  590  <|@ instruction v81|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v81|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  598  <|@ instruction v128|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = MOVE input: v128|QWORD moveKind: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  604  <|@ instruction v62|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v62|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction v129|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  614  <|@ instruction rsi|QWORD = MOVE input: v129|QWORD moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  618  <|@ instruction v43|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v43|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v144|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction v130|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOVE input: v130|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  632  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v24|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVE input: v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v131|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v131|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  646  <|@ instruction v112|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v112|QWORD[.]] state [bci:26] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction v132|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  656  <|@ instruction rsi|QWORD = MOVE input: v132|QWORD moveKind: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  660  <|@ instruction v93|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v93|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction v133|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE input: v133|QWORD moveKind: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  674  <|@ instruction v74|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v74|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  682  <|@ instruction v134|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = MOVE input: v134|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  688  <|@ instruction v55|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v55|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v144|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction v135|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: v135|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  702  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v36|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v148|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v144|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction v136|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = MOVE input: v136|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  716  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v17|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVE input: v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   12  <|@ instruction v5|DWORD = LEA address: [v1|DWORD - 4] size: DWORD <|@ <|@
      nr   14  <|@ instruction v6|DWORD = LEA address: [v1|DWORD - 3] size: DWORD <|@ <|@
      nr   16  <|@ instruction v7|DWORD = LEA address: [v1|DWORD - 2] size: DWORD <|@ <|@
      nr   18  <|@ instruction v8|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v1|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   24  <|@ instruction v9|DWORD = LEA address: [v1|DWORD - 6] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD = LEA address: [v1|DWORD - 5] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = STACKMOVE (input: v142|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = STACKMOVE (input: v141|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = STACKMOVE (input: v140|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = STACKMOVE (input: v139|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   34  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = MOVE input: v137|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction v12|DWORD = LEA address: [v1|DWORD + 123] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v15|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   44  <|@ instruction v16|QWORD = LEA address: [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + 208] instr: 3 <|@ <|@
      nr   54  <|@ instruction MOV x: [v15|QWORD] y: 1 size: QWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [v15|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction MOV x: [v15|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   60  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v148|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [v20|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v148|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction v13|DWORD[_] = MOV input: [v4|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 24] size: QWORD <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: v23|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 440], y: v23|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~address: [v22|QWORD + 216] instr: 3 <|@ <|@
      nr   92  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction MOV x: [v22|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV x: [v22|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction v26|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction MOV (x: [v27|QWORD[.] + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr  110  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction MOV (x: [v27|QWORD[.] + 12], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  118  <|@ instruction v31|DWORD = LEA address: [v1|DWORD + 124] size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v34|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  126  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v35|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 440], y: v35|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v34|QWORD + 208] instr: 3 <|@ <|@
      nr  136  <|@ instruction MOV x: [v34|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [v34|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV x: [v34|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  142  <|@ instruction v38|QWORD[.] = MOVE input: v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v144|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v144|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction v32|DWORD[_] = MOV input: [v4|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  164  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 24] size: QWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v41|QWORD + 216] instr: 3 <|@ <|@
      nr  174  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV x: [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  182  <|@ instruction v45|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ instruction v47|DWORD[_] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction MOV (x: [v46|QWORD[.] + 16], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr  192  <|@ instruction v48|DWORD[_] = COMPRESSPOINTER (input: v40|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction MOV (x: [v46|QWORD[.] + 12], y: v48|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction v50|DWORD = LEA address: [v1|DWORD + 125] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: v50|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v53|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  208  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: v54|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: v54|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [v53|QWORD + 208] instr: 3 <|@ <|@
      nr  218  <|@ instruction MOV x: [v53|QWORD] y: 1 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV x: [v53|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  222  <|@ instruction MOV x: [v53|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  224  <|@ instruction v57|QWORD[.] = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [v58|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction v51|DWORD[_] = MOV input: [v4|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction v60|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 24] size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + 216] instr: 3 <|@ <|@
      nr  256  <|@ instruction MOV x: [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV x: [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction MOV x: [v60|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV x: [v60|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  264  <|@ instruction v64|QWORD[.] = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction v66|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  272  <|@ instruction MOV (x: [v65|QWORD[.] + 16], y: v66|DWORD[_]) size: DWORD <|@ <|@
      nr  274  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [v65|QWORD[.] + 12], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction v69|DWORD = LEA address: [v1|DWORD + 126] size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction v72|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  290  <|@ instruction v73|QWORD = LEA address: [v72|QWORD + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v73|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 440], y: v73|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [v72|QWORD + 208] instr: 3 <|@ <|@
      nr  300  <|@ instruction MOV x: [v72|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v72|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV x: [v72|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  306  <|@ instruction v76|QWORD[.] = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [v77|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction v70|DWORD[_] = MOV input: [v4|QWORD[.] + v69|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  320  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction v79|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  328  <|@ instruction v80|QWORD = LEA address: [v79|QWORD + 24] size: QWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v80|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: v80|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [v79|QWORD + 216] instr: 3 <|@ <|@
      nr  338  <|@ instruction MOV x: [v79|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [v79|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [v79|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [v79|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction v83|QWORD[.] = MOVE input: v79|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction v85|DWORD[_] = COMPRESSPOINTER (input: v68|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction MOV (x: [v84|QWORD[.] + 16], y: v85|DWORD[_]) size: DWORD <|@ <|@
      nr  356  <|@ instruction v86|DWORD[_] = COMPRESSPOINTER (input: v78|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction MOV (x: [v84|QWORD[.] + 12], y: v86|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  364  <|@ instruction v88|DWORD = LEA address: [v1|DWORD + 127] size: DWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction v91|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  372  <|@ instruction v92|QWORD = LEA address: [v91|QWORD + 16] size: QWORD <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: v92|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV (x: [r15|QWORD + 440], y: v92|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [v91|QWORD + 208] instr: 3 <|@ <|@
      nr  382  <|@ instruction MOV x: [v91|QWORD] y: 1 size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV x: [v91|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  386  <|@ instruction MOV x: [v91|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  388  <|@ instruction v95|QWORD[.] = MOVE input: v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [v96|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v96|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction v89|DWORD[_] = MOV input: [v4|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction v98|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction v99|QWORD = LEA address: [v98|QWORD + 24] size: QWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v99|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: v99|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [v98|QWORD + 216] instr: 3 <|@ <|@
      nr  420  <|@ instruction MOV x: [v98|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [v98|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV x: [v98|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [v98|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  428  <|@ instruction v102|QWORD[.] = MOVE input: v98|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  436  <|@ instruction MOV (x: [v103|QWORD[.] + 16], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr  438  <|@ instruction v105|DWORD[_] = COMPRESSPOINTER (input: v97|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [v103|QWORD[.] + 12], y: v105|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  446  <|@ instruction v107|DWORD = LEA address: [v1|DWORD + 128] size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: v107|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction v110|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  454  <|@ instruction v111|QWORD = LEA address: [v110|QWORD + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v111|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction MOV (x: [r15|QWORD + 440], y: v111|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [v110|QWORD + 208] instr: 3 <|@ <|@
      nr  464  <|@ instruction MOV x: [v110|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [v110|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV x: [v110|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  470  <|@ instruction v114|QWORD[.] = MOVE input: v110|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  476  <|@ instruction MOV (x: [v115|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE input: v115|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction v108|DWORD[_] = MOV input: [v4|QWORD[.] + v107|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  490  <|@ instruction v117|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  492  <|@ instruction v118|QWORD = LEA address: [v117|QWORD + 24] size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v118|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: v118|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [v117|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [v117|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [v117|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction v123|DWORD[_] = COMPRESSPOINTER (input: v106|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [v122|QWORD[.] + 16], y: v123|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction v124|DWORD[_] = COMPRESSPOINTER (input: v116|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [v122|QWORD[.] + 12], y: v124|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  532  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  558  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  562  <|@ instruction v119|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v119|QWORD[.]] state [bci:26] <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  572  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  576  <|@ instruction v100|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v100|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction v127|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOVE input: v127|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  590  <|@ instruction v81|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v81|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  598  <|@ instruction v128|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = MOVE input: v128|QWORD moveKind: QWORD <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  604  <|@ instruction v62|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v62|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction v129|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  614  <|@ instruction rsi|QWORD = MOVE input: v129|QWORD moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  618  <|@ instruction v43|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v43|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v144|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction v130|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOVE input: v130|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  632  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v24|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVE input: v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v131|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v131|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  646  <|@ instruction v112|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} v106|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=v1|DWORD} Object[null] 
vobject:Integer:1{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v112|QWORD[.]] state [bci:26] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction v132|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  656  <|@ instruction rsi|QWORD = MOVE input: v132|QWORD moveKind: QWORD <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  660  <|@ instruction v93|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} v87|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=v8|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v1|DWORD} Object[null] 
vobject:Integer:2{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:3{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v93|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction v133|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE input: v133|QWORD moveKind: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  674  <|@ instruction v74|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} v68|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=v7|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v8|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v1|DWORD} Object[null] 
vobject:Integer:3{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:4{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:5{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v74|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  682  <|@ instruction v134|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = MOVE input: v134|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  688  <|@ instruction v55|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} v49|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=v6|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v7|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v8|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v1|DWORD} Object[null] 
vobject:Integer:4{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:5{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:6{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:7{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v55|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v144|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction v135|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: v135|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  702  <|@ instruction v36|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} v30|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=v5|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v6|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v7|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v8|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v1|DWORD} Object[null] 
vobject:Integer:5{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:6{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:7{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:8{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:9{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v36|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v148|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOVE input: v147|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVE input: v146|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: v144|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction v136|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = MOVE input: v136|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  716  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} v11|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=v10|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=v10|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=v5|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=v5|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=v6|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=v6|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=v7|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=v7|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=v8|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=v8|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=v1|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=v1|DWORD} Object[null] 
vobject:Integer:6{value=v10|DWORD} Ljava/lang/Integer; v10|DWORD 
vobject:Integer:7{value=v5|DWORD} Ljava/lang/Integer; v5|DWORD 
vobject:Integer:8{value=v6|DWORD} Ljava/lang/Integer; v6|DWORD 
vobject:Integer:9{value=v7|DWORD} Ljava/lang/Integer; v7|DWORD 
vobject:Integer:10{value=v8|DWORD} Ljava/lang/Integer; v8|DWORD 
vobject:Integer:11{value=v1|DWORD} Ljava/lang/Integer; v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v17|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v155|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v154|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v153|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVE input: v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=vstack:1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=vstack:1|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=vstack:2|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=vstack:2|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=vstack:3|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=vstack:3|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=vstack:4|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=vstack:4|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=vstack:5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=vstack:5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=vstack:0|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=vstack:0|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=vstack:1|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=vstack:1|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=vstack:2|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=vstack:2|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=vstack:3|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=vstack:3|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=vstack:4|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=vstack:4|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=vstack:5|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=vstack:5|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=vstack:0|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=vstack:0|DWORD} Object[null] 
vobject:Integer:6{value=vstack:1|DWORD} Ljava/lang/Integer; vstack:1|DWORD 
vobject:Integer:7{value=vstack:2|DWORD} Ljava/lang/Integer; vstack:2|DWORD 
vobject:Integer:8{value=vstack:3|DWORD} Ljava/lang/Integer; vstack:3|DWORD 
vobject:Integer:9{value=vstack:4|DWORD} Ljava/lang/Integer; vstack:4|DWORD 
vobject:Integer:10{value=vstack:5|DWORD} Ljava/lang/Integer; vstack:5|DWORD 
vobject:Integer:11{value=vstack:0|DWORD} Ljava/lang/Integer; vstack:0|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr   54  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr   92  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  110  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  118  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  126  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  164  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  218  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  222  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  224  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  256  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  264  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  272  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  274  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  300  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  338  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  356  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  364  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  382  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  386  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  428  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  436  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  438  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  446  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  464  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  476  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  490  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  526  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  532  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  578  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  588  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  592  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=vstack:1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=vstack:1|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=vstack:2|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=vstack:2|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=vstack:3|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=vstack:3|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=vstack:4|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=vstack:4|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=vstack:5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=vstack:5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=vstack:0|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=vstack:0|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=vstack:1|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=vstack:1|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=vstack:2|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=vstack:2|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=vstack:3|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=vstack:3|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=vstack:4|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=vstack:4|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=vstack:5|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=vstack:5|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=vstack:0|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=vstack:0|DWORD} Object[null] 
vobject:Integer:6{value=vstack:1|DWORD} Ljava/lang/Integer; vstack:1|DWORD 
vobject:Integer:7{value=vstack:2|DWORD} Ljava/lang/Integer; vstack:2|DWORD 
vobject:Integer:8{value=vstack:3|DWORD} Ljava/lang/Integer; vstack:3|DWORD 
vobject:Integer:9{value=vstack:4|DWORD} Ljava/lang/Integer; vstack:4|DWORD 
vobject:Integer:10{value=vstack:5|DWORD} Ljava/lang/Integer; vstack:5|DWORD 
vobject:Integer:11{value=vstack:0|DWORD} Ljava/lang/Integer; vstack:0|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr   54  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr   92  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  110  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  118  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  126  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  136  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  164  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  178  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  218  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  222  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  224  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  256  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  262  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  264  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  270  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  272  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  274  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  300  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  338  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  346  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  352  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  356  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  364  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  366  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  382  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  386  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  420  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  428  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  436  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  438  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  446  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  464  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  476  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  490  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  526  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  532  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  560  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  578  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  588  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  592  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  630  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  714  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   14  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction vstack:3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction vstack:2|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   98  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction vstack:1|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=vstack:1|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=vstack:1|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=vstack:2|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=vstack:2|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=vstack:3|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=vstack:3|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=vstack:4|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=vstack:4|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=vstack:5|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=vstack:5|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=vstack:0|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=vstack:0|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=vstack:1|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=vstack:1|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=vstack:2|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=vstack:2|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=vstack:3|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=vstack:3|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=vstack:4|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=vstack:4|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=vstack:5|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=vstack:5|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=vstack:0|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=vstack:0|DWORD} Object[null] 
vobject:Integer:6{value=vstack:1|DWORD} Ljava/lang/Integer; vstack:1|DWORD 
vobject:Integer:7{value=vstack:2|DWORD} Ljava/lang/Integer; vstack:2|DWORD 
vobject:Integer:8{value=vstack:3|DWORD} Ljava/lang/Integer; vstack:3|DWORD 
vobject:Integer:9{value=vstack:4|DWORD} Ljava/lang/Integer; vstack:4|DWORD 
vobject:Integer:10{value=vstack:5|DWORD} Ljava/lang/Integer; vstack:5|DWORD 
vobject:Integer:11{value=vstack:0|DWORD} Ljava/lang/Integer; vstack:0|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  172  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  120  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  234  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  252  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  262  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  264  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  316  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  372  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  448  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  576  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  578  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  580  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  624  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  694  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  720  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  738  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  742  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  802  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  804  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  808  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  810  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  816  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  824  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  828  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  846  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  866  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  868  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction vstack:3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction vstack:3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction vstack:2|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  834  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  614  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  490  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  358  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  218  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction vstack:2|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  682  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  566  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  438  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  302  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rdi|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rbp|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rbx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  156  <|@ instruction vstack:5|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction vstack:4|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction vstack:2|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [98, 108[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [102, 180[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [76, 324[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [60, 458[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [46, 584[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [34, 702[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:44|d]" vstack:0|d -1 [98, 108[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:48|d]" vstack:1|d -1 [102, 180[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:40|d]" vstack:2|d -1 [76, 324[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:36|d]" vstack:3|d -1 [60, 458[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:32|d]" vstack:4|d -1 [46, 584[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:28|d]" vstack:5|d -1 [34, 702[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   14  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   98  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=stack:48|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=stack:40|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=stack:36|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=stack:32|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=stack:28|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=stack:44|DWORD} Object[null] 
vobject:Integer:6{value=stack:48|DWORD} Ljava/lang/Integer; stack:48|DWORD 
vobject:Integer:7{value=stack:40|DWORD} Ljava/lang/Integer; stack:40|DWORD 
vobject:Integer:8{value=stack:36|DWORD} Ljava/lang/Integer; stack:36|DWORD 
vobject:Integer:9{value=stack:32|DWORD} Ljava/lang/Integer; stack:32|DWORD 
vobject:Integer:10{value=stack:28|DWORD} Ljava/lang/Integer; stack:28|DWORD 
vobject:Integer:11{value=stack:44|DWORD} Ljava/lang/Integer; stack:44|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  172  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  120  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  234  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  252  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  262  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  264  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  316  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  372  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  448  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  576  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  578  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  580  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  624  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  694  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  720  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  738  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  742  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  802  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  804  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  808  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  810  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  816  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  824  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  828  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  846  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  866  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  868  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  834  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  490  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  358  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  682  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  566  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  438  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  156  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:40|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   14  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   98  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=stack:48|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=stack:40|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=stack:36|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=stack:32|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=stack:28|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=stack:44|DWORD} Object[null] 
vobject:Integer:6{value=stack:48|DWORD} Ljava/lang/Integer; stack:48|DWORD 
vobject:Integer:7{value=stack:40|DWORD} Ljava/lang/Integer; stack:40|DWORD 
vobject:Integer:8{value=stack:36|DWORD} Ljava/lang/Integer; stack:36|DWORD 
vobject:Integer:9{value=stack:32|DWORD} Ljava/lang/Integer; stack:32|DWORD 
vobject:Integer:10{value=stack:28|DWORD} Ljava/lang/Integer; stack:28|DWORD 
vobject:Integer:11{value=stack:44|DWORD} Ljava/lang/Integer; stack:44|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  172  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  120  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  234  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  252  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  262  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  264  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  316  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  372  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  448  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  576  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  578  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  580  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  624  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  694  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  720  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  738  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  742  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  802  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  804  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  808  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  810  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  816  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  824  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  828  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  846  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  866  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  868  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  834  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  490  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  358  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  682  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  566  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  438  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  156  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:40|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   14  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   98  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=stack:48|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=stack:40|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=stack:36|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=stack:32|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=stack:28|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=stack:44|DWORD} Object[null] 
vobject:Integer:6{value=stack:48|DWORD} Ljava/lang/Integer; stack:48|DWORD 
vobject:Integer:7{value=stack:40|DWORD} Ljava/lang/Integer; stack:40|DWORD 
vobject:Integer:8{value=stack:36|DWORD} Ljava/lang/Integer; stack:36|DWORD 
vobject:Integer:9{value=stack:32|DWORD} Ljava/lang/Integer; stack:32|DWORD 
vobject:Integer:10{value=stack:28|DWORD} Ljava/lang/Integer; stack:28|DWORD 
vobject:Integer:11{value=stack:44|DWORD} Ljava/lang/Integer; stack:44|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  172  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  120  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  234  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  252  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  262  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  264  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  316  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  372  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  448  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  576  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  578  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  580  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  624  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  694  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  720  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  738  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  742  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  802  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  804  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  808  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  810  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  816  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  828  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  846  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  866  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  868  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  834  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  490  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  358  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  682  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  566  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  438  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  156  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:36|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:40|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   14  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   98  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=stack:48|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=stack:40|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=stack:36|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=stack:32|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=stack:28|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=stack:44|DWORD} Object[null] 
vobject:Integer:6{value=stack:48|DWORD} Ljava/lang/Integer; stack:48|DWORD 
vobject:Integer:7{value=stack:40|DWORD} Ljava/lang/Integer; stack:40|DWORD 
vobject:Integer:8{value=stack:36|DWORD} Ljava/lang/Integer; stack:36|DWORD 
vobject:Integer:9{value=stack:32|DWORD} Ljava/lang/Integer; stack:32|DWORD 
vobject:Integer:10{value=stack:28|DWORD} Ljava/lang/Integer; stack:28|DWORD 
vobject:Integer:11{value=stack:44|DWORD} Ljava/lang/Integer; stack:44|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  172  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  120  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  234  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  252  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  262  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  264  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  316  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  372  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  448  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  576  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  578  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  580  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  624  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  694  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  720  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  738  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  742  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  802  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  804  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  808  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  810  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  816  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  828  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  846  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  866  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  868  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  834  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  682  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   14  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   98  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=stack:48|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=stack:40|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=stack:36|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=stack:32|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=stack:28|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=stack:44|DWORD} Object[null] 
vobject:Integer:6{value=stack:48|DWORD} Ljava/lang/Integer; stack:48|DWORD 
vobject:Integer:7{value=stack:40|DWORD} Ljava/lang/Integer; stack:40|DWORD 
vobject:Integer:8{value=stack:36|DWORD} Ljava/lang/Integer; stack:36|DWORD 
vobject:Integer:9{value=stack:32|DWORD} Ljava/lang/Integer; stack:32|DWORD 
vobject:Integer:10{value=stack:28|DWORD} Ljava/lang/Integer; stack:28|DWORD 
vobject:Integer:11{value=stack:44|DWORD} Ljava/lang/Integer; stack:44|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  172  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  120  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  234  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  252  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  262  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  264  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  316  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  372  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  448  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  576  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  578  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  580  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  624  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  694  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  720  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  738  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  742  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  802  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  804  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  808  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  810  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  816  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  828  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  846  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  866  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  868  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  834  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  682  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   14  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   98  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=stack:48|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=stack:40|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=stack:36|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=stack:32|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=stack:28|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=stack:44|DWORD} Object[null] 
vobject:Integer:6{value=stack:48|DWORD} Ljava/lang/Integer; stack:48|DWORD 
vobject:Integer:7{value=stack:40|DWORD} Ljava/lang/Integer; stack:40|DWORD 
vobject:Integer:8{value=stack:36|DWORD} Ljava/lang/Integer; stack:36|DWORD 
vobject:Integer:9{value=stack:32|DWORD} Ljava/lang/Integer; stack:32|DWORD 
vobject:Integer:10{value=stack:28|DWORD} Ljava/lang/Integer; stack:28|DWORD 
vobject:Integer:11{value=stack:44|DWORD} Ljava/lang/Integer; stack:44|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  172  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  120  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  234  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  252  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  262  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  264  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  316  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  372  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  448  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  576  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  578  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  580  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  624  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  694  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  720  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  738  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  742  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  802  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  804  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  808  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  810  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  816  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  828  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  846  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  866  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  868  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  834  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  682  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   14  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   98  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=stack:48|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=stack:40|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=stack:36|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=stack:32|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=stack:28|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=stack:44|DWORD} Object[null] 
vobject:Integer:6{value=stack:48|DWORD} Ljava/lang/Integer; stack:48|DWORD 
vobject:Integer:7{value=stack:40|DWORD} Ljava/lang/Integer; stack:40|DWORD 
vobject:Integer:8{value=stack:36|DWORD} Ljava/lang/Integer; stack:36|DWORD 
vobject:Integer:9{value=stack:32|DWORD} Ljava/lang/Integer; stack:32|DWORD 
vobject:Integer:10{value=stack:28|DWORD} Ljava/lang/Integer; stack:28|DWORD 
vobject:Integer:11{value=stack:44|DWORD} Ljava/lang/Integer; stack:44|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  172  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  234  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  252  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  262  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  264  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  316  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  372  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  448  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  576  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  578  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  580  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  624  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  694  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  720  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  738  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  742  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  802  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  804  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  808  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  810  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  816  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  828  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  846  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  866  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  868  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  120  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  834  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  682  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   14  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   98  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=stack:48|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=stack:40|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=stack:36|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=stack:32|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=stack:28|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=stack:44|DWORD} Object[null] 
vobject:Integer:6{value=stack:48|DWORD} Ljava/lang/Integer; stack:48|DWORD 
vobject:Integer:7{value=stack:40|DWORD} Ljava/lang/Integer; stack:40|DWORD 
vobject:Integer:8{value=stack:36|DWORD} Ljava/lang/Integer; stack:36|DWORD 
vobject:Integer:9{value=stack:32|DWORD} Ljava/lang/Integer; stack:32|DWORD 
vobject:Integer:10{value=stack:28|DWORD} Ljava/lang/Integer; stack:28|DWORD 
vobject:Integer:11{value=stack:44|DWORD} Ljava/lang/Integer; stack:44|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  172  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  234  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  252  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  262  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  264  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  316  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  372  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  448  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  576  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  578  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  580  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  624  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  694  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  720  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  738  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  742  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  802  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  804  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  808  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  810  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  816  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  828  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  846  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  866  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  868  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  120  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  834  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  682  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   14  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   98  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=stack:48|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=stack:40|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=stack:36|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=stack:32|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=stack:28|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=stack:44|DWORD} Object[null] 
vobject:Integer:6{value=stack:48|DWORD} Ljava/lang/Integer; stack:48|DWORD 
vobject:Integer:7{value=stack:40|DWORD} Ljava/lang/Integer; stack:40|DWORD 
vobject:Integer:8{value=stack:36|DWORD} Ljava/lang/Integer; stack:36|DWORD 
vobject:Integer:9{value=stack:32|DWORD} Ljava/lang/Integer; stack:32|DWORD 
vobject:Integer:10{value=stack:28|DWORD} Ljava/lang/Integer; stack:28|DWORD 
vobject:Integer:11{value=stack:44|DWORD} Ljava/lang/Integer; stack:44|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  172  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  234  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  252  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  262  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  264  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  316  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  372  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  448  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  576  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  578  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  580  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  624  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  694  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  720  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  738  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  742  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  802  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  804  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  808  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  810  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  816  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  828  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  846  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  866  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  868  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  120  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  834  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  356  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  792  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  794  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  682  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   14  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   98  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: []
live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=stack:48|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=stack:40|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=stack:36|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=stack:32|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=stack:28|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=stack:44|DWORD} Object[null] 
vobject:Integer:6{value=stack:48|DWORD} Ljava/lang/Integer; stack:48|DWORD 
vobject:Integer:7{value=stack:40|DWORD} Ljava/lang/Integer; stack:40|DWORD 
vobject:Integer:8{value=stack:36|DWORD} Ljava/lang/Integer; stack:36|DWORD 
vobject:Integer:9{value=stack:32|DWORD} Ljava/lang/Integer; stack:32|DWORD 
vobject:Integer:10{value=stack:28|DWORD} Ljava/lang/Integer; stack:28|DWORD 
vobject:Integer:11{value=stack:44|DWORD} Ljava/lang/Integer; stack:44|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  172  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  234  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  252  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  262  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  264  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  316  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  372  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  448  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  576  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  578  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  580  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  624  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  694  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  720  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  738  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  742  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  802  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  804  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  808  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  810  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  816  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  828  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  846  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  866  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  868  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  120  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  834  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  836  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  726  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  728  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  612  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  356  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  792  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [rax:0, r10:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  682  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  684  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  564  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  436  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  298  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [rax:0, r10:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B4" "B5" "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD <|@ <|@
      nr   10  <|@ instruction r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD <|@ <|@
      nr   14  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD <|@ <|@
      nr   98  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: []
live-base-pointers: []
List.makeList(int) [bci: 23]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=stack:48|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=stack:40|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=stack:36|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=stack:32|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=stack:28|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=stack:44|DWORD} Object[null] 
vobject:Integer:6{value=stack:48|DWORD} Ljava/lang/Integer; stack:48|DWORD 
vobject:Integer:7{value=stack:40|DWORD} Ljava/lang/Integer; stack:40|DWORD 
vobject:Integer:8{value=stack:36|DWORD} Ljava/lang/Integer; stack:36|DWORD 
vobject:Integer:9{value=stack:32|DWORD} Ljava/lang/Integer; stack:32|DWORD 
vobject:Integer:10{value=stack:28|DWORD} Ljava/lang/Integer; stack:28|DWORD 
vobject:Integer:11{value=stack:44|DWORD} Ljava/lang/Integer; stack:44|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23] <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598793038621170353
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  172  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4603296638248540849
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  234  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4603348369750594025
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  252  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  262  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD <|@ <|@
      nr  264  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4599288942917201956
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  316  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603792542544572452
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  372  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603849283180928978
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B5" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599832865367005257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  448  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4604336464994375753
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  502  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604398699796891908
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4600429455543310505
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  576  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  578  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  580  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  590  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4604933055170681001
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  624  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  630  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605001316136594179
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  642  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B3" "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD <|@ <|@
      nr  654  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601083813234545053
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  694  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  720  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605587412861915549
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  738  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  742  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605662283501477561
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B2" "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  784  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4601801532038983975
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  802  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  804  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  806  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  808  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  810  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  816  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  828  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606305131666354471
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3 <|@ <|@
      nr  846  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors 
    xhandlers
    flags 
    probability 4606387251990809805
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  866  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  868  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4601883652363439309
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601158683874107065
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" 
    xhandlers
    flags 
    probability 4600497716509223683
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 4599895100169521412
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599345683553558482
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598844770123223529
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  120  <|@ instruction rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591025755136825752
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B57" 
    xhandlers
    flags 
    probability 4590464168577822883
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589952159582231985
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589485351380783097
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588951486891201312
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588175435921153674
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4576409322546194814
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  834  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  836  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575945342713022177
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  726  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  728  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4575387425790569688
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  612  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4574616076875750781
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573912823607318230
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  356  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4573271654416489489
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>} <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571905722918824318
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  792  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26] <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [rax:0, r10:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:1{value=rdx|DWORD} Object[null] 
vobject:Integer:1{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26] <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4571441743085651681
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  682  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23] <|@ <|@
      nr  684  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:2{value=rbp|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rdx|DWORD} Object[null] 
vobject:Integer:2{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:3{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570883826163199192
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23] <|@ <|@
      nr  564  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:3{value=rbx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rbp|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rdx|DWORD} Object[null] 
vobject:Integer:3{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:4{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:5{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23] <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570112477248380285
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23] <|@ <|@
      nr  436  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:4{value=rcx|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=rbx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rbp|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rdx|DWORD} Object[null] 
vobject:Integer:4{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:5{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:6{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:7{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4569409223979947734
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  298  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:5{value=r9|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rcx|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=rbx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rbp|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rdx|DWORD} Object[null] 
vobject:Integer:5{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:6{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:7{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:8{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:9{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23] <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4568768054789118993
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [rax:0, r10:0]
live-base-pointers: []
List.makeList(int) [bci: 26]
stack: vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} r10|QWORD[.] 
locals: - - vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
List.makeList(int) [bci: 23]
stack: vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
locals: - - vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} LList$Element; vobject:Integer:6{value=rdi|DWORD} Object[null] 
vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} LList$Element; vobject:Integer:7{value=r9|DWORD} Object[null] 
vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} LList$Element; vobject:Integer:8{value=rcx|DWORD} Object[null] 
vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} LList$Element; vobject:Integer:9{value=rbx|DWORD} Object[null] 
vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} LList$Element; vobject:Integer:10{value=rbp|DWORD} Object[null] 
vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} LList$Element; vobject:Integer:11{value=rdx|DWORD} Object[null] 
vobject:Integer:6{value=rdi|DWORD} Ljava/lang/Integer; rdi|DWORD 
vobject:Integer:7{value=r9|DWORD} Ljava/lang/Integer; r9|DWORD 
vobject:Integer:8{value=rcx|DWORD} Ljava/lang/Integer; rcx|DWORD 
vobject:Integer:9{value=rbx|DWORD} Ljava/lang/Integer; rbx|DWORD 
vobject:Integer:10{value=rbp|DWORD} Ljava/lang/Integer; rbp|DWORD 
vobject:Integer:11{value=rdx|DWORD} Ljava/lang/Integer; rdx|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23] <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifne          6
     4: aconst_null   
     5: areturn       
     6: new           #6          // List$Element
     9: dup           
    10: iload_1       
    11: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    14: invokespecial #5          // List$Element.<init>:(java.lang.Object)void
    17: astore_2      
    18: aload_2       
    19: aload_0       
    20: iload_1       
    21: iconst_1      
    22: isub          
    23: invokevirtual #1          // makeList:(int)List$Element
    26: invokevirtual #6          // List$Element.setNext:(List$Element)void
    29: aload_2       
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000738a7f00004d03d44d33e4493bc20f85e3ffffff89842400c0feff4883ec2841817f20000000000f85f307000048896c242049baaddeaddeaddeadde448d5afc448d42fd448d4afe8bcaffc983fa030f8d2000000083fa020f8d7f05000083fa000f844605000083fa010f845e050000e92000000083fa050f8f1700000083fa050f8d9e05000083fa030f8460050000e973050000894c241444894c2410448944240c44895c24088d5afa8d7afb895424048bd3893c24666690e8000000000f1f8400000000004c8bd08b5424048d427b660f1f44000081f8000100000f82ac040000498b87b8010000488d7010660f1f840000000000493bb7c80100000f87e00600004989b7b80100000f0d88d000000048c70001000000c74008addeaddec7400c000000008b3c2489780c4c8bc049bbaddeaddeaddeadde498b87b8010000488d7018493bb7c80100000f87a30500004989b7b80100000f0d88d800000048c70001000000c74008addeaddec7400c0000000048c740100000000049c1ea034489501049c1e8034489400c4c8bd08d427c0f1f400081f8000100000f82d9030000498b87b8010000488d7010660f1f840000000000493bb7c80100000f87f10500004989b7b80100000f0d88d000000048c70001000000c74008addeaddec7400c00000000448b4c24084489480c4c8bc0498b87b8010000488d7018493bb7c80100000f87c00400004989b7b80100000f0d88d800000048c70001000000c74008addeaddec7400c0000000048c740100000000049c1ea034489501049c1e8034489400c4c8bd08d427d6666660f1f84000000000081f8000100000f8206030000498b87b8010000488d7010660f1f840000000000493bb7c80100000f87070500004989b7b80100000f0d88d000000048c70001000000c74008addeaddec7400c000000008b4c240c89480c4c8bc0498b87b8010000488d7018493bb7c80100000f87dc0300004989b7b80100000f0d88d800000048c70001000000c74008addeaddec7400c0000000048c740100000000049c1ea034489501049c1e8034489400c4c8bd08d427e81f8000100000f8241020000498b87b8010000488d7010493bb7c80100000f87360400004989b7b80100000f0d88d000000048c70001000000c74008addeaddec7400c000000008b5c241089580c4c8bc0498b87b8010000488d7018493bb7c80100000f87100300004989b7b80100000f0d88d800000048c70001000000c74008addeaddec7400c0000000048c740100000000049c1ea034489501049c1e8034489400c4c8bd08d427f66669081f8000100000f8282010000498b87b8010000488d7010660f1f840000000000493bb7c80100000f875e0300004989b7b80100000f0d88d000000048c70001000000c74008addeaddec7400c000000008b6c241489680c4c8bc0498b87b8010000488d7018493bb7c80100000f873c0200004989b7b80100000f0d88d800000048c70001000000c74008addeaddec7400c0000000048c740100000000049c1ea034489501049c1e8034489400c4c8bd08d828000000066660f1f84000000000081f8000100000f82b7000000498b87b8010000488d7010660f1f840000000000493bb7c80100000f87800200004989b7b80100000f0d88d000000048c70001000000c74008addeaddec7400c0000000089500c4c8bd8498b87b8010000488d7018493bb7c80100000f87620100004989b7b80100000f0d88d800000048c70001000000c74008addeaddec7400c0000000048c740100000000049c1ea034489501049c1eb034489580c488b6c24204883c428493ba7500400000f87fa020000c5f877c3418b44831048c1e003eb858b6c2414418b44831048c1e003e9b7feffff8b5c2410418b44831048c1e003e9effdffff8b4c240c418b44831048c1e00390e932fdffff448b4c2408418b44831048c1e003e961fcffff8b3c2449bbaddeaddeaddeadde418b44831048c1e0034c8bc0e98dfbffff48c7c000000000488b6c24204883c428493ba7500400000f877a020000c5f877c34d8bda49c7c200000000e98afeffff894c24144d8bda49c7c200000000e9c1fdffff894c241444894c24104d8bda49c7c200000000e9fffcffff894c241444894c2410448944240c4d8bda49c7c200000000e924fcffff894c241444894c2410448944240c44895c24084d8bda49c7c200000000e949fbffff48beaddeaddeaddeaddee8000000000f1f8400000000008500e9abfeffff48beaddeaddeaddeaddee8000000000f1f8400000000008500e9d1fdffff8b6c241448beaddeaddeaddeaddee8000000000f1f8400000000008500e9f9fcffff8b6c24148b5c241048beaddeaddeaddeaddee8000000000f1f8400000000008500e929fcffff8b6c24148b5c24108b4c240c48beaddeaddeaddeaddee8000000000f1f8400000000008500e941fbffff8b6c24148b5c24108b4c240c448b4c240848beaddeaddeaddeaddee8000000000f1f8400000000008500e959faffff48beaddeaddeaddeaddee8000000000f1f8400000000008500e985fdffff8b6c241448beaddeaddeaddeaddee8000000000f1f8400000000008500e9a7fcffff8b6c24148b5c241048beaddeaddeaddeadde90e8000000000f1f8400000000008500e9cafbffff8b6c24148b5c24108b4c240c48beaddeaddeaddeaddee8000000000f1f8400000000008500e9f6faffff8b6c24148b5c24108b4c240c448b4c240848beaddeaddeaddeaddee8000000000f1f8400000000008500e908faffff8b3c248b6c24148b5c24108b4c240c448b4c240849bbaddeaddeaddeadde48beaddeaddeaddeaddee8000000000f1f8400000000008500e90af9ffff48896c2420e800000000e9fef7fffff4488d0df2fcffff49898f68040000e9b4f7fffff4488d0d72fdffff49898f68040000e9a0f7fffff441c787840400008f64fcff49c7879004000000000000e8000000000f1f84000000000041c787840400008fb8fcff49c7879004000000000000e8000000000f1f84000000000041c787840400008f0cfdff49c7879004000000000000666690e8000000000f1f84000000000041c787840400008f60fdff49c7879004000000000000e8000000000f1f84000000000041c787840400008fb4fdff49c7879004000000000000e8000000000f1f84000000000041c787840400008f0afeff49c7879004000000000000e8000000000f1f84000000000041c787840400008f3bfcff49c7879004000000000000e8000000000f1f84000000000041c787840400008f8ffcff49c7879004000000000000e8000000000f1f84000000000041c787840400008fe3fcff49c7879004000000000000e8000000000f1f84000000000041c787840400008f37fdff49c7879004000000000000e8000000000f1f84000000000041c787840400008f8bfdff49c7879004000000000000e8000000000f1f84000000000041c787840400008fdffdff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD  <||@
  Comment 59 6 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>]  <||@
  Comment 59 {Object[Instance<java.lang.Integer[]>]}  <||@
  Comment 69 8 r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD  <||@
  Comment 73 10 r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD  <||@
  Comment 77 12 r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD  <||@
  Comment 81 14 rcx|DWORD = DEC value: rdx|DWORD size: DWORD  <||@
  Comment 85 16 AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506]  <||@
  Comment 158 block B7 null  <||@
  Comment 158 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 158 86 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 162 88 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 167 90 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 172 92 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 177 94 rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD  <||@
  Comment 180 96 rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD  <||@
  Comment 183 98 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 187 100 rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 189 102 stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 192 104 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23]  <||@
  Comment 195 {HotSpotMethod<List.makeList(int)>}  <||@
  Comment 195 INVOKESPECIAL  <||@
  Comment 200 []at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                      |1  |2                                                                                     
     locals:  |-                                                                                      |-  |vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]}  |   |                                                                                      
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                      |1  |2                                                                                     
     locals:  |-                                                                                      |-  |vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]}  |   |                                                                                      
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                      |1  |2                                                                                     
     locals:  |-                                                                                      |-  |vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]}  |   |                                                                                      
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                      |1  |2                                                                                     
     locals:  |-                                                                                      |-  |vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]}  |   |                                                                                      
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                       |1  |2                                                                                      
     locals:  |-                                                                                       |-  |vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]}  |   |                                                                                       
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                       |1  |2                                                                                      
     locals:  |-                                                                                       |-  |vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]}  |   |                                                                                         <||@
  Comment 208 106 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 211 108 rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 215 110 rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD  <||@
  Comment 218 112 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null  <||@
  Comment 236 block B9 null  <||@
  Comment 236 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 236 130 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 243 132 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 247 134 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 269 block B11 null  <||@
  Comment 269 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 269 168 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 276 170 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 283 172 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 290 174 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 290 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 297 176 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 304 178 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 304 180 rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 307 182 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 307 block B12 null  <||@
  Comment 307 184 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 307 186 MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 310 188 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 313 190 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>]  <||@
  Comment 313 {Object[Instance<java.lang.Integer[]>]}  <||@
  Comment 323 192 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 323 block B13 null  <||@
  Comment 323 194 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 323 196 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 330 198 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 334 200 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD  <||@
  Comment 347 block B15 null  <||@
  Comment 347 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 347 230 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 354 232 AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3  <||@
  Comment 361 234 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 368 236 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed}  <||@
  Comment 368 {meta{HotSpotType<LList$Element;, resolved>;compressed}}  <||@
  Comment 375 238 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 382 240 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 390 242 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 390 244 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 390 block B16 null  <||@
  Comment 390 246 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 390 248 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 394 250 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 398 252 r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 402 254 MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 406 256 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 409 258 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 409 block B17 null  <||@
  Comment 409 260 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 409 262 rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD  <||@
  Comment 412 264 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null  <||@
  Comment 428 block B19 null  <||@
  Comment 428 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 428 280 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 435 282 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 439 284 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD  <||@
  Comment 461 block B21 null  <||@
  Comment 461 310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 461 312 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 468 314 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 475 316 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 482 318 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 482 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 489 320 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 496 322 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 496 324 r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 501 326 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 501 block B22 null  <||@
  Comment 501 328 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 501 330 MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 505 334 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 505 block B23 null  <||@
  Comment 505 336 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 505 274 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 508 338 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 515 340 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 519 342 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD  <||@
  Comment 532 block B25 null  <||@
  Comment 532 366 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 532 368 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 539 370 AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3  <||@
  Comment 546 372 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 553 374 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed}  <||@
  Comment 553 {meta{HotSpotType<LList$Element;, resolved>;compressed}}  <||@
  Comment 560 376 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 567 378 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 575 380 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 575 382 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 575 block B26 null  <||@
  Comment 575 384 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 575 386 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 579 388 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 583 390 r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 587 392 MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 591 394 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 594 396 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 594 block B27 null  <||@
  Comment 594 398 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 594 400 rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD  <||@
  Comment 597 402 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null  <||@
  Comment 620 block B29 null  <||@
  Comment 620 416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 620 418 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 627 420 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 631 422 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD  <||@
  Comment 653 block B31 null  <||@
  Comment 653 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 653 446 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 660 448 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 667 450 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 674 452 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 674 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 681 454 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 688 456 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 688 458 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 692 460 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 692 block B32 null  <||@
  Comment 692 462 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 692 464 MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 695 468 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 695 block B33 null  <||@
  Comment 695 470 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 695 412 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 698 472 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 705 474 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 709 476 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD  <||@
  Comment 722 block B35 null  <||@
  Comment 722 496 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 722 498 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 729 500 AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3  <||@
  Comment 736 502 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 743 504 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed}  <||@
  Comment 743 {meta{HotSpotType<LList$Element;, resolved>;compressed}}  <||@
  Comment 750 506 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 757 508 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 765 510 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 765 512 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 765 block B36 null  <||@
  Comment 765 514 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 765 516 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 769 518 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 773 520 r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 777 522 MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 781 524 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 784 526 JUMP ~outgoingValues: [] destination: B36 -> B37  <||@
  Comment 784 block B37 null  <||@
  Comment 784 528 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 784 530 rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD  <||@
  Comment 787 532 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null  <||@
  Comment 799 block B39 null  <||@
  Comment 799 546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 799 548 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 806 550 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 810 552 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD  <||@
  Comment 823 block B41 null  <||@
  Comment 823 570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 823 572 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 830 574 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 837 576 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 844 578 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 844 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 851 580 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 858 582 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 858 584 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 862 586 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 862 block B42 null  <||@
  Comment 862 588 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 862 590 MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 865 594 JUMP ~outgoingValues: [] destination: B42 -> B43  <||@
  Comment 865 block B43 null  <||@
  Comment 865 596 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 865 542 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 868 598 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 875 600 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 879 602 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD  <||@
  Comment 892 block B45 null  <||@
  Comment 892 618 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 892 620 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 899 622 AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3  <||@
  Comment 906 624 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 913 626 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed}  <||@
  Comment 913 {meta{HotSpotType<LList$Element;, resolved>;compressed}}  <||@
  Comment 920 628 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 927 630 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 935 632 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 935 634 JUMP ~outgoingValues: [] destination: B45 -> B46  <||@
  Comment 935 block B46 null  <||@
  Comment 935 636 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 935 638 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 939 640 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 943 642 r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 947 644 MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 951 646 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 954 648 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 954 block B47 null  <||@
  Comment 954 650 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 954 652 rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD  <||@
  Comment 957 654 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null  <||@
  Comment 972 block B49 null  <||@
  Comment 972 668 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 972 670 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 979 672 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 983 674 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD  <||@
  Comment 1005 block B51 null  <||@
  Comment 1005 688 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1005 690 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1012 692 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 1019 694 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1026 696 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 1026 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 1033 698 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1040 700 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1040 702 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1044 704 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 1044 block B52 null  <||@
  Comment 1044 706 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1044 708 MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 1047 712 JUMP ~outgoingValues: [] destination: B52 -> B53  <||@
  Comment 1047 block B53 null  <||@
  Comment 1047 714 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1047 664 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1050 716 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1057 718 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 1061 720 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD  <||@
  Comment 1074 block B55 null  <||@
  Comment 1074 732 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1074 734 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1081 736 AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3  <||@
  Comment 1088 738 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1095 740 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed}  <||@
  Comment 1095 {meta{HotSpotType<LList$Element;, resolved>;compressed}}  <||@
  Comment 1102 742 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1109 744 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1117 746 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1117 748 JUMP ~outgoingValues: [] destination: B55 -> B56  <||@
  Comment 1117 block B56 null  <||@
  Comment 1117 750 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1117 752 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1121 754 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1125 756 r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1129 758 MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 1133 760 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1136 762 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 1136 block B57 null  <||@
  Comment 1136 764 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1136 766 rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD  <||@
  Comment 1142 768 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null  <||@
  Comment 1164 block B59 null  <||@
  Comment 1164 780 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1164 782 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1171 784 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 1175 786 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD  <||@
  Comment 1197 block B61 null  <||@
  Comment 1197 798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1197 800 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1204 802 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 1211 804 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1218 806 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 1218 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 1225 808 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1232 810 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1232 812 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1232 block B62 null  <||@
  Comment 1232 814 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1232 816 MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 1235 820 JUMP ~outgoingValues: [] destination: B62 -> B63  <||@
  Comment 1235 block B63 null  <||@
  Comment 1235 822 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1235 776 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1238 824 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1245 826 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 1249 828 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD  <||@
  Comment 1262 block B65 null  <||@
  Comment 1262 840 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1262 842 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1269 844 AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3  <||@
  Comment 1276 846 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1283 848 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed}  <||@
  Comment 1283 {meta{HotSpotType<LList$Element;, resolved>;compressed}}  <||@
  Comment 1290 850 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1297 852 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1305 854 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1305 856 JUMP ~outgoingValues: [] destination: B65 -> B66  <||@
  Comment 1305 block B66 null  <||@
  Comment 1305 858 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1305 860 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1309 862 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1313 864 r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1317 866 MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 1321 868 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 1330 POLL_RETURN_FAR  <||@
  Comment 1347 block B58 null  <||@
  Comment 1347 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1347 772 rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1352 774 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1356 778 JUMP ~outgoingValues: [] destination: B58 -> B63  <||@
  Comment 1358 block B48 null  <||@
  Comment 1358 656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1358 658 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1362 660 rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1367 662 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1371 666 JUMP ~outgoingValues: [] destination: B48 -> B53  <||@
  Comment 1376 block B38 null  <||@
  Comment 1376 534 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1376 536 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1380 538 rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1385 540 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1389 544 JUMP ~outgoingValues: [] destination: B38 -> B43  <||@
  Comment 1394 block B28 null  <||@
  Comment 1394 404 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1394 406 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1398 408 rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1403 410 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1407 414 JUMP ~outgoingValues: [] destination: B28 -> B33  <||@
  Comment 1413 block B18 null  <||@
  Comment 1413 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1413 268 r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1418 270 rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1423 272 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1427 276 JUMP ~outgoingValues: [] destination: B18 -> B23  <||@
  Comment 1432 block B8 null  <||@
  Comment 1432 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1432 116 rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 1435 118 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>]  <||@
  Comment 1435 {Object[Instance<java.lang.Integer[]>]}  <||@
  Comment 1445 120 rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1450 122 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1454 124 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1457 126 JUMP ~outgoingValues: [] destination: B8 -> B13  <||@
  Comment 1462 block B1 null  <||@
  Comment 1462 18 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1462 20 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1469 22 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 1478 POLL_RETURN_FAR  <||@
  Comment 1495 block B2 null  <||@
  Comment 1495 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1495 26 r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1498 28 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1505 30 JUMP ~outgoingValues: [] destination: B2 -> B57  <||@
  Comment 1510 block B3 null  <||@
  Comment 1510 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1510 34 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1514 36 r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1517 38 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1524 40 JUMP ~outgoingValues: [] destination: B3 -> B47  <||@
  Comment 1529 block B4 null  <||@
  Comment 1529 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1529 44 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1533 46 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1538 48 r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1541 50 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1548 52 JUMP ~outgoingValues: [] destination: B4 -> B37  <||@
  Comment 1553 block B5 null  <||@
  Comment 1553 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1553 56 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1557 58 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1562 60 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1567 62 r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1570 64 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1577 66 JUMP ~outgoingValues: [] destination: B5 -> B27  <||@
  Comment 1582 block B6 null  <||@
  Comment 1582 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1582 70 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1586 72 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1591 74 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1596 76 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1601 78 r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1604 80 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1611 82 JUMP ~outgoingValues: [] destination: B6 -> B17  <||@
  Comment 1616 block B64 null  <||@
  Comment 1616 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1616 832 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>}  <||@
  Comment 1616 {meta{HotSpotType<LList$Element;, resolved>}}  <||@
  Comment 1626 834 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26]  <||@
  Comment 1626 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1631 [r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                   <||@
  Comment 1639 836 NULLCHECK address: [rax|QWORD[.]] state [bci:26]  <||@
  Comment 1639 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                   <||@
  Comment 1639 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1641 838 JUMP ~outgoingValues: [] destination: B64 -> B66  <||@
  Comment 1646 block B54 null  <||@
  Comment 1646 722 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1646 724 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>}  <||@
  Comment 1646 {meta{HotSpotType<LList$Element;, resolved>}}  <||@
  Comment 1656 726 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23]  <||@
  Comment 1656 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1661 [r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1669 728 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23]  <||@
  Comment 1669 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1669 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1671 730 JUMP ~outgoingValues: [] destination: B54 -> B56  <||@
  Comment 1676 block B44 null  <||@
  Comment 1676 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1676 606 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1680 608 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>}  <||@
  Comment 1680 {meta{HotSpotType<LList$Element;, resolved>}}  <||@
  Comment 1690 610 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23]  <||@
  Comment 1690 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1695 [r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1703 612 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23]  <||@
  Comment 1703 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1703 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1705 616 JUMP ~outgoingValues: [] destination: B44 -> B46  <||@
  Comment 1710 block B34 null  <||@
  Comment 1710 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1710 480 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1714 482 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1718 484 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>}  <||@
  Comment 1718 {meta{HotSpotType<LList$Element;, resolved>}}  <||@
  Comment 1728 486 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23]  <||@
  Comment 1728 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1733 [r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1741 488 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23]  <||@
  Comment 1741 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1741 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1743 494 JUMP ~outgoingValues: [] destination: B34 -> B36  <||@
  Comment 1748 block B24 null  <||@
  Comment 1748 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1748 346 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1752 348 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1756 350 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1760 352 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>}  <||@
  Comment 1760 {meta{HotSpotType<LList$Element;, resolved>}}  <||@
  Comment 1770 354 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23]  <||@
  Comment 1770 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1775 [r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                |1             |2                                                                               
     locals:  |-                                                                                |-             |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1783 356 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23]  <||@
  Comment 1783 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                |1             |2                                                                               
     locals:  |-                                                                                |-             |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1783 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1785 364 JUMP ~outgoingValues: [] destination: B24 -> B26  <||@
  Comment 1790 block B14 null  <||@
  Comment 1790 202 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1790 204 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1794 206 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1798 208 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1802 210 r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1807 212 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>}  <||@
  Comment 1807 {meta{HotSpotType<LList$Element;, resolved>}}  <||@
  Comment 1817 214 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23]  <||@
  Comment 1817 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1822 [r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                |1  |2                                                                               
     locals:  |-                                                                                |-  |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]}  |   |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]}  |   |                                                                                  
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]}  |   |                                                                                    <||@
  Comment 1830 216 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23]  <||@
  Comment 1830 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                |1  |2                                                                               
     locals:  |-                                                                                |-  |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]}  |   |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]}  |   |                                                                                  
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]}  |   |                                                                                    <||@
  Comment 1830 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1832 226 JUMP ~outgoingValues: [] destination: B14 -> B16  <||@
  Comment 1837 block B60 null  <||@
  Comment 1837 788 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1837 790 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 1837 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 1847 792 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26]  <||@
  Comment 1847 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1852 [r10:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                   <||@
  Comment 1860 794 NULLCHECK address: [rax|QWORD[.]] state [bci:26]  <||@
  Comment 1860 [rax:0, r10:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                   <||@
  Comment 1860 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1862 796 JUMP ~outgoingValues: [] destination: B60 -> B62  <||@
  Comment 1867 block B50 null  <||@
  Comment 1867 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1867 678 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1871 680 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 1871 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 1881 682 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23]  <||@
  Comment 1881 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1886 [r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1894 684 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23]  <||@
  Comment 1894 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1894 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1896 686 JUMP ~outgoingValues: [] destination: B50 -> B52  <||@
  Comment 1901 block B40 null  <||@
  Comment 1901 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1901 556 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1905 558 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1909 560 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 1909 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 1919 562 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23]  <||@
  Comment 1920 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1925 [r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1933 564 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23]  <||@
  Comment 1933 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1933 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1935 568 JUMP ~outgoingValues: [] destination: B40 -> B42  <||@
  Comment 1940 block B30 null  <||@
  Comment 1940 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1940 426 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1944 428 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1948 430 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1952 432 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 1952 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 1962 434 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23]  <||@
  Comment 1962 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1967 [r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1975 436 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23]  <||@
  Comment 1975 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1975 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1977 442 JUMP ~outgoingValues: [] destination: B30 -> B32  <||@
  Comment 1982 block B20 null  <||@
  Comment 1982 286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1982 288 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1986 290 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1990 292 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1994 294 r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1999 296 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 1999 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 2009 298 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23]  <||@
  Comment 2009 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2014 [r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                |1             |2                                                                               
     locals:  |-                                                                                |-             |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2022 300 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23]  <||@
  Comment 2022 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                |1             |2                                                                               
     locals:  |-                                                                                |-             |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2022 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2024 308 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 2029 block B10 null  <||@
  Comment 2029 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2029 138 rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 2032 140 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2036 142 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2040 144 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 2044 146 r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 2049 148 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>]  <||@
  Comment 2049 {Object[Instance<java.lang.Integer[]>]}  <||@
  Comment 2059 150 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 2059 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 2069 152 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23]  <||@
  Comment 2069 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2074 [r10:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                |1  |2                                                                               
     locals:  |-                                                                                |-  |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]}  |   |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]}  |   |                                                                                  
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]}  |   |                                                                                    <||@
  Comment 2082 154 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23]  <||@
  Comment 2082 [rax:0, r10:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                |1  |2                                                                               
     locals:  |-                                                                                |-  |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]}  |   |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]}  |   |                                                                                  
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]}  |   |                                                                                    <||@
  Comment 2082 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2084 164 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 2094 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 2119 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 2139 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 2167 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2172 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                   <||@
  Comment 2202 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2207 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2240 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2245 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2275 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2280 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2310 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2315 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                |1             |2                                                                               
     locals:  |-                                                                                |-             |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2350 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                |1  |2                                                                               
     locals:  |-                                                                                |-  |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]}  |   |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]}  |   |                                                                                  
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]}  |   |                                                                                    <||@
  Comment 2380 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2385 [rax:0, r10:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                   <||@
  Comment 2415 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2420 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2450 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2455 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2485 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2490 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2520 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2525 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                |1             |2                                                                               
     locals:  |-                                                                                |-             |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2555 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2560 [rax:0, r10:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                |1  |2                                                                               
     locals:  |-                                                                                |-  |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]}  |   |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]}  |   |                                                                                  
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]}  |   |                                                                                    <||@
  Comment 2568 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2568 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2574 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 2574 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-81[List.makeList(int)]"
  method "HotSpotCompilation-81[List.makeList(int)]"
  date 1740398976849
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0c2b20 448b560849bc000000738a7f00004d03d44d33e4493bc20f8543b5f8ff89842400c0feff4883ec2841817f20000000000f85f307000048896c242049baf8e3ecff07000000448d5afc448d42fd448d4afe8bcaffc983fa030f8d2000000083fa020f8d7f05000083fa000f844605000083fa010f845e050000e92000000083fa050f8f1700000083fa050f8d9e05000083fa030f8460050000e973050000894c241444894c2410448944240c44895c24088d5afa8d7afb895424048bd3893c24666690e898b7f8ff0f1f8400d80200004c8bd08b5424048d427b660f1f44000081f8000100000f82ac040000498b87b8010000488d7010660f1f840000000000493bb7c80100000f87e00600004989b7b80100000f0d88d000000048c70001000000c74008885c0200c7400c000000008b3c2489780c4c8bc049bbf8e3ecff07000000498b87b8010000488d7018493bb7c80100000f87a30500004989b7b80100000f0d88d800000048c70001000000c7400830440001c7400c0000000048c740100000000049c1ea034489501049c1e8034489400c4c8bd08d427c0f1f400081f8000100000f82d9030000498b87b8010000488d7010660f1f840000000000493bb7c80100000f87f10500004989b7b80100000f0d88d000000048c70001000000c74008885c0200c7400c00000000448b4c24084489480c4c8bc0498b87b8010000488d7018493bb7c80100000f87c00400004989b7b80100000f0d88d800000048c70001000000c7400830440001c7400c0000000048c740100000000049c1ea034489501049c1e8034489400c4c8bd08d427d6666660f1f84000000000081f8000100000f8206030000498b87b8010000488d7010660f1f840000000000493bb7c80100000f87070500004989b7b80100000f0d88d000000048c70001000000c74008885c0200c7400c000000008b4c240c89480c4c8bc0498b87b8010000488d7018493bb7c80100000f87dc0300004989b7b80100000f0d88d800000048c70001000000c7400830440001c7400c0000000048c740100000000049c1ea034489501049c1e8034489400c4c8bd08d427e81f8000100000f8241020000498b87b8010000488d7010493bb7c80100000f87360400004989b7b80100000f0d88d000000048c70001000000c74008885c0200c7400c000000008b5c241089580c4c8bc0498b87b8010000488d7018493bb7c80100000f87100300004989b7b80100000f0d88d800000048c70001000000c7400830440001c7400c0000000048c740100000000049c1ea034489501049c1e8034489400c4c8bd08d427f66669081f8000100000f8282010000498b87b8010000488d7010660f1f840000000000493bb7c80100000f875e0300004989b7b80100000f0d88d000000048c70001000000c74008885c0200c7400c000000008b6c241489680c4c8bc0498b87b8010000488d7018493bb7c80100000f873c0200004989b7b80100000f0d88d800000048c70001000000c7400830440001c7400c0000000048c740100000000049c1ea034489501049c1e8034489400c4c8bd08d828000000066660f1f84000000000081f8000100000f82b7000000498b87b8010000488d7010660f1f840000000000493bb7c80100000f87800200004989b7b80100000f0d88d000000048c70001000000c74008885c0200c7400c0000000089500c4c8bd8498b87b8010000488d7018493bb7c80100000f87620100004989b7b80100000f0d88d800000048c70001000000c7400830440001c7400c0000000048c740100000000049c1ea034489501049c1eb034489580c488b6c24204883c428493ba7500400000f87fa020000c5f877c3418b44831048c1e003eb858b6c2414418b44831048c1e003e9b7feffff8b5c2410418b44831048c1e003e9effdffff8b4c240c418b44831048c1e00390e932fdffff448b4c2408418b44831048c1e003e961fcffff8b3c2449bbf8e3ecff07000000418b44831048c1e0034c8bc0e98dfbffff48c7c000000000488b6c24204883c428493ba7500400000f877a020000c5f877c34d8bda49c7c200000000e98afeffff894c24144d8bda49c7c200000000e9c1fdffff894c241444894c24104d8bda49c7c200000000e9fffcffff894c241444894c2410448944240c4d8bda49c7c200000000e924fcffff894c241444894c2410448944240c44895c24084d8bda49c7c200000000e949fbffff48be304400748a7f0000e881e9ffff0f1f8400000000008500e9abfeffff48be304400748a7f0000e863e9ffff0f1f8400000000008500e9d1fdffff8b6c241448be304400748a7f0000e841e9ffff0f1f8400000000008500e9f9fcffff8b6c24148b5c241048be304400748a7f0000e81be9ffff0f1f8400000000008500e929fcffff8b6c24148b5c24108b4c240c48be304400748a7f0000e8f1e8ffff0f1f8400000000008500e941fbffff8b6c24148b5c24108b4c240c448b4c240848be304400748a7f0000e8c2e8ffff0f1f8400000000008500e959faffff48be885c02738a7f0000e8a4e8ffff0f1f8400000000008500e985fdffff8b6c241448be885c02738a7f0000e882e8ffff0f1f8400000000008500e9a7fcffff8b6c24148b5c241048be885c02738a7f000090e85be8ffff0f1f8400000000008500e9cafbffff8b6c24148b5c24108b4c240c48be885c02738a7f0000e831e8ffff0f1f8400000000008500e9f6faffff8b6c24148b5c24108b4c240c448b4c240848be885c02738a7f0000e802e8ffff0f1f8400000000008500e908faffff8b3c248b6c24148b5c24108b4c240c448b4c240849bbf8e3ecff0700000048be885c02738a7f0000e8c6e7ffff0f1f8400000000008500e90af9ffff48896c2420e8cd0ef7ffe9fef7fffff4488d0df2fcffff49898f68040000e9941cf9fff4488d0d72fdffff49898f68040000e9801cf9fff441c787840400008f64fcff49c7879004000000000000e8de0df9ff0f1f84000000000041c787840400008fb8fcff49c7879004000000000000e8bb0df9ff0f1f84000000000041c787840400008f0cfdff49c7879004000000000000666690e8950df9ff0f1f84000000000041c787840400008f60fdff49c7879004000000000000e8720df9ff0f1f84000000000041c787840400008fb4fdff49c7879004000000000000e84f0df9ff0f1f84000000000041c787840400008f0afeff49c7879004000000000000e82c0df9ff0f1f84000000000041c787840400008f3bfcff49c7879004000000000000e8090df9ff0f1f84000000000041c787840400008f8ffcff49c7879004000000000000e8e60cf9ff0f1f84000000000041c787840400008fe3fcff49c7879004000000000000e8c30cf9ff0f1f84000000000041c787840400008f37fdff49c7879004000000000000e8a00cf9ff0f1f84000000000041c787840400008f8bfdff49c7879004000000000000e87d0cf9ff0f1f84000000000041c787840400008fdffdff49c7879004000000000000e85a0cf9ff0f1f840000000000e8d30ffffff4e8ed09f9fff4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e5ec2b7 slotKind: QWORD  <||@
  Comment 59 6 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>]  <||@
  Comment 59 {Object[Instance<java.lang.Integer[]>]}  <||@
  Comment 69 8 r11|DWORD = LEA address: [rdx|DWORD - 4] size: DWORD  <||@
  Comment 73 10 r8|DWORD = LEA address: [rdx|DWORD - 3] size: DWORD  <||@
  Comment 77 12 r9|DWORD = LEA address: [rdx|DWORD - 2] size: DWORD  <||@
  Comment 81 14 rcx|DWORD = DEC value: rdx|DWORD size: DWORD  <||@
  Comment 85 16 AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4], int[5|0x5]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B4, B0 -> B5, B0 -> B6] defaultTarget: B0 -> B7 strategy: BinaryStrategy[avgEffort=3.1350069034471506]  <||@
  Comment 158 block B7 null  <||@
  Comment 158 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 158 86 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 162 88 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 167 90 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 172 92 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 177 94 rbx|DWORD = LEA address: [rdx|DWORD - 6] size: DWORD  <||@
  Comment 180 96 rdi|DWORD = LEA address: [rdx|DWORD - 5] size: DWORD  <||@
  Comment 183 98 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 187 100 rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 189 102 stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 192 104 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:23, 23, 23, 23, 23, 23]  <||@
  Comment 195 {HotSpotMethod<List.makeList(int)>}  <||@
  Comment 195 INVOKESPECIAL  <||@
  Comment 200 []at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                      |1  |2                                                                                     
     locals:  |-                                                                                      |-  |vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=stack:48|DWORD},next=Object[null]}  |   |                                                                                      
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                      |1  |2                                                                                     
     locals:  |-                                                                                      |-  |vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=stack:40|DWORD},next=Object[null]}  |   |                                                                                      
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                      |1  |2                                                                                     
     locals:  |-                                                                                      |-  |vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=stack:36|DWORD},next=Object[null]}  |   |                                                                                      
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                      |1  |2                                                                                     
     locals:  |-                                                                                      |-  |vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=stack:32|DWORD},next=Object[null]}  |   |                                                                                      
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                       |1  |2                                                                                      
     locals:  |-                                                                                       |-  |vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=stack:28|DWORD},next=Object[null]}  |   |                                                                                       
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                       |1  |2                                                                                      
     locals:  |-                                                                                       |-  |vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=stack:44|DWORD},next=Object[null]}  |   |                                                                                         <||@
  Comment 208 106 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 211 108 rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 215 110 rax|DWORD = LEA address: [rdx|DWORD + 123] size: DWORD  <||@
  Comment 218 112 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 256 size: DWORD inlinedY: null  <||@
  Comment 236 block B9 null  <||@
  Comment 236 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 236 130 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 243 132 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 247 134 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 269 block B11 null  <||@
  Comment 269 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 269 168 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 276 170 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 283 172 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 290 174 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 290 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 297 176 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 304 178 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 304 180 rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 307 182 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 307 block B12 null  <||@
  Comment 307 184 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 307 186 MOV (x: [rax|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 310 188 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 313 190 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>]  <||@
  Comment 313 {Object[Instance<java.lang.Integer[]>]}  <||@
  Comment 323 192 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 323 block B13 null  <||@
  Comment 323 194 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 323 196 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 330 198 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 334 200 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD  <||@
  Comment 347 block B15 null  <||@
  Comment 347 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 347 230 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 354 232 AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3  <||@
  Comment 361 234 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 368 236 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed}  <||@
  Comment 368 {meta{HotSpotType<LList$Element;, resolved>;compressed}}  <||@
  Comment 375 238 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 382 240 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 390 242 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 390 244 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 390 block B16 null  <||@
  Comment 390 246 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 390 248 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 394 250 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 398 252 r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 402 254 MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 406 256 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 409 258 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 409 block B17 null  <||@
  Comment 409 260 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 409 262 rax|DWORD = LEA address: [rdx|DWORD + 124] size: DWORD  <||@
  Comment 412 264 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 256 size: DWORD inlinedY: null  <||@
  Comment 428 block B19 null  <||@
  Comment 428 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 428 280 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 435 282 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 439 284 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD  <||@
  Comment 461 block B21 null  <||@
  Comment 461 310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 461 312 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 468 314 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 475 316 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 482 318 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 482 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 489 320 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 496 322 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 496 324 r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 501 326 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 501 block B22 null  <||@
  Comment 501 328 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 501 330 MOV (x: [rax|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 505 334 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 505 block B23 null  <||@
  Comment 505 336 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 505 274 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 508 338 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 515 340 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 519 342 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD  <||@
  Comment 532 block B25 null  <||@
  Comment 532 366 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 532 368 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 539 370 AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3  <||@
  Comment 546 372 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 553 374 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed}  <||@
  Comment 553 {meta{HotSpotType<LList$Element;, resolved>;compressed}}  <||@
  Comment 560 376 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 567 378 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 575 380 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 575 382 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 575 block B26 null  <||@
  Comment 575 384 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 575 386 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 579 388 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 583 390 r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 587 392 MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 591 394 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 594 396 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 594 block B27 null  <||@
  Comment 594 398 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 594 400 rax|DWORD = LEA address: [rdx|DWORD + 125] size: DWORD  <||@
  Comment 597 402 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 256 size: DWORD inlinedY: null  <||@
  Comment 620 block B29 null  <||@
  Comment 620 416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 620 418 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 627 420 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 631 422 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD  <||@
  Comment 653 block B31 null  <||@
  Comment 653 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 653 446 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 660 448 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 667 450 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 674 452 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 674 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 681 454 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 688 456 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 688 458 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 692 460 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 692 block B32 null  <||@
  Comment 692 462 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 692 464 MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 695 468 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 695 block B33 null  <||@
  Comment 695 470 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 695 412 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 698 472 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 705 474 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 709 476 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: QWORD  <||@
  Comment 722 block B35 null  <||@
  Comment 722 496 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 722 498 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 729 500 AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3  <||@
  Comment 736 502 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 743 504 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed}  <||@
  Comment 743 {meta{HotSpotType<LList$Element;, resolved>;compressed}}  <||@
  Comment 750 506 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 757 508 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 765 510 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 765 512 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 765 block B36 null  <||@
  Comment 765 514 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 765 516 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 769 518 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 773 520 r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 777 522 MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 781 524 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 784 526 JUMP ~outgoingValues: [] destination: B36 -> B37  <||@
  Comment 784 block B37 null  <||@
  Comment 784 528 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 784 530 rax|DWORD = LEA address: [rdx|DWORD + 126] size: DWORD  <||@
  Comment 787 532 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 256 size: DWORD inlinedY: null  <||@
  Comment 799 block B39 null  <||@
  Comment 799 546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 799 548 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 806 550 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 810 552 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD  <||@
  Comment 823 block B41 null  <||@
  Comment 823 570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 823 572 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 830 574 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 837 576 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 844 578 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 844 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 851 580 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 858 582 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 858 584 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 862 586 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 862 block B42 null  <||@
  Comment 862 588 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 862 590 MOV (x: [rax|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 865 594 JUMP ~outgoingValues: [] destination: B42 -> B43  <||@
  Comment 865 block B43 null  <||@
  Comment 865 596 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 865 542 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 868 598 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 875 600 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 879 602 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: QWORD  <||@
  Comment 892 block B45 null  <||@
  Comment 892 618 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 892 620 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 899 622 AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3  <||@
  Comment 906 624 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 913 626 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed}  <||@
  Comment 913 {meta{HotSpotType<LList$Element;, resolved>;compressed}}  <||@
  Comment 920 628 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 927 630 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 935 632 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 935 634 JUMP ~outgoingValues: [] destination: B45 -> B46  <||@
  Comment 935 block B46 null  <||@
  Comment 935 636 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 935 638 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 939 640 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 943 642 r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 947 644 MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 951 646 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 954 648 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 954 block B47 null  <||@
  Comment 954 650 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 954 652 rax|DWORD = LEA address: [rdx|DWORD + 127] size: DWORD  <||@
  Comment 957 654 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 256 size: DWORD inlinedY: null  <||@
  Comment 972 block B49 null  <||@
  Comment 972 668 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 972 670 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 979 672 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 983 674 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD  <||@
  Comment 1005 block B51 null  <||@
  Comment 1005 688 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1005 690 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1012 692 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 1019 694 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1026 696 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 1026 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 1033 698 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1040 700 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1040 702 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1044 704 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 1044 block B52 null  <||@
  Comment 1044 706 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1044 708 MOV (x: [rax|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 1047 712 JUMP ~outgoingValues: [] destination: B52 -> B53  <||@
  Comment 1047 block B53 null  <||@
  Comment 1047 714 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1047 664 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1050 716 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1057 718 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 1061 720 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD  <||@
  Comment 1074 block B55 null  <||@
  Comment 1074 732 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1074 734 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1081 736 AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3  <||@
  Comment 1088 738 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1095 740 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed}  <||@
  Comment 1095 {meta{HotSpotType<LList$Element;, resolved>;compressed}}  <||@
  Comment 1102 742 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1109 744 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1117 746 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1117 748 JUMP ~outgoingValues: [] destination: B55 -> B56  <||@
  Comment 1117 block B56 null  <||@
  Comment 1117 750 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1117 752 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1121 754 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1125 756 r8|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1129 758 MOV (x: [rax|QWORD[.] + 12], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 1133 760 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1136 762 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 1136 block B57 null  <||@
  Comment 1136 764 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1136 766 rax|DWORD = LEA address: [rdx|DWORD + 128] size: DWORD  <||@
  Comment 1142 768 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 256 size: DWORD inlinedY: null  <||@
  Comment 1164 block B59 null  <||@
  Comment 1164 780 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1164 782 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1171 784 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 1175 786 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD  <||@
  Comment 1197 block B61 null  <||@
  Comment 1197 798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1197 800 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1204 802 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 1211 804 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1218 806 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 1218 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 1225 808 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1232 810 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1232 812 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1232 block B62 null  <||@
  Comment 1232 814 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1232 816 MOV (x: [rax|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 1235 820 JUMP ~outgoingValues: [] destination: B62 -> B63  <||@
  Comment 1235 block B63 null  <||@
  Comment 1235 822 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1235 776 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1238 824 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1245 826 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 1249 828 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD  <||@
  Comment 1262 block B65 null  <||@
  Comment 1262 840 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1262 842 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1269 844 AMD64PREFETCH ~address: [rax|QWORD + 216] instr: 3  <||@
  Comment 1276 846 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1283 848 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LList$Element;, resolved>;compressed}  <||@
  Comment 1283 {meta{HotSpotType<LList$Element;, resolved>;compressed}}  <||@
  Comment 1290 850 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1297 852 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1305 854 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1305 856 JUMP ~outgoingValues: [] destination: B65 -> B66  <||@
  Comment 1305 block B66 null  <||@
  Comment 1305 858 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1305 860 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1309 862 MOV (x: [rax|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1313 864 r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1317 866 MOV (x: [rax|QWORD[.] + 12], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 1321 868 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 1330 POLL_RETURN_FAR  <||@
  Comment 1347 block B58 null  <||@
  Comment 1347 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1347 772 rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1352 774 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1356 778 JUMP ~outgoingValues: [] destination: B58 -> B63  <||@
  Comment 1358 block B48 null  <||@
  Comment 1358 656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1358 658 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1362 660 rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1367 662 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1371 666 JUMP ~outgoingValues: [] destination: B48 -> B53  <||@
  Comment 1376 block B38 null  <||@
  Comment 1376 534 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1376 536 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1380 538 rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1385 540 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1389 544 JUMP ~outgoingValues: [] destination: B38 -> B43  <||@
  Comment 1394 block B28 null  <||@
  Comment 1394 404 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1394 406 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1398 408 rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1403 410 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1407 414 JUMP ~outgoingValues: [] destination: B28 -> B33  <||@
  Comment 1413 block B18 null  <||@
  Comment 1413 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1413 268 r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1418 270 rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1423 272 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1427 276 JUMP ~outgoingValues: [] destination: B18 -> B23  <||@
  Comment 1432 block B8 null  <||@
  Comment 1432 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1432 116 rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 1435 118 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>]  <||@
  Comment 1435 {Object[Instance<java.lang.Integer[]>]}  <||@
  Comment 1445 120 rax|DWORD[_] = MOV input: [r11|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1450 122 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1b7ff67d encoding: base: 0 shift: 3  <||@
  Comment 1454 124 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1457 126 JUMP ~outgoingValues: [] destination: B8 -> B13  <||@
  Comment 1462 block B1 null  <||@
  Comment 1462 18 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1462 20 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1469 22 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 1478 POLL_RETURN_FAR  <||@
  Comment 1495 block B2 null  <||@
  Comment 1495 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1495 26 r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1498 28 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1505 30 JUMP ~outgoingValues: [] destination: B2 -> B57  <||@
  Comment 1510 block B3 null  <||@
  Comment 1510 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1510 34 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1514 36 r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1517 38 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1524 40 JUMP ~outgoingValues: [] destination: B3 -> B47  <||@
  Comment 1529 block B4 null  <||@
  Comment 1529 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1529 44 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1533 46 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1538 48 r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1541 50 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1548 52 JUMP ~outgoingValues: [] destination: B4 -> B37  <||@
  Comment 1553 block B5 null  <||@
  Comment 1553 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1553 56 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1557 58 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1562 60 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1567 62 r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1570 64 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1577 66 JUMP ~outgoingValues: [] destination: B5 -> B27  <||@
  Comment 1582 block B6 null  <||@
  Comment 1582 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1582 70 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1586 72 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1591 74 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1596 76 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1601 78 r11|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1604 80 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1611 82 JUMP ~outgoingValues: [] destination: B6 -> B17  <||@
  Comment 1616 block B64 null  <||@
  Comment 1616 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1616 832 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>}  <||@
  Comment 1616 {meta{HotSpotType<LList$Element;, resolved>}}  <||@
  Comment 1626 834 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26]  <||@
  Comment 1626 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1631 [r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                   <||@
  Comment 1639 836 NULLCHECK address: [rax|QWORD[.]] state [bci:26]  <||@
  Comment 1639 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                   <||@
  Comment 1639 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1641 838 JUMP ~outgoingValues: [] destination: B64 -> B66  <||@
  Comment 1646 block B54 null  <||@
  Comment 1646 722 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1646 724 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>}  <||@
  Comment 1646 {meta{HotSpotType<LList$Element;, resolved>}}  <||@
  Comment 1656 726 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23]  <||@
  Comment 1656 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1661 [r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1669 728 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23]  <||@
  Comment 1669 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1669 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1671 730 JUMP ~outgoingValues: [] destination: B54 -> B56  <||@
  Comment 1676 block B44 null  <||@
  Comment 1676 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1676 606 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1680 608 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>}  <||@
  Comment 1680 {meta{HotSpotType<LList$Element;, resolved>}}  <||@
  Comment 1690 610 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23]  <||@
  Comment 1690 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1695 [r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1703 612 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23]  <||@
  Comment 1703 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1703 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1705 616 JUMP ~outgoingValues: [] destination: B44 -> B46  <||@
  Comment 1710 block B34 null  <||@
  Comment 1710 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1710 480 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1714 482 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1718 484 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>}  <||@
  Comment 1718 {meta{HotSpotType<LList$Element;, resolved>}}  <||@
  Comment 1728 486 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23]  <||@
  Comment 1728 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1733 [r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1741 488 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23]  <||@
  Comment 1741 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1741 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1743 494 JUMP ~outgoingValues: [] destination: B34 -> B36  <||@
  Comment 1748 block B24 null  <||@
  Comment 1748 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1748 346 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1752 348 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1756 350 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1760 352 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>}  <||@
  Comment 1760 {meta{HotSpotType<LList$Element;, resolved>}}  <||@
  Comment 1770 354 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23]  <||@
  Comment 1770 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1775 [r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                |1             |2                                                                               
     locals:  |-                                                                                |-             |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1783 356 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23]  <||@
  Comment 1783 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                |1             |2                                                                               
     locals:  |-                                                                                |-             |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1783 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1785 364 JUMP ~outgoingValues: [] destination: B24 -> B26  <||@
  Comment 1790 block B14 null  <||@
  Comment 1790 202 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1790 204 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1794 206 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1798 208 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1802 210 r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1807 212 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LList$Element;, resolved>}  <||@
  Comment 1807 {meta{HotSpotType<LList$Element;, resolved>}}  <||@
  Comment 1817 214 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23]  <||@
  Comment 1817 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1822 [r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                |1  |2                                                                               
     locals:  |-                                                                                |-  |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]}  |   |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]}  |   |                                                                                  
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]}  |   |                                                                                    <||@
  Comment 1830 216 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23]  <||@
  Comment 1830 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                |1  |2                                                                               
     locals:  |-                                                                                |-  |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]}  |   |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]}  |   |                                                                                  
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]}  |   |                                                                                    <||@
  Comment 1830 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1832 226 JUMP ~outgoingValues: [] destination: B14 -> B16  <||@
  Comment 1837 block B60 null  <||@
  Comment 1837 788 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1837 790 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 1837 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 1847 792 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26]  <||@
  Comment 1847 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1852 [r10:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                   <||@
  Comment 1860 794 NULLCHECK address: [rax|QWORD[.]] state [bci:26]  <||@
  Comment 1860 [rax:0, r10:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                   <||@
  Comment 1860 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1862 796 JUMP ~outgoingValues: [] destination: B60 -> B62  <||@
  Comment 1867 block B50 null  <||@
  Comment 1867 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1867 678 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1871 680 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 1871 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 1881 682 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23]  <||@
  Comment 1881 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1886 [r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1894 684 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23]  <||@
  Comment 1894 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1894 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1896 686 JUMP ~outgoingValues: [] destination: B50 -> B52  <||@
  Comment 1901 block B40 null  <||@
  Comment 1901 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1901 556 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1905 558 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1909 560 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 1909 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 1919 562 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23]  <||@
  Comment 1920 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1925 [r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1933 564 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23]  <||@
  Comment 1933 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1933 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1935 568 JUMP ~outgoingValues: [] destination: B40 -> B42  <||@
  Comment 1940 block B30 null  <||@
  Comment 1940 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1940 426 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1944 428 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1948 430 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1952 432 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 1952 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 1962 434 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23]  <||@
  Comment 1962 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1967 [r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1975 436 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23]  <||@
  Comment 1975 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 1975 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1977 442 JUMP ~outgoingValues: [] destination: B30 -> B32  <||@
  Comment 1982 block B20 null  <||@
  Comment 1982 286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1982 288 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1986 290 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1990 292 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1994 294 r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1999 296 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 1999 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 2009 298 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23]  <||@
  Comment 2009 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2014 [r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                |1             |2                                                                               
     locals:  |-                                                                                |-             |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2022 300 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23]  <||@
  Comment 2022 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                |1             |2                                                                               
     locals:  |-                                                                                |-             |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2022 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2024 308 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 2029 block B10 null  <||@
  Comment 2029 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2029 138 rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 2032 140 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2036 142 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2040 144 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 2044 146 r9|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 2049 148 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>]  <||@
  Comment 2049 {Object[Instance<java.lang.Integer[]>]}  <||@
  Comment 2059 150 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 2059 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 2069 152 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:26, 23, 23, 23, 23, 23]  <||@
  Comment 2069 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2074 [r10:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                |1  |2                                                                               
     locals:  |-                                                                                |-  |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]}  |   |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]}  |   |                                                                                  
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]}  |   |                                                                                    <||@
  Comment 2082 154 NULLCHECK address: [rax|QWORD[.]] state [bci:26, 23, 23, 23, 23, 23]  <||@
  Comment 2082 [rax:0, r10:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                |1  |2                                                                               
     locals:  |-                                                                                |-  |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]}  |   |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]}  |   |                                                                                  
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]}  |   |                                                                                    <||@
  Comment 2082 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2084 164 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 2094 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 2119 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 2139 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 2167 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2172 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                   <||@
  Comment 2202 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2207 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2240 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2245 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2275 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2280 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2310 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2315 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                |1             |2                                                                               
     locals:  |-                                                                                |-             |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2350 [rax:0, r8:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                |1  |2                                                                               
     locals:  |-                                                                                |-  |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]}  |   |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]}  |   |                                                                                  
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]}  |   |                                                                                    <||@
  Comment 2380 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2385 [rax:0, r10:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:1{value=rdx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                   <||@
  Comment 2415 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2420 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:2{value=rbp|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:3{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2450 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2455 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:3{value=rbx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:4{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:5{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2485 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2490 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:4{value=rcx|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:5{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:6{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:7{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2520 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2525 [rax:0, r10:0, r11:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                |1             |2                                                                               
     locals:  |-                                                                                |-             |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:5{value=r9|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:6{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:7{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:8{value=rbp|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:9{value=rdx|DWORD},next=Object[null]}  |   |                                                                                   <||@
  Comment 2555 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2560 [rax:0, r10:0]at List.makeList(int) [bci: 26, duringCall: false, rethrow: false]
              |0                                                                                 |1             |2                                                                                
     locals:  |-                                                                                 |-             |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:0{val=vobject:Integer:6{value=rdi|DWORD},next=Object[null]}  |r10|QWORD[.]  |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                |1  |2                                                                               
     locals:  |-                                                                                |-  |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:1{val=vobject:Integer:7{value=r9|DWORD},next=Object[null]}  |   |                                                                                
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:2{val=vobject:Integer:8{value=rcx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                 |1  |2                                                                                
     locals:  |-                                                                                 |-  |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:3{val=vobject:Integer:9{value=rbx|DWORD},next=Object[null]}  |   |                                                                                 
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:4{val=vobject:Integer:10{value=rbp|DWORD},next=Object[null]}  |   |                                                                                  
  at List.makeList(int) [bci: 23, duringCall: true, rethrow: false]
              |0                                                                                  |1  |2                                                                                 
     locals:  |-                                                                                  |-  |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]} 
     stack:   |vobject:List$Element:5{val=vobject:Integer:11{value=rdx|DWORD},next=Object[null]}  |   |                                                                                    <||@
  Comment 2568 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2568 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2574 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 2574 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
