begin_compilation
  name " HotSpotCompilation-132[jdk.internal.misc.InternalLock.unlock()]"
  method "HotSpotCompilation-132[jdk.internal.misc.InternalLock.unlock()]"
  date 1740398980173
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a206 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a206  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# jdk.internal.misc.InternalLock
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v215 ?10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a206 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v215 
lastLocationAccess: - 
=== Succesors ===
next: a207 
=== Usages ===
a129 v216 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v215 lastLocationAccess: - #next: a207  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i137 a207 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a206 
=== Succesors ===
=== Usages ===
a207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a207 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-33291|0xffffffffffff7df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v216 
lastLocationAccess: - 
=== Succesors ===
next: i137 
=== Usages ===
a133 v217 v218 v219 
=== Predecessor ===
a206 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v216 lastLocationAccess: - #next: i137  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a207 
=== Succesors ===
=== Usages ===
i137 v141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-34315|0xffffffffffff79f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v217 
lastLocationAccess: - 
=== Succesors ===
next: a208 
=== Usages ===
i68 v50 ?39 
=== Predecessor ===
a207 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v217 lastLocationAccess: - #next: a208  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a207 
=== Succesors ===
=== Usages ===
a208 v165 v204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a208 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v218 
lastLocationAccess: - 
=== Succesors ===
next: j209 
=== Usages ===
a140 
=== Predecessor ===
i137 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v218 lastLocationAccess: - #next: j209  <|@  <|@
f <@~|@floating>@ <|@
tid j41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j41 
index: - 
=== Succesors ===
=== Usages ===
j209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j41 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j209 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v213 
lastLocationAccess: - 
=== Succesors ===
next: a210 
=== Usages ===
v214 
=== Predecessor ===
a208 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v213 lastLocationAccess: - #next: a210  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j209 
index: - 
=== Succesors ===
=== Usages ===
a210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j209 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a210 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v214 
lastLocationAccess: - 
=== Succesors ===
next: v191 
=== Usages ===
v48 
=== Predecessor ===
j209 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v214 lastLocationAccess: - #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid a140 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a208 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a208  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a140 
y: a210 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a140 y: a210  <|@  <|@
f <@~|@floating>@ <|@
tid a129 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a206 
=== Succesors ===
=== Usages ===
?17 ?26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a206  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?26 ?17 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 ?101 ?39 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
a210 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v189 #falseSuccessor: v190  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i137 
y: i9 
=== Succesors ===
=== Usages ===
v23 v54 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i137 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.9992379500857306
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v53 #falseSuccessor: v52  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
precise: true
stamp: void
=== Inputs ===
address: v218 
value: - 
stateBefore: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v218 value: - stateBefore: - #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid a168 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v218 
lastLocationAccess: - 
value: a168 
stateAfter: - 
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v218 lastLocationAccess: - value: a168 stateAfter: - #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v165 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v59 v61 
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v59 v61 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i32
=== Inputs ===
x: i137 
y: i67 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i137 y: i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
lastLocationAccess: - 
value: i68 
stateAfter: - 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v217 lastLocationAccess: - value: i68 stateAfter: - #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.9988638515432683
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v21 #falseSuccessor: v22  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a144 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a144  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a207 
=== Succesors ===
=== Usages ===
a144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v219 
lastLocationAccess: - 
=== Succesors ===
next: v74 
=== Usages ===
v220 v202 
=== Predecessor ===
v21 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v219 lastLocationAccess: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a144 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a144  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.994691943127962
stamp: void
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v72 
=== Usages ===
=== Predecessor ===
a144 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v73 #falseSuccessor: v72  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a149 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a149  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a144 
=== Succesors ===
=== Usages ===
a149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a149 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v220 
lastLocationAccess: - 
=== Succesors ===
next: v84 
=== Usages ===
a150 v203 v221 v222 
=== Predecessor ===
v72 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v220 lastLocationAccess: - #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a149 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a149  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.26666666666666666
stamp: void
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v83 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
a149 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v83 #falseSuccessor: v79  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i154 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i154  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a149 
=== Succesors ===
=== Usages ===
i156 i157 i154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v221 
lastLocationAccess: - 
=== Succesors ===
next: v92 
=== Usages ===
v88 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v221 lastLocationAccess: - #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 v106 ?105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i19 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i154 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.7727272727272727
stamp: void
=== Inputs ===
condition: v88 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
i154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v88 #trueSuccessor: v91 #falseSuccessor: v89  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?10 
values: a129 
=== Succesors ===
=== Usages ===
?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?10 values: a129  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?26 
=== Succesors ===
=== Usages ===
?98 ?193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?26  <|@  <|@
f <@~|@floating>@ <|@
tid a150 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a149 
=== Succesors ===
=== Usages ===
?98 ?105 ?101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a149  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: - a150 
=== Succesors ===
=== Usages ===
?101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: - a150  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?98 
values: a150 i9 
=== Succesors ===
=== Usages ===
?105 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a150 i9  <|@  <|@
f <@~|@floating>@ <|@
tid a95 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: Instance<jdk.internal.misc.Unsafe>
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Instance<jdk.internal.misc.Unsafe>]
=== Inputs ===
=== Succesors ===
=== Usages ===
?105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j96 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?105 i103 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v99 
=== Succesors ===
next: i156 
=== Usages ===
v107 v111 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v99 #next: i156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i156 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v221 
lastLocationAccess: - 
=== Succesors ===
next: i157 
=== Usages ===
i103 i157 ?105 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v221 lastLocationAccess: - #next: i157  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i156 
y: i97 
=== Succesors ===
=== Usages ===
i157 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i156 y: i97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i157 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v221 
lastLocationAccess: - 
expectedValue: i156 
newValue: i103 
stateAfter: - 
=== Succesors ===
next: v113 
=== Usages ===
v106 
=== Predecessor ===
i156 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v221 lastLocationAccess: - expectedValue: i156 newValue: i103 stateAfter: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i157 
y: i19 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i157 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
i157 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v112 #falseSuccessor: v107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?101 
values: i19 a95 a150 j96 - i97 i156 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?101 values: i19 a95 a150 j96 - i97 i156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?105 #next: v111  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
loopBegin: v100 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v100 
=== Succesors ===
next: a211 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v100 #next: a211  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a149 
=== Succesors ===
=== Usages ===
a211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a211 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v222 
lastLocationAccess: - 
=== Succesors ===
next: v116 
=== Usages ===
a162 
=== Predecessor ===
v107 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v222 lastLocationAccess: - #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid a162 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a211 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a211  <|@  <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a162 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a162  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v163 
stateDuring: ?193 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
a211 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v163 stateDuring: ?193 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 v123 v124 v125 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 v123 v124 v125 #next: v36  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:79) [bci: 7]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?10 
values: a129 
=== Succesors ===
=== Usages ===
?69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?10 values: a129  <|@  <|@
f <@~|@floating>@ <|@
tid a133 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a207 
=== Succesors ===
=== Usages ===
?69 ?39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a207  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?17 
values: a133 
=== Succesors ===
=== Usages ===
?39 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?17 values: a133  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?69 
values: i137 a133 i9 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?69 values: i137 a133 i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xbcda391c]: UnreachedCode@5[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?39  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: [v5|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   -1  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v12|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND x: v14|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v12|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v15|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] v13|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v14|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v13|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v13|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v16|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV input: [v12|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v3|DWORD 
locals: v19|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v19|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a206 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a206  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# jdk.internal.misc.InternalLock
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v215 ?10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a206 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v215 
lastLocationAccess: - 
=== Succesors ===
next: a207 
=== Usages ===
a129 v216 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v215 lastLocationAccess: - #next: a207  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i137 a207 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
result [v1|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a206 
=== Succesors ===
=== Usages ===
a207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a207 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-33291|0xffffffffffff7df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v216 
lastLocationAccess: - 
=== Succesors ===
next: i137 
=== Usages ===
a133 v217 v218 v219 
=== Predecessor ===
a206 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v216 lastLocationAccess: - #next: i137  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
result [v2|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a207 
=== Succesors ===
=== Usages ===
i137 v141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i137 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-34315|0xffffffffffff79f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v217 
lastLocationAccess: - 
=== Succesors ===
next: a208 
=== Usages ===
i68 v50 ?39 
=== Predecessor ===
a207 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v217 lastLocationAccess: - #next: a208  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a207 
=== Succesors ===
=== Usages ===
a208 v165 v204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a208 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v218 
lastLocationAccess: - 
=== Succesors ===
next: j209 
=== Usages ===
a140 
=== Predecessor ===
i137 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v218 lastLocationAccess: - #next: j209  <|@  <|@
f <@~|@floating>@ <|@
tid j41 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
result [r15|QWORD + 896] <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j41 
index: - 
=== Succesors ===
=== Usages ===
j209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j41 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j209 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v213 
lastLocationAccess: - 
=== Succesors ===
next: a210 
=== Usages ===
v214 
=== Predecessor ===
a208 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v213 lastLocationAccess: - #next: a210  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
result [v5|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j209 
index: - 
=== Succesors ===
=== Usages ===
a210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j209 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a210 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v214 
lastLocationAccess: - 
=== Succesors ===
next: v191 
=== Usages ===
v48 
=== Predecessor ===
j209 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v214 lastLocationAccess: - #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid a140 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a208 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a208  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a140 
y: a210 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a140 y: a210  <|@  <|@
f <@~|@floating>@ <|@
tid a129 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a206 
=== Succesors ===
=== Usages ===
?17 ?26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a206  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?26 ?17 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 ?101 ?39 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
a210 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v189 #falseSuccessor: v190  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: [v5|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i137 
y: i9 
=== Succesors ===
=== Usages ===
v23 v54 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i137 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.9992379500857306
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v53 #falseSuccessor: v52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
precise: true
stamp: void
=== Inputs ===
address: v218 
value: - 
stateBefore: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v218 value: - stateBefore: - #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid a168 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v218 
lastLocationAccess: - 
value: a168 
stateAfter: - 
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v218 lastLocationAccess: - value: a168 stateAfter: - #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v165 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   -1  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v59 v61 
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v59 v61 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i32
=== Inputs ===
x: i137 
y: i67 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i137 y: i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
lastLocationAccess: - 
value: i68 
stateAfter: - 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v217 lastLocationAccess: - value: i68 stateAfter: - #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.9988638515432683
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v21 #falseSuccessor: v22  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a144 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a144  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
result [v2|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a207 
=== Succesors ===
=== Usages ===
a144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
result v11|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v219 
lastLocationAccess: - 
=== Succesors ===
next: v74 
=== Usages ===
v220 v202 
=== Predecessor ===
v21 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v219 lastLocationAccess: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a144 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a144  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.994691943127962
stamp: void
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v72 
=== Usages ===
=== Predecessor ===
a144 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v73 #falseSuccessor: v72  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a149 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a149  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
result [v11|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a144 
=== Succesors ===
=== Usages ===
a149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a149 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v220 
lastLocationAccess: - 
=== Succesors ===
next: v84 
=== Usages ===
a150 v203 v221 v222 
=== Predecessor ===
v72 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v220 lastLocationAccess: - #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a149 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a149  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.26666666666666666
stamp: void
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v83 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
a149 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v83 #falseSuccessor: v79  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i154 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i154  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
result [v12|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a149 
=== Succesors ===
=== Usages ===
i156 i157 i154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v221 
lastLocationAccess: - 
=== Succesors ===
next: v92 
=== Usages ===
v88 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v221 lastLocationAccess: - #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 v106 ?105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i19 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i154 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.7727272727272727
stamp: void
=== Inputs ===
condition: v88 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
i154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v88 #trueSuccessor: v91 #falseSuccessor: v89  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v12|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?10 
values: a129 
=== Succesors ===
=== Usages ===
?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?10 values: a129  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?26 
=== Succesors ===
=== Usages ===
?98 ?193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?26  <|@  <|@
f <@~|@floating>@ <|@
tid a150 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a149 
=== Succesors ===
=== Usages ===
?98 ?105 ?101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a149  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: - a150 
=== Succesors ===
=== Usages ===
?101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: - a150  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?98 
values: a150 i9 
=== Succesors ===
=== Usages ===
?105 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a150 i9  <|@  <|@
f <@~|@floating>@ <|@
tid a95 <|@
result Object[Instance<jdk.internal.misc.Unsafe>] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: Instance<jdk.internal.misc.Unsafe>
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Instance<jdk.internal.misc.Unsafe>]
=== Inputs ===
=== Succesors ===
=== Usages ===
?105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j96 <|@
result long[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?105 i103 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v99 
=== Succesors ===
next: i156 
=== Usages ===
v107 v111 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v99 #next: i156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i156 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v221 
lastLocationAccess: - 
=== Succesors ===
next: i157 
=== Usages ===
i103 i157 ?105 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v221 lastLocationAccess: - #next: i157  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i156 
y: i97 
=== Succesors ===
=== Usages ===
i157 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i156 y: i97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i157 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v221 
lastLocationAccess: - 
expectedValue: i156 
newValue: i103 
stateAfter: - 
=== Succesors ===
next: v113 
=== Usages ===
v106 
=== Predecessor ===
i156 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v221 lastLocationAccess: - expectedValue: i156 newValue: i103 stateAfter: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i157 
y: i19 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i157 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
i157 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v112 #falseSuccessor: v107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND x: v14|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v12|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v15|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?101 
values: i19 a95 a150 j96 - i97 i156 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?101 values: i19 a95 a150 j96 - i97 i156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?105 #next: v111  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
loopBegin: v100 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] v13|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v14|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v13|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v13|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v16|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v100 
=== Succesors ===
next: a211 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v100 #next: a211  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
result [v12|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a149 
=== Succesors ===
=== Usages ===
a211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a211 <|@
result v17|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v222 
lastLocationAccess: - 
=== Succesors ===
next: v116 
=== Usages ===
a162 
=== Predecessor ===
v107 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v222 lastLocationAccess: - #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid a162 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a211 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a211  <|@  <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a162 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a162  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v163 
stateDuring: ?193 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
a211 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v163 stateDuring: ?193 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV input: [v12|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 v123 v124 v125 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 v123 v124 v125 #next: v36  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:79) [bci: 7]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?10 
values: a129 
=== Succesors ===
=== Usages ===
?69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?10 values: a129  <|@  <|@
f <@~|@floating>@ <|@
tid a133 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a207 
=== Succesors ===
=== Usages ===
?69 ?39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a207  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?17 
values: a133 
=== Succesors ===
=== Usages ===
?39 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?17 values: a133  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?69 
values: i137 a133 i9 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?69 values: i137 a133 i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xbcda391c]: UnreachedCode@5[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v3|DWORD 
locals: v19|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v19|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: [v5|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   -1  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v12|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND x: v14|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v12|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v15|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] v13|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v14|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v13|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v13|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v16|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV input: [v12|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v3|DWORD 
locals: v19|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v19|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: [v5|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   -1  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v12|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND x: v14|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v12|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v15|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] v13|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v14|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v13|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v13|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v16|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV input: [v12|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v3|DWORD 
locals: v19|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v19|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: [v5|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   -1  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v12|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND x: v14|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v12|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v15|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] v13|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v14|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v13|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v13|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v16|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV input: [v12|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v3|DWORD 
locals: v19|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v19|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: [v5|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   -1  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v12|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND x: v14|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v12|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v15|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] v13|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v14|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v13|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v13|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v16|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV input: [v12|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v3|DWORD 
locals: v19|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v19|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   18  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: [v5|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   32  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v10|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction v12|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: [v12|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction v15|DWORD = AND x: v14|DWORD y: -2 size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [v12|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v15|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] v13|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v14|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v13|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v13|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v16|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction v17|DWORD[_] = MOV input: [v12|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v3|DWORD 
locals: v19|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v19|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   18  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: [v5|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   32  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v10|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction v12|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: [v12|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction v15|DWORD = AND x: v14|DWORD y: -2 size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [v12|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v15|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] v13|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v14|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v13|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v13|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v16|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction v17|DWORD[_] = MOV input: [v12|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v3|DWORD 
locals: v19|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v19|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- v14|d [0, 1[[94, 97[[114, 115[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[114, 115[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v18|q [0, 6[[112, 115[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 52[[60, 70[[82, 115[[118, 131[6 MustHaveRegister 8 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [8, 20[8 MustHaveRegister 10 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [10, 48[[118, 124[10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 40 MustHaveRegister 48 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [12, 44[[118, 131[12 MustHaveRegister 26 ShouldHaveRegister 38 ShouldHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [14, 18[14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [16, 22[16 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v4|d [18, 22[18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v1|d [20, 52[[60, 70[[82, 115[[118, 131[20 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [30, 31[30 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[v9|q]" v9|q -1 [30, 31[30 MustHaveRegister  "NoDefinitionFound"
  v10|d DWORD "[v10|d]" v10|d v3|d [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [48, 52[[60, 62[48 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [62, 70[[82, 108[62 MustHaveRegister 64 MustHaveRegister 68 MustHaveRegister 84 MustHaveRegister 90 MustHaveRegister 96 MustHaveRegister 105 LiveAtLoopEnd 108 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|d [84, 106[84 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [90, 103[90 MustHaveRegister 92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v14|d [92, 96[92 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v17|d DWORD "[v17|d]" v17|d -1 [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v17|d [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v2|d [124, 131[124 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- v14|d [0, 1[[94, 97[[114, 115[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[114, 115[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v18|q [0, 6[[112, 115[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 52[[60, 70[[82, 106[6 MustHaveRegister 8 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [8, 20[8 MustHaveRegister 10 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 48[[118, 124[10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 40 MustHaveRegister 48 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [12, 44[[118, 131[12 MustHaveRegister 26 ShouldHaveRegister 38 ShouldHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [14, 18[14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q -1 [16, 22[16 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q v4|d [18, 22[18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v1|d [20, 52[[60, 70[[82, 88[20 MustHaveRegister  "OneSpillStore"
  v8|q QWORD "[r8|q]" v8|q -1 [30, 31[30 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[r9|q]" v9|q -1 [30, 31[30 MustHaveRegister  "NoDefinitionFound"
  v10|d DWORD "[r8|d]" v10|d v3|d [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d -1 [48, 52[[60, 62[48 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [62, 70[[82, 108[62 MustHaveRegister 64 MustHaveRegister 68 MustHaveRegister 84 MustHaveRegister 90 MustHaveRegister 96 MustHaveRegister 105 LiveAtLoopEnd 108 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r11|q]" v13|q v12|d [84, 106[84 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r8|d]" v14|d -1 [90, 103[90 MustHaveRegister 92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r9|d]" v15|d v14|d [92, 96[92 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r9|q]" v16|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v17|d DWORD "[r10|d]" v17|d -1 [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r10|q]" v18|q v17|d [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q v2|d [124, 131[124 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[vstack:0|q]" v0|q v0|q [106, 111[ "OneSpillStore"
  v21|q QWORD "[vstack:1|q]" v7|q v7|q [88, 93[ "OneSpillStore"
  v22|q QWORD "[vstack:1|q]" v7|q v7|q [93, 106[ "OneSpillStore"
  v23|q QWORD "[vstack:1|q]" v7|q v7|q [106, 113[ "OneSpillStore"
  v24|q QWORD "[vstack:1|q]" v7|q v7|q [113, 115[[118, 122[ "OneSpillStore"
  v25|q QWORD "[vstack:0|q]" v0|q v0|q [111, 115[[118, 122[ "OneSpillStore"
  v26|q QWORD "[rsi|q]" v0|q v0|q [122, 131[ "OneSpillStore"
  v27|q QWORD "[rax|q]" v7|q v7|q [122, 131[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   18  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: [v5|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   32  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v10|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction v12|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: [v12|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction v15|DWORD = AND x: v14|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [v12|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v15|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] v13|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v14|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v13|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v13|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v16|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction v17|DWORD[_] = MOV input: [v12|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = STACKMOVE (input: v20|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = STACKMOVE (input: v23|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v3|DWORD 
locals: v19|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v19|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- v14|d [0, 1[[94, 97[[114, 115[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[114, 115[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v18|q [0, 6[[112, 115[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 52[[60, 70[[82, 106[6 MustHaveRegister 8 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [8, 20[8 MustHaveRegister 10 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 48[[118, 124[10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 40 MustHaveRegister 48 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [12, 44[[118, 131[12 MustHaveRegister 26 ShouldHaveRegister 38 ShouldHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [14, 18[14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q -1 [16, 22[16 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q v4|d [18, 22[18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v1|d [20, 52[[60, 70[[82, 88[20 MustHaveRegister  "OneSpillStore"
  v8|q QWORD "[r8|q]" v8|q -1 [30, 31[30 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[r9|q]" v9|q -1 [30, 31[30 MustHaveRegister  "NoDefinitionFound"
  v10|d DWORD "[r8|d]" v10|d v3|d [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d -1 [48, 52[[60, 62[48 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [62, 70[[82, 108[62 MustHaveRegister 64 MustHaveRegister 68 MustHaveRegister 84 MustHaveRegister 90 MustHaveRegister 96 MustHaveRegister 105 LiveAtLoopEnd 108 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r11|q]" v13|q v12|d [84, 106[84 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r8|d]" v14|d -1 [90, 103[90 MustHaveRegister 92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r9|d]" v15|d v14|d [92, 96[92 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r9|q]" v16|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v17|d DWORD "[r10|d]" v17|d -1 [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r10|q]" v18|q v17|d [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q v2|d [124, 131[124 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[vstack:0|q]" v0|q v0|q [106, 111[ "OneSpillStore"
  v21|q QWORD "[vstack:1|q]" v7|q v7|q [88, 93[ "OneSpillStore"
  v22|q QWORD "[vstack:1|q]" v7|q v7|q [93, 106[ "OneSpillStore"
  v23|q QWORD "[vstack:1|q]" v7|q v7|q [106, 113[ "OneSpillStore"
  v24|q QWORD "[vstack:1|q]" v7|q v7|q [113, 115[[118, 122[ "OneSpillStore"
  v25|q QWORD "[vstack:0|q]" v0|q v0|q [111, 115[[118, 122[ "OneSpillStore"
  v26|q QWORD "[rsi|q]" v0|q v0|q [122, 131[ "OneSpillStore"
  v27|q QWORD "[rax|q]" v7|q v7|q [122, 131[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   18  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: [v5|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   32  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v10|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction v12|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: [v12|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction v15|DWORD = AND x: v14|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [v12|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v15|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] v13|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v14|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v13|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v13|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v16|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction v17|DWORD[_] = MOV input: [v12|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = STACKMOVE (input: v20|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = STACKMOVE (input: v23|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v3|DWORD 
locals: v19|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v19|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- v14|d [0, 1[[94, 97[[114, 115[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[114, 115[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v18|q [0, 6[[112, 115[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[114, 115[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 52[[60, 70[[82, 106[6 MustHaveRegister 8 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [8, 20[8 MustHaveRegister 10 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 48[[118, 124[10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 40 MustHaveRegister 48 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [12, 44[[118, 131[12 MustHaveRegister 26 ShouldHaveRegister 38 ShouldHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [14, 18[14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q -1 [16, 22[16 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q v4|d [18, 22[18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v1|d [20, 52[[60, 70[[82, 88[20 MustHaveRegister  "OneSpillStore"
  v8|q QWORD "[r8|q]" v8|q -1 [30, 31[30 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[r9|q]" v9|q -1 [30, 31[30 MustHaveRegister  "NoDefinitionFound"
  v10|d DWORD "[r8|d]" v10|d v3|d [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d -1 [48, 52[[60, 62[48 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [62, 70[[82, 108[62 MustHaveRegister 64 MustHaveRegister 68 MustHaveRegister 84 MustHaveRegister 90 MustHaveRegister 96 MustHaveRegister 105 LiveAtLoopEnd 108 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r11|q]" v13|q v12|d [84, 106[84 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r8|d]" v14|d -1 [90, 103[90 MustHaveRegister 92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r9|d]" v15|d v14|d [92, 96[92 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r9|q]" v16|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v17|d DWORD "[r10|d]" v17|d -1 [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r10|q]" v18|q v17|d [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q v2|d [124, 131[124 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[vstack:0|q]" v0|q v0|q [106, 111[ "OneSpillStore"
  v21|q QWORD "[vstack:1|q]" v7|q v7|q [88, 93[ "OneSpillStore"
  v22|q QWORD "[vstack:1|q]" v7|q v7|q [93, 106[ "OneSpillStore"
  v23|q QWORD "[vstack:1|q]" v7|q v7|q [106, 113[ "OneSpillStore"
  v24|q QWORD "[vstack:1|q]" v7|q v7|q [113, 115[[118, 122[ "OneSpillStore"
  v25|q QWORD "[vstack:0|q]" v0|q v0|q [111, 115[[118, 122[ "OneSpillStore"
  v26|q QWORD "[rsi|q]" v0|q v0|q [122, 131[ "OneSpillStore"
  v27|q QWORD "[rax|q]" v7|q v7|q [122, 131[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   18  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: [v5|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   32  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v10|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction v12|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: [v12|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction v15|DWORD = AND x: v14|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [v12|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v15|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] v13|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v14|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v13|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v13|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v16|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction v17|DWORD[_] = MOV input: [v12|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = STACKMOVE (input: v20|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = STACKMOVE (input: v23|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v3|DWORD 
locals: v19|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v19|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   18  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: v6|QWORD[.], y: [v5|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   32  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v10|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction v12|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: [v12|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v14|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction v15|DWORD = AND x: v14|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [v12|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v15|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] v13|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v14|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v13|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v13|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v16|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction v17|DWORD[_] = MOV input: [v12|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = STACKMOVE (input: v20|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = STACKMOVE (input: v23|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v3|DWORD 
locals: v19|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v19|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   32  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:1|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:1|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   32  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   64  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:1|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:1|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction vstack:1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:1|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:1|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [104, 112[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [80, 112[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:40|q]" vstack:0|q -1 [104, 112[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:32|q]" vstack:1|q -1 [80, 112[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction stack:32|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction stack:32|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction stack:32|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction stack:32|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607124428878665165
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" "B15" "B14" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569074285130527085
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564163164173496904
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562882382851709440
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction stack:32|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4560167893141531648
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B5" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B14" "B9" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B16 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B16 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction stack:32|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B5" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B14" "B9" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B16 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B16 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction stack:32|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B5" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B14" "B9" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B16 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B16 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction stack:32|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B5" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B14" "B9" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B16 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B16 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction stack:32|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B5" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B14" "B9" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B16 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B16 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction stack:32|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B5" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B14" "B9" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607175554864597525
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   32  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4607172185284484659
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" "B9" 
    xhandlers
    flags 
    probability 4572762842098578212
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B16 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B16" "B11" 
    xhandlers
    flags 
    probability 4571111891778825508
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B16 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction stack:32|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561289649864765148
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Instance<jdk.internal.misc.Unsafe>] r11|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: r11|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - r11|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4565793249492135644
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561289649864765148
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:32|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rax|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // lock:java.util.concurrent.locks.ReentrantLock
     4: invokevirtual #7          // java.util.concurrent.locks.ReentrantLock.unlock:()void
     7: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000738a7f00004d03d44d33e4493bc20f85e3ffffff89842400c0feff4883ec2841817f20000000000f85c601000048896c24208b460c448b14c50c000000468b1cd510000000468b04d50c0000004d8b8f8003000049c1e00348c1e0034d3b010f85670100004183fb010f8462000000458bc341ffc8468904d510000000f0830424004183fb010f8494000000488b6c24204883c4286690493ba7d804000072234883ec08498bff48b90000000000000000ffd14883c40848b90000000000000000ffe1493ba7500400000f8733010000c341807f4000900f8432000000468b0cd50c00000049c1e1034d85c90f841d0000004d8b47284983f8000f84170100004983e8084d8947284d0347384d890842c704d50c00000000000000e94fffffff468b14d5140000004585d20f845bffffff468b14d5140000004585d20f844affffff42833cd50c000000000f843bffffff458bda49c1e3034889442410e91f0000006666660f1f84000000000066666690660f1f4400004d8b8f58040000418501468b04d50c000000458bc84183e1fe418bc0f0460fb10cd50c00000075d84889742408468b14d51800000049c1e203498bf266669090666690e8000000000f1f840000000000e9c0feffff49c1e20341c78784040000ed43ffff49c7879004000014000000e8000000000f1f84000000000048896c2420e800000000e92bfefffff4488d0db9feffff49898f68040000e9e1fdfffff44c890c24e800000000e9eafefffff441c78784040000f57dffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f579ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD  <||@
  Comment 59 6 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 62 8 r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 62 [rax:0, rsi:0]at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 70 10 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 70 [rax:0, rsi:0, r10:0]at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 70 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 78 12 r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 86 14 r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 93 16 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3  <||@
  Comment 97 18 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3  <||@
  Comment 101 20 CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD  <||@
  Comment 110 block B1 null  <||@
  Comment 110 22 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 110 24 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B4 y: 1 size: DWORD inlinedY: null  <||@
  Comment 120 block B4 null  <||@
  Comment 120 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 120 40 r8|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 126 42 MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 134 44 MEMBAR barriers: 4  <||@
  Comment 139 46 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B16 y: 1 size: DWORD inlinedY: null  <||@
  Comment 149 block B16 null  <||@
  Comment 149 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 149 122 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 176 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f8ae3b85d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 192 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f8ae4250498, value=140234155123328]:0x7f8acf006280}  <||@
  Comment 204 POLL_RETURN_FAR  <||@
  Comment 218 block B2 null  <||@
  Comment 218 26 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 218 28 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd  <||@
  Comment 280 30 MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 292 32 JUMP ~outgoingValues: [] destination: B2 -> B4  <||@
  Comment 297 block B5 null  <||@
  Comment 297 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 297 50 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 305 52 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 314 block B7 null  <||@
  Comment 314 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 314 60 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 322 62 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B16 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 331 block B9 null  <||@
  Comment 331 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 331 70 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B16 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null  <||@
  Comment 346 block B11 null  <||@
  Comment 346 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 346 78 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3  <||@
  Comment 353 80 stack:32|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 358 82 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 363 block B13 loop 0 depth 1 header:100|LoopBegin  <||@
  Comment 363 96 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 98 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4]  <||@
  Comment 391 [rsi:0, r10:0, r11:0, stack:16]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                                           |1             |2             |3  |4                           |5        
     locals:  |Object[Instance<jdk.internal.misc.Unsafe>]  |r11|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r8|DWORD 
     stack:   |int[0|0x0]                                  |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |r11|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 391 {infopoint: SAFEPOINT}  <||@
  Comment 391 POLL_FAR  <||@
  Comment 394 100 JUMP ~outgoingValues: [] destination: B13 -> B12  <||@
  Comment 394 block B12 loop 0 depth 1 header:100|LoopBegin  <||@
  Comment 394 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 394 86 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 402 88 r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD  <||@
  Comment 409 90 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 412 92 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD  <||@
  Comment 422 94 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 424 block B14 null  <||@
  Comment 424 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 104 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 429 106 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 437 108 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3  <||@
  Comment 441 110 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 444 112 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4]  <||@
  Comment 451 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 451 INVOKESTATIC  <||@
  Comment 456 [stack:8, stack:16]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 464 114 JUMP ~outgoingValues: [] destination: B14 -> B16  <||@
  Comment 469 block B17 null  <||@
  Comment 469 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 469 126 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3  <||@
  Comment 473 128 MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD  <||@
  Comment 484 130 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 495 132 DEOPT info [bci:4, 2, 5, 4]  <||@
  Comment 495 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 500 [rax:0, rsi:0, r10:0]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r10|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r11|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 513 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 538 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 548 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 581 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 586 [rax:0, rsi:0]at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 616 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 621 [rax:0, rsi:0, r10:0]at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 629 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 629 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 635 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 635 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-132[jdk.internal.misc.InternalLock.unlock()]"
  method "HotSpotCompilation-132[jdk.internal.misc.InternalLock.unlock()]"
  date 1740398980345
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0d3f20 448b560849bc000000738a7f00004d03d44d33e4493bc20f8543a1f7ff89842400c0feff4883ec2841817f20000000000f85c601000048896c24208b460c448b14c50c000000468b1cd510000000468b04d50c0000004d8b8f8003000049c1e00348c1e0034d3b010f85670100004183fb010f8462000000458bc341ffc8468904d510000000f0830424004183fb010f8494000000488b6c24204883c4286690493ba7d804000072234883ec08498bff48b9505db8e38a7f0000ffd14883c40848b9806200cf8a7f0000ffe1493ba7500400000f8733010000c341807f4000900f8432000000468b0cd50c00000049c1e1034d85c90f841d0000004d8b47284983f8000f84170100004983e8084d8947284d0347384d890842c704d50c00000000000000e94fffffff468b14d5140000004585d20f845bffffff468b14d5140000004585d20f844affffff42833cd50c000000000f843bffffff458bda49c1e3034889442410e91f0000006666660f1f84000000000066666690660f1f4400004d8b8f58040000418501468b04d50c000000458bc84183e1fe418bc0f0460fb10cd50c00000075d84889742408468b14d51800000049c1e203498bf266669090666690e898a8f7ff0f1f840058030003e9c0feffff49c1e20341c78784040000ed43ffff49c7879004000014000000e86600f8ff0f1f84000000000048896c2420e8fa00f6ffe92bfefffff4488d0db9feffff49898f68040000e9c10ef8fff44c890c24e8379dfeffe9eafefffff441c78784040000f57dffff49c7879004000000000000e81000f8ff0f1f84000000000041c78784040000f579ffff49c7879004000000000000e8edfff7ff0f1f840000000000e86603fefff4e880fdf7fff4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@394659dc slotKind: QWORD  <||@
  Comment 59 6 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 62 8 r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 62 [rax:0, rsi:0]at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 70 10 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 70 [rax:0, rsi:0, r10:0]at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 70 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 78 12 r8|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 86 14 r9|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 93 16 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3  <||@
  Comment 97 18 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3  <||@
  Comment 101 20 CMPBRANCH (x: r8|QWORD[.], y: [r9|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B17 size: QWORD  <||@
  Comment 110 block B1 null  <||@
  Comment 110 22 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 110 24 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9992379500857306 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B4 y: 1 size: DWORD inlinedY: null  <||@
  Comment 120 block B4 null  <||@
  Comment 120 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 120 40 r8|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 126 42 MOV (x: [r10|DWORD[_] * 8 + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 134 44 MEMBAR barriers: 4  <||@
  Comment 139 46 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9988638515432683 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B16 y: 1 size: DWORD inlinedY: null  <||@
  Comment 149 block B16 null  <||@
  Comment 149 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 149 122 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 176 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f8ae3b85d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 192 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f8ae4250498, value=140234155123328]:0x7f8acf006280}  <||@
  Comment 204 POLL_RETURN_FAR  <||@
  Comment 218 block B2 null  <||@
  Comment 218 26 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 218 28 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@337efecd  <||@
  Comment 280 30 MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 292 32 JUMP ~outgoingValues: [] destination: B2 -> B4  <||@
  Comment 297 block B5 null  <||@
  Comment 297 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 297 50 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 305 52 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.994691943127962 condition: = trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 314 block B7 null  <||@
  Comment 314 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 314 60 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 322 62 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.26666666666666666 condition: = trueDestination: B7 -> B16 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 331 block B9 null  <||@
  Comment 331 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 331 70 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.7727272727272727 condition: = trueDestination: B9 -> B16 falseDestination: B9 -> B11 y: 0 size: DWORD inlinedY: null  <||@
  Comment 346 block B11 null  <||@
  Comment 346 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 346 78 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3  <||@
  Comment 353 80 stack:32|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 358 82 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 363 block B13 loop 0 depth 1 header:100|LoopBegin  <||@
  Comment 363 96 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 98 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:21, 10, 22, 12, 5, 4]  <||@
  Comment 391 [rsi:0, r10:0, r11:0, stack:16]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                                           |1             |2             |3  |4                           |5        
     locals:  |Object[Instance<jdk.internal.misc.Unsafe>]  |r11|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r8|DWORD 
     stack:   |int[0|0x0]                                  |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |r11|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 391 {infopoint: SAFEPOINT}  <||@
  Comment 391 POLL_FAR  <||@
  Comment 394 100 JUMP ~outgoingValues: [] destination: B13 -> B12  <||@
  Comment 394 block B12 loop 0 depth 1 header:100|LoopBegin  <||@
  Comment 394 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 394 86 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 402 88 r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD  <||@
  Comment 409 90 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 412 92 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD  <||@
  Comment 422 94 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 424 block B14 null  <||@
  Comment 424 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 104 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 429 106 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 437 108 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3  <||@
  Comment 441 110 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 444 112 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:30, 12, 5, 4]  <||@
  Comment 451 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 451 INVOKESTATIC  <||@
  Comment 456 [stack:8, stack:16]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 464 114 JUMP ~outgoingValues: [] destination: B14 -> B16  <||@
  Comment 469 block B17 null  <||@
  Comment 469 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 469 126 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@78628273 encoding: base: 0 shift: 3  <||@
  Comment 473 128 MOV x: [r15|QWORD + 1156] y: -48147 size: DWORD  <||@
  Comment 484 130 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 495 132 DEOPT info [bci:4, 2, 5, 4]  <||@
  Comment 495 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 500 [rax:0, rsi:0, r10:0]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r10|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r11|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 513 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 538 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 548 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 581 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 586 [rax:0, rsi:0]at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 616 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 621 [rax:0, rsi:0, r10:0]at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 629 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 629 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 635 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 635 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
