begin_compilation
  name " HotSpotCompilation-129[java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(int, int)]"
  method "HotSpotCompilation-129[java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(int, int)]"
  date 1740398979798
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i11 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i11  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.concurrent.locks.ReentrantLock$NonfairSync
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v12 
lastLocationAccess: - 
expectedValue: i2 
newValue: i3 
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
v9 
=== Predecessor ===
v0 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v12 lastLocationAccess: - expectedValue: i2 newValue: i3 stateAfter: - #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 12]
stamp: void
=== Inputs ===
memoryMap: - 
result: i11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i11 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i11  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v0|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: v2|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v4|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i11 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i11  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.concurrent.locks.ReentrantLock$NonfairSync
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i11 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v12 
lastLocationAccess: - 
expectedValue: i2 
newValue: i3 
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
v9 
=== Predecessor ===
v0 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v12 lastLocationAccess: - expectedValue: i2 newValue: i3 stateAfter: - #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 12]
stamp: void
=== Inputs ===
memoryMap: - 
result: i11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i11 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v0|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: v2|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v4|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v0|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: v2|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v4|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v0|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: v2|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v4|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v0|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: v2|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v4|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v0|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: v2|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v4|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v4|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [v0|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: v2|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction v3|DWORD = SETCC condition: = <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: v4|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v4|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [v0|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: v2|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction v3|DWORD = SETCC condition: = <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: v4|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v1|d [0, 1[[12, 15[[18, 20[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 14[6 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|d [10, 14[10 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q rbp|q [2, 20[2 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v1|d [0, 1[[12, 15[[18, 20[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 14[6 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [10, 14[10 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rbp|q]" v4|q rbp|q [2, 20[2 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v4|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [v0|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: v2|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction v3|DWORD = SETCC condition: = <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: v4|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v1|d [0, 1[[12, 15[[18, 20[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 14[6 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [10, 14[10 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rbp|q]" v4|q rbp|q [2, 20[2 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v4|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [v0|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: v2|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction v3|DWORD = SETCC condition: = <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: v4|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v1|d [0, 1[[12, 15[[18, 20[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 14[6 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [10, 14[10 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rbp|q]" v4|q rbp|q [2, 20[2 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v4|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [v0|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: v2|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction v3|DWORD = SETCC condition: = <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: v4|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v4|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [v0|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: v2|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction v3|DWORD = SETCC condition: = <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: v4|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: getstatic     #3          // STATE:long
     7: iload_1       
     8: iload_2       
     9: invokevirtual #4          // jdk.internal.misc.Unsafe.compareAndSetInt:(java.lang.Object, long, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000738a7f00004d03d44d33e4493bc20f85e3ffffff89842400c0feff4883ec1841817f20000000000f851f0000008bc2f00fb14e100f94c00fb6c04883c418493ba7500400000f870f000000c348896c2410e80000000090ebd4f4488d0dddffffff49898f68040000e98afffffff4e800000000f4666690e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD  <||@
  Comment 54 12 rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 56 14 rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD  <||@
  Comment 61 16 rax|DWORD = SETCC condition: =  <||@
  Comment 67 20 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 71 POLL_RETURN_FAR  <||@
  Comment 90 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 113 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 119 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 119 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 128 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 128 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-129[java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(int, int)]"
  method "HotSpotCompilation-129[java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(int, int)]"
  date 1740398979811
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0d3580 448b560849bc000000738a7f00004d03d44d33e4493bc20f85e3aaf7ff89842400c0feff4883ec1841817f20000000000f851f0000008bc2f00fb14e100f94c00fb6c04883c418493ba7500400000f870f000000c348896c2410e8410cf6ff90ebd4f4488d0dddffffff49898f68040000e90a1af8fff4e8040ffefff4666690e81b09f8fff4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@aa08c2c slotKind: QWORD  <||@
  Comment 54 12 rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 56 14 rax|DWORD = CAS (address: [rsi|QWORD[.] + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD  <||@
  Comment 61 16 rax|DWORD = SETCC condition: =  <||@
  Comment 67 20 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 71 POLL_RETURN_FAR  <||@
  Comment 90 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 113 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 119 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 119 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 128 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 128 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
