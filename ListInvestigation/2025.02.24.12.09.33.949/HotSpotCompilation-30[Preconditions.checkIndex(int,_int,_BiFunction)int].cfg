begin_compilation
  name " HotSpotCompilation-30[jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction)]"
  method "HotSpotCompilation-30[jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction)]"
  date 1740398974061
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v6 v8 v10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i5 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
rawvalue: -2835
stableDimension: 0
stamp: i32 [-2835]
stampKind: i32
value: int[-2835|0xfffffffffffff4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i2 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v16 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:303) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v10  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:303) [bci: 17]
stamp: void
=== Inputs ===
memoryMap: - 
result: i1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
rawvalue: -3859
stableDimension: 0
stamp: i32 [-3859]
stampKind: i32
value: int[-3859|0xfffffffffffff0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
stamp: i32 [-3859 - -2835] bits:1...10x0011101101
valueDescription: i32
=== Inputs ===
merge: v19 
values: i21 i27 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v19 values: i21 i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v20 v26 
=== Succesors ===
next: v25 
=== Usages ===
i23 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v20 v26 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: a java.util.function.BiFunction
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_0
code: ResolvedJavaMethodBytecode<Preconditions.checkIndex(int, int, BiFunction)>
localsSize: 3
locksSize: 0
sourceFile: Preconditions.java
sourceLine: 301
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1 i2 a3 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i23 
speculation: j22 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i23 speculation: j22  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v0|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-2835|0xfffffffffffff4ed]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: v0|DWORD v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v6 v8 v10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i5 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result int[-2835|0xfffffffffffff4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
rawvalue: -2835
stableDimension: 0
stamp: i32 [-2835]
stampKind: i32
value: int[-2835|0xfffffffffffff4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-2835|0xfffffffffffff4ed]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i2 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v16 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v0|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:303) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v10  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:303) [bci: 17]
stamp: void
=== Inputs ===
memoryMap: - 
result: i1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[-3859|0xfffffffffffff0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
rawvalue: -3859
stableDimension: 0
stamp: i32 [-3859]
stampKind: i32
value: int[-3859|0xfffffffffffff0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i23 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
stamp: i32 [-3859 - -2835] bits:1...10x0011101101
valueDescription: i32
=== Inputs ===
merge: v19 
values: i21 i27 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v19 values: i21 i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v20 v26 
=== Succesors ===
next: v25 
=== Usages ===
i23 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v20 v26 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: a java.util.function.BiFunction
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_0
code: ResolvedJavaMethodBytecode<Preconditions.checkIndex(int, int, BiFunction)>
localsSize: 3
locksSize: 0
sourceFile: Preconditions.java
sourceLine: 301
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1 i2 a3 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i23 
speculation: j22 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i23 speculation: j22  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: v0|DWORD v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v0|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-2835|0xfffffffffffff4ed]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: v0|DWORD v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v0|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-2835|0xfffffffffffff4ed]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: v0|DWORD v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v0|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-2835|0xfffffffffffff4ed]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: v0|DWORD v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v0|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-2835|0xfffffffffffff4ed]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: v0|DWORD v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v0|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [int[-2835|0xfffffffffffff4ed]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [v3|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v3|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: v0|DWORD v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v0|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [int[-2835|0xfffffffffffff4ed]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [v3|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v3|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: v0|DWORD v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v0|d [0, 1[[20, 22[ "NoSpillStore"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  v0|d DWORD "[v0|d]" v0|d rsi|d [6, 20[[24, 39[6 MustHaveRegister 12 MustHaveRegister 16 ShouldHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 18[[24, 39[8 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|q [10, 18[[24, 39[10 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [32, 34[34 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v0|d [0, 1[[20, 22[ "NoSpillStore"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [6, 20[[24, 39[6 MustHaveRegister 12 MustHaveRegister 16 ShouldHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 18[[24, 39[8 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [10, 18[[24, 39[10 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [32, 34[34 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v0|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [int[-2835|0xfffffffffffff4ed]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [v3|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v3|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: v0|DWORD v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v0|d [0, 1[[20, 22[ "NoSpillStore"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [6, 20[[24, 39[6 MustHaveRegister 12 MustHaveRegister 16 ShouldHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 18[[24, 39[8 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [10, 18[[24, 39[10 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [32, 34[34 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v0|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [int[-2835|0xfffffffffffff4ed]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [v3|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v3|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: v0|DWORD v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v0|d [0, 1[[20, 22[ "NoSpillStore"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [6, 20[[24, 39[6 MustHaveRegister 12 MustHaveRegister 16 ShouldHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 18[[24, 39[8 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [10, 18[[24, 39[10 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [32, 34[34 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v0|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [v3|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v3|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: v0|DWORD v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v0|DWORD, y: v0|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v0|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v3|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: v0|DWORD v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rcx:0]
live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed] // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rcx:0]
live-base-pointers: []
jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iflt          9
     4: iload_0       
     5: iload_1       
     6: if_icmplt     16
     9: aload_2       
    10: iload_0       
    11: iload_1       
    12: invokestatic  #14         // outOfBoundsCheckIndex:(java.util.function.BiFunction, int, int)java.lang.RuntimeException
    15: athrow        
    16: iload_0       
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f856100000048896c24109085f60f8c260000003bd60f8e430000008bc6488b6c24104883c4180f1f440000493ba7500400000f873b000000c341baedf4ffff4589978404000049c7879004000014000000e8000000000f1f84000000000041baedf0ffffebd948896c2410e800000000eb93f4488d0db1ffffff49898f68040000e965fffffff40f1f4000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD  <||@
  Comment 31 12 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 40 block B2 null  <||@
  Comment 40 14 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 40 16 CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 48 block B3 null  <||@
  Comment 48 18 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 48 20 rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 50 22 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 64 POLL_RETURN_FAR  <||@
  Comment 78 block B1 null  <||@
  Comment 78 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 78 -1 r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed]  <||@
  Comment 84 26 JUMP ~outgoingValues: [] destination: B1 -> B5  <||@
  Comment 84 block B5 null  <||@
  Comment 84 32 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 84 34 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 91 36 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 102 38 DEOPT info [bci:0]  <||@
  Comment 102 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 107 [rcx:0]at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2            
     locals:  |rsi|DWORD  |rdx|DWORD  |rcx|QWORD[.]   <||@
  Comment 115 block B4 null  <||@
  Comment 115 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 115 -1 r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed]  <||@
  Comment 121 30 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 128 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 150 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 160 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 160 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 166 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 166 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-30[jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction)]"
  method "HotSpotCompilation-30[jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction)]"
  date 1740398974087
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0b5000 89842400c0feff4883ec189041817f20000000000f856100000048896c24109085f60f8c260000003bd60f8e430000008bc6488b6c24104883c4180f1f440000493ba7500400000f873b000000c341baedf4ffff4589978404000049c7879004000014000000e80ff1f9ff0f1f84000000000041baedf0ffffebd948896c2410e89bf1f7ffeb93f4488d0db1ffffff49898f68040000e965fff9fff40f1f4000e85bf4fffff4e875eef9fff4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@ed35dd4 slotKind: QWORD  <||@
  Comment 31 12 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 40 block B2 null  <||@
  Comment 40 14 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 40 16 CMPBRANCH (x: rdx|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 48 block B3 null  <||@
  Comment 48 18 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 48 20 rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 50 22 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 64 POLL_RETURN_FAR  <||@
  Comment 78 block B1 null  <||@
  Comment 78 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 78 -1 r10|DWORD = MOVE input: int[-2835|0xfffffffffffff4ed]  <||@
  Comment 84 26 JUMP ~outgoingValues: [] destination: B1 -> B5  <||@
  Comment 84 block B5 null  <||@
  Comment 84 32 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 84 34 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 91 36 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 102 38 DEOPT info [bci:0]  <||@
  Comment 102 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 107 [rcx:0]at jdk.internal.util.Preconditions.checkIndex(Preconditions.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2            
     locals:  |rsi|DWORD  |rdx|DWORD  |rcx|QWORD[.]   <||@
  Comment 115 block B4 null  <||@
  Comment 115 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 115 -1 r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed]  <||@
  Comment 121 30 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 128 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 150 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 160 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 160 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 166 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 166 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
