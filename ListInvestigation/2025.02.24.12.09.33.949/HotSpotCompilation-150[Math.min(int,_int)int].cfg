begin_compilation
  name " HotSpotCompilation-150[java.lang.Math.min(int, int)]"
  method "HotSpotCompilation-150[java.lang.Math.min(int, int)]"
  date 1740398988799
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 v4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 v4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i1  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
stamp: i32
=== Inputs ===
condition: v4 
trueValue: i2 
falseValue: i1 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v4 trueValue: i2 falseValue: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 10]
stamp: void
=== Inputs ===
memoryMap: - 
result: i15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i15  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = CMOVE (falseValue: v0|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v3|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 v4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 v4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i1  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
stamp: i32
=== Inputs ===
condition: v4 
trueValue: i2 
falseValue: i1 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v4 trueValue: i2 falseValue: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 10]
stamp: void
=== Inputs ===
memoryMap: - 
result: i15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = CMOVE (falseValue: v0|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v3|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = CMOVE (falseValue: v0|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v3|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = CMOVE (falseValue: v0|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v3|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = CMOVE (falseValue: v0|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v3|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = CMOVE (falseValue: v0|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v3|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v3|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|DWORD = CMOVE (falseValue: v0|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: v3|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v3|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|DWORD = CMOVE (falseValue: v0|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: v3|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v2|d [0, 1[[14, 16[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  v0|d DWORD "[v0|d]" v0|d rsi|d [6, 12[6 MustHaveRegister 10 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 13[8 MustHaveRegister 10 ShouldHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d v0|d [12, 14[12 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q rbp|q [2, 16[2 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v2|d [0, 1[[14, 16[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [6, 12[6 MustHaveRegister 10 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 13[8 MustHaveRegister 10 ShouldHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rsi|d]" v2|d v0|d [12, 14[12 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rbp|q]" v3|q rbp|q [2, 16[2 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v3|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|DWORD = CMOVE (falseValue: v0|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: v3|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v2|d [0, 1[[14, 16[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [6, 12[6 MustHaveRegister 10 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 13[8 MustHaveRegister 10 ShouldHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rsi|d]" v2|d v0|d [12, 14[12 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rbp|q]" v3|q rbp|q [2, 16[2 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v3|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|DWORD = CMOVE (falseValue: v0|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: v3|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v2|d [0, 1[[14, 16[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [6, 12[6 MustHaveRegister 10 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 13[8 MustHaveRegister 10 ShouldHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rsi|d]" v2|d v0|d [12, 14[12 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rbp|q]" v3|q rbp|q [2, 16[2 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v3|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|DWORD = CMOVE (falseValue: v0|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: v3|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v3|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|DWORD = CMOVE (falseValue: v0|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: v3|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   14  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmpgt     9
     5: iload_0       
     6: goto          10
     9: iload_1       
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f85190000003bf20f4ff28bc64883c418493ba7500400000f870e000000c348896c2410e800000000ebdbf4488d0ddeffffff49898f68040000e9adfffffff4e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD  <||@
  Comment 26 10 CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 28 12 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: >  <||@
  Comment 31 14 rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 33 16 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406  <||@
  Comment 37 POLL_RETURN_FAR  <||@
  Comment 56 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 78 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 84 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 84 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 90 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 90 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-150[java.lang.Math.min(int, int)]"
  method "HotSpotCompilation-150[java.lang.Math.min(int, int)]"
  date 1740398988818
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0da100 89842400c0feff4883ec189041817f20000000000f85190000003bf20f4ff28bc64883c418493ba7500400000f870e000000c348896c2410e8e3a0f5ffebdbf4488d0ddeffffff49898f68040000e9adaef7fff4e8a7a3fdfff4e8c19df7fff4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@52402148 slotKind: QWORD  <||@
  Comment 26 10 CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 28 12 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: >  <||@
  Comment 31 14 rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 33 16 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@bb71406  <||@
  Comment 37 POLL_RETURN_FAR  <||@
  Comment 56 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 78 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 84 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 84 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 90 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 90 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
