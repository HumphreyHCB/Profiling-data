begin_compilation
  name " HotSpotCompilation-133[jdk.internal.util.Preconditions.checkFromIndexSize(int, int, int, BiFunction)]"
  method "HotSpotCompilation-133[jdk.internal.util.Preconditions.checkFromIndexSize(int, int, int, BiFunction)]"
  date 1740398982679
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i7 v12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i6 i11 v14 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i6 i11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 2]
stamp: i32
=== Inputs ===
x: i1 
y: i3 
=== Succesors ===
=== Usages ===
i7 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i1 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 4]
stamp: i32
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i2 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i7 
y: i8 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i7 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v16 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
rawvalue: -3859
stableDimension: 0
stamp: i32 [-3859]
stampKind: i32
value: int[-3859|0xfffffffffffff0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v16 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 11]
stamp: i32
=== Inputs ===
x: i3 
y: i1 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i1  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i2 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
rawvalue: -4883
stableDimension: 0
stamp: i32 [-4883]
stampKind: i32
value: int[-4883|0xffffffffffffeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
stamp: i32 [-4883 - -3859] bits:1...1xxx0011101101
valueDescription: i32
=== Inputs ===
merge: v23 
values: i25 i31 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v23 values: i25 i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v24 v30 
=== Succesors ===
next: v29 
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v24 v30 #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid j26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a java.lang.Object
uncheckedStamp: a java.util.function.BiFunction
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Preconditions.checkFromIndexSize(int, int, int, BiFunction)>
localsSize: 4
locksSize: 0
sourceFile: Preconditions.java
sourceLine: 396
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 a4 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i27 
speculation: j26 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i27 speculation: j26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:398) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:398) [bci: 24]
stamp: void
=== Inputs ===
memoryMap: - 
result: i1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i1  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = OR (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i7 v12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i6 i11 v14 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i6 i11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 2]
stamp: i32
=== Inputs ===
x: i1 
y: i3 
=== Succesors ===
=== Usages ===
i7 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i1 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 4]
stamp: i32
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i2 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i7 
y: i8 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i7 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v16 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = OR (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result int[-3859|0xfffffffffffff0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
rawvalue: -3859
stableDimension: 0
stamp: i32 [-3859]
stampKind: i32
value: int[-3859|0xfffffffffffff0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v16 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 11]
stamp: i32
=== Inputs ===
x: i3 
y: i1 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i1  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i2 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result int[-4883|0xffffffffffffeced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
rawvalue: -4883
stableDimension: 0
stamp: i32 [-4883]
stampKind: i32
value: int[-4883|0xffffffffffffeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i27 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
stamp: i32 [-4883 - -3859] bits:1...1xxx0011101101
valueDescription: i32
=== Inputs ===
merge: v23 
values: i25 i31 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v23 values: i25 i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v24 v30 
=== Succesors ===
next: v29 
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v24 v30 #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid j26 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a java.lang.Object
uncheckedStamp: a java.util.function.BiFunction
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Preconditions.checkFromIndexSize(int, int, int, BiFunction)>
localsSize: 4
locksSize: 0
sourceFile: Preconditions.java
sourceLine: 396
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 a4 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i27 
speculation: j26 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i27 speculation: j26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:398) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:398) [bci: 24]
stamp: void
=== Inputs ===
memoryMap: - 
result: i1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = OR (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = OR (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = OR (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = OR (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = OR (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v6|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = OR (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v6|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v0|d [0, 1[[28, 30[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  r8|q fixed "[r8|q]" r8|q -1 [0, 12[ "NoSpillStore"
  v0|d DWORD "[v0|d]" v0|d rsi|d [6, 28[[32, 47[6 MustHaveRegister 14 ShouldHaveRegister 22 ShouldHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 26[[32, 47[8 MustHaveRegister 16 ShouldHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|d [10, 26[[32, 47[10 MustHaveRegister 14 ShouldHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|q [12, 26[[32, 47[12 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d v0|d [14, 16[14 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v1|d [16, 18[16 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v2|d [22, 24[22 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [40, 42[42 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v0|d [0, 1[[28, 30[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  r8|q fixed "[r8|q]" r8|q -1 [0, 12[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [6, 28[[32, 47[6 MustHaveRegister 14 ShouldHaveRegister 22 ShouldHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 26[[32, 47[8 MustHaveRegister 16 ShouldHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [10, 26[[32, 47[10 MustHaveRegister 14 ShouldHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|q [12, 26[[32, 47[12 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d v0|d [14, 16[14 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d v1|d [16, 18[16 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d v2|d [22, 24[22 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [40, 42[42 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = OR (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v6|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v0|d [0, 1[[28, 30[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  r8|q fixed "[r8|q]" r8|q -1 [0, 12[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [6, 28[[32, 47[6 MustHaveRegister 14 ShouldHaveRegister 22 ShouldHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 26[[32, 47[8 MustHaveRegister 16 ShouldHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [10, 26[[32, 47[10 MustHaveRegister 14 ShouldHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|q [12, 26[[32, 47[12 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d v0|d [14, 16[14 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d v1|d [16, 18[16 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d v2|d [22, 24[22 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [40, 42[42 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = OR (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v6|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [int[-3859|0xfffffffffffff0ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [int[-4883|0xffffffffffffeced]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v0|d [0, 1[[28, 30[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  r8|q fixed "[r8|q]" r8|q -1 [0, 12[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [6, 28[[32, 47[6 MustHaveRegister 14 ShouldHaveRegister 22 ShouldHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 26[[32, 47[8 MustHaveRegister 16 ShouldHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [10, 26[[32, 47[10 MustHaveRegister 14 ShouldHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|q [12, 26[[32, 47[12 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d v0|d [14, 16[14 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d v1|d [16, 18[16 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d v2|d [22, 24[22 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [40, 42[42 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = OR (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v6|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [v7|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = OR (x: v0|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = OR (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v6|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: v0|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [r8:0]
live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [r8:0]
live-base-pointers: []
jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0]
locals: rsi|DWORD rdx|DWORD rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced] // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_0       
     2: ior           
     3: iload_1       
     4: ior           
     5: iflt          15
     8: iload_1       
     9: iload_2       
    10: iload_0       
    11: isub          
    12: if_icmple     23
    15: aload_3       
    16: iload_0       
    17: iload_1       
    18: iload_2       
    19: invokestatic  #16         // outOfBoundsCheckFromIndexSize:(java.util.function.BiFunction, int, int, int)java.lang.RuntimeException
    22: athrow        
    23: iload_0       
    24: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f856500000048896c24108bc60bc10bc285c00f8c250000008bc12bc63bd00f8f3e0000008bc6488b6c24104883c418493ba7500400000f873b000000c341baedf0ffff4589978404000049c7879004000014000000e8000000000f1f84000000000041baedecffffebd948896c2410e800000000eb8ff4488d0db1ffffff49898f68040000e961fffffff4e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD  <||@
  Comment 31 14 rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 35 16 rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 37 18 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 45 block B2 null  <||@
  Comment 45 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 45 22 rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 49 24 CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD  <||@
  Comment 57 block B5 null  <||@
  Comment 57 26 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 57 28 rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 59 30 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7  <||@
  Comment 68 POLL_RETURN_FAR  <||@
  Comment 82 block B1 null  <||@
  Comment 82 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 82 -1 r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed]  <||@
  Comment 88 34 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 88 block B4 null  <||@
  Comment 88 40 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 88 42 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 95 44 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 106 46 DEOPT info [bci:0]  <||@
  Comment 106 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 111 [r8:0]at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2          |3           
     locals:  |rsi|DWORD  |rdx|DWORD  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 119 block B3 null  <||@
  Comment 119 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 -1 r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced]  <||@
  Comment 125 38 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 132 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 154 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 160 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 160 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 166 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 166 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-133[jdk.internal.util.Preconditions.checkFromIndexSize(int, int, int, BiFunction)]"
  method "HotSpotCompilation-133[jdk.internal.util.Preconditions.checkFromIndexSize(int, int, int, BiFunction)]"
  date 1740398982714
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0d4580 89842400c0feff4883ec189041817f20000000000f856500000048896c24108bc60bc10bc285c00f8c250000008bc12bc63bd00f8f3e0000008bc6488b6c24104883c418493ba7500400000f873b000000c341baedf0ffff4589978404000049c7879004000014000000e88bfbf7ff0f1f84000000000041baedecffffebd948896c2410e817fcf5ffeb8ff4488d0db1ffffff49898f68040000e9e109f8fff4e8dbfefdfff4e8f5f8f7fff4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rdx|DWORD, rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5e3261cb slotKind: QWORD  <||@
  Comment 31 14 rax|DWORD = OR (x: rsi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 35 16 rax|DWORD = OR (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 37 18 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 45 block B2 null  <||@
  Comment 45 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 45 22 rax|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 49 24 CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD  <||@
  Comment 57 block B5 null  <||@
  Comment 57 26 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 57 28 rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 59 30 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@3abb11d7  <||@
  Comment 68 POLL_RETURN_FAR  <||@
  Comment 82 block B1 null  <||@
  Comment 82 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 82 -1 r10|DWORD = MOVE input: int[-3859|0xfffffffffffff0ed]  <||@
  Comment 88 34 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 88 block B4 null  <||@
  Comment 88 40 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 88 42 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 95 44 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 106 46 DEOPT info [bci:0]  <||@
  Comment 106 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 111 [r8:0]at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2          |3           
     locals:  |rsi|DWORD  |rdx|DWORD  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 119 block B3 null  <||@
  Comment 119 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 -1 r10|DWORD = MOVE input: int[-4883|0xffffffffffffeced]  <||@
  Comment 125 38 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 132 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 154 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 160 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 160 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 166 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 166 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
