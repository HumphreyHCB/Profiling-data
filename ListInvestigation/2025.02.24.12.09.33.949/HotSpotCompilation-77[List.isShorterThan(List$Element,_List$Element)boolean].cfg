begin_compilation
  name " HotSpotCompilation-77[List.isShorterThan(List$Element, List$Element)]"
  method "HotSpotCompilation-77[List.isShorterThan(List$Element, List$Element)]"
  date 1740398975174
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# List$Element
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 v91 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.10071804691239827
stamp: void
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v38 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# List$Element
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 v90 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.037900564249973345
stamp: void
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v42 #falseSuccessor: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
v42 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a86 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a86  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a86 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a86 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v90 
lastLocationAccess: - 
=== Succesors ===
next: a87 
=== Usages ===
a65 
=== Predecessor ===
v41 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v90 lastLocationAccess: - #next: a87  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a87 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v91 
lastLocationAccess: - 
=== Succesors ===
next: v6 
=== Usages ===
a68 
=== Predecessor ===
a86 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v91 lastLocationAccess: - #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid a68 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a87 
=== Succesors ===
=== Usages ===
a61 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a87  <|@  <|@
f <@~|@floating>@ <|@
tid a65 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a86 
=== Succesors ===
=== Usages ===
a60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a86  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
a87 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v7 
values: a68 a74 
=== Succesors ===
=== Usages ===
?10 v12 v93 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: a68 a74  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v7 
values: a65 a71 
=== Succesors ===
=== Usages ===
?10 v18 v92 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: a65 a71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: v17 
=== Usages ===
a61 a60 v15 v21 v30 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a61 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a61  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.10071804691239827
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v15 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a60 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a60  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.037900564249973345
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v21 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - a60 a61 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a60 a61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
stamp: void
=== Inputs ===
stateBefore: ?10 
=== Succesors ===
next: a88 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?10 #next: a88  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a60 
index: - 
=== Succesors ===
=== Usages ===
a88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a88 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v92 
lastLocationAccess: - 
=== Succesors ===
next: a89 
=== Usages ===
a71 
=== Predecessor ===
v81 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v92 lastLocationAccess: - #next: a89  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a61 
index: - 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a61 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
lastLocationAccess: - 
=== Succesors ===
next: v30 
=== Usages ===
a74 
=== Predecessor ===
a88 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v93 lastLocationAccess: - #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid a74 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a89 
=== Succesors ===
=== Usages ===
a61 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a89  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a88 
=== Succesors ===
=== Usages ===
a60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a88  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a89 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v15 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v56 v57 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v56 v57 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 32]
stamp: void
=== Inputs ===
memoryMap: - 
result: i33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v51 v52 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v51 v52 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 15]
stamp: void
=== Inputs ===
memoryMap: - 
result: i31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i31  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.], v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.], v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|QWORD[.], y: v6|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|QWORD[.], y: v7|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v7|QWORD[.] v6|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.], v12|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# List$Element
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 v91 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.10071804691239827
stamp: void
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v38 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# List$Element
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 v90 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.037900564249973345
stamp: void
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v42 #falseSuccessor: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
v42 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a86 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a86  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a86 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a86 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v90 
lastLocationAccess: - 
=== Succesors ===
next: a87 
=== Usages ===
a65 
=== Predecessor ===
v41 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v90 lastLocationAccess: - #next: a87  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a87 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v91 
lastLocationAccess: - 
=== Succesors ===
next: v6 
=== Usages ===
a68 
=== Predecessor ===
a86 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v91 lastLocationAccess: - #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid a68 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a87 
=== Succesors ===
=== Usages ===
a61 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a87  <|@  <|@
f <@~|@floating>@ <|@
tid a65 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a86 
=== Succesors ===
=== Usages ===
a60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a86  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
a87 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.], v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a61 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v7 
values: a68 a74 
=== Succesors ===
=== Usages ===
?10 v12 v93 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: a68 a74  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v7 
values: a65 a71 
=== Succesors ===
=== Usages ===
?10 v18 v92 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: a65 a71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: v17 
=== Usages ===
a61 a60 v15 v21 v30 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a61 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a61  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.10071804691239827
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v15 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.], v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|QWORD[.], y: v6|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a60 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a60  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.037900564249973345
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v21 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|QWORD[.], y: v7|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - a60 a61 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a60 a61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
stamp: void
=== Inputs ===
stateBefore: ?10 
=== Succesors ===
next: a88 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?10 #next: a88  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
result [v7|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a60 
index: - 
=== Succesors ===
=== Usages ===
a88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a88 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v92 
lastLocationAccess: - 
=== Succesors ===
next: a89 
=== Usages ===
a71 
=== Predecessor ===
v81 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v92 lastLocationAccess: - #next: a89  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
result [v6|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a61 
index: - 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a61 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
lastLocationAccess: - 
=== Succesors ===
next: v30 
=== Usages ===
a74 
=== Predecessor ===
a88 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v93 lastLocationAccess: - #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid a74 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a89 
=== Succesors ===
=== Usages ===
a61 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a89  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a88 
=== Succesors ===
=== Usages ===
a60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a88  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a89 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v7|QWORD[.] v6|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.], v12|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v15 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v56 v57 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v56 v57 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 32]
stamp: void
=== Inputs ===
memoryMap: - 
result: i33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v51 v52 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v51 v52 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 15]
stamp: void
=== Inputs ===
memoryMap: - 
result: i31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.], v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.], v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|QWORD[.], y: v6|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|QWORD[.], y: v7|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v7|QWORD[.] v6|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.], v12|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.], v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.], v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|QWORD[.], y: v6|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|QWORD[.], y: v7|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v7|QWORD[.] v6|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.], v12|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.], v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.], v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|QWORD[.], y: v6|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|QWORD[.], y: v7|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v7|QWORD[.] v6|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.], v12|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v0|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.], v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.], v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|QWORD[.], y: v6|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|QWORD[.], y: v7|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v7|QWORD[.] v6|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.], v12|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: v0|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.], v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   28  <|@ instruction [v6|QWORD[.], v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v6|QWORD[.], y: v6|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v7|QWORD[.], y: v7|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v7|QWORD[.] v6|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   40  <|@ instruction v9|DWORD[_] = MOV input: [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction v10|DWORD[_] = MOV input: [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.], v12|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: v0|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.], v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   28  <|@ instruction [v6|QWORD[.], v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v6|QWORD[.], y: v6|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v7|QWORD[.], y: v7|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v7|QWORD[.] v6|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   40  <|@ instruction v9|DWORD[_] = MOV input: [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction v10|DWORD[_] = MOV input: [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.], v12|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[64, 66[[74, 76[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 8[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 6[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rdx|q [6, 18[6 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rcx|q [8, 20[8 MustHaveRegister 10 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [18, 24[18 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|d [22, 27[22 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v2|d [24, 27[24 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v11|q [28, 42[30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v12|q [28, 40[34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [38, 39[38 MustHaveRegister  "NoDefinitionFound"
  v9|d DWORD "[v9|d]" v9|d -1 [40, 46[40 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|d [44, 49[44 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v9|d [46, 49[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[64, 66[[74, 76[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 8[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 6[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [6, 18[6 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rcx|q]" v1|q rcx|q [8, 20[8 MustHaveRegister 10 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [18, 24[18 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q v3|d [22, 27[22 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q v2|d [24, 27[24 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v11|q [28, 42[30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r10|q]" v7|q v12|q [28, 40[34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r11|q]" v8|q -1 [38, 39[38 MustHaveRegister  "NoDefinitionFound"
  v9|d DWORD "[r10|d]" v9|d -1 [40, 46[40 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d -1 [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v10|d [44, 49[44 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r10|q]" v12|q v9|d [46, 49[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: v0|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.], v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   28  <|@ instruction [v6|QWORD[.], v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v6|QWORD[.], y: v6|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v7|QWORD[.], y: v7|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v7|QWORD[.] v6|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   40  <|@ instruction v9|DWORD[_] = MOV input: [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction v10|DWORD[_] = MOV input: [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.], v12|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[64, 66[[74, 76[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 8[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 6[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [6, 18[6 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rcx|q]" v1|q rcx|q [8, 20[8 MustHaveRegister 10 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [18, 24[18 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q v3|d [22, 27[22 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q v2|d [24, 27[24 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v11|q [28, 42[30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r10|q]" v7|q v12|q [28, 40[34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r11|q]" v8|q -1 [38, 39[38 MustHaveRegister  "NoDefinitionFound"
  v9|d DWORD "[r10|d]" v9|d -1 [40, 46[40 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d -1 [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v10|d [44, 49[44 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r10|q]" v12|q v9|d [46, 49[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: v0|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.], v5|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   28  <|@ instruction [v6|QWORD[.], v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v6|QWORD[.], y: v6|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v7|QWORD[.], y: v7|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v7|QWORD[.] v6|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   40  <|@ instruction v9|DWORD[_] = MOV input: [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction v10|DWORD[_] = MOV input: [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.], v12|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[64, 66[[74, 76[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 8[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 6[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [6, 18[6 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rcx|q]" v1|q rcx|q [8, 20[8 MustHaveRegister 10 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [18, 24[18 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q v3|d [22, 27[22 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q v2|d [24, 27[24 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v11|q [28, 42[30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r10|q]" v7|q v12|q [28, 40[34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r11|q]" v8|q -1 [38, 39[38 MustHaveRegister  "NoDefinitionFound"
  v9|d DWORD "[r10|d]" v9|d -1 [40, 46[40 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d -1 [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v10|d [44, 49[44 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r10|q]" v12|q v9|d [46, 49[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[vstack:0|q]" v13|q -1 [1, 2[ "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: v0|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   28  <|@ instruction [v6|QWORD[.], v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v6|QWORD[.], y: v6|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v7|QWORD[.], y: v7|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v7|QWORD[.] v6|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   40  <|@ instruction v9|DWORD[_] = MOV input: [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction v10|DWORD[_] = MOV input: [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: v0|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v6|QWORD[.], y: v6|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v7|QWORD[.], y: v7|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v7|QWORD[.] v6|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   40  <|@ instruction v9|DWORD[_] = MOV input: [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction v10|DWORD[_] = MOV input: [v6|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   40  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [30, 34[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [30, 34[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603997842834997417
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597049594021108330
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591921920799871504
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585072741280409524
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B10" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B10" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B0" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B10" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B10" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B0" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B10" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B10" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B0" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B10" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B10" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B0" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B10" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rax:0, r10:0]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B10" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B0" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B10" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B4" 
    xhandlers
    flags 
    probability 4606275231282929086
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968236267640643
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184580756326754
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617938281577246351
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rax:0, r10:0]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r10|QWORD[.] rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5] <|@ <|@
      nr   50  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B10" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912408667541879
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B0" 
    successors 
    xhandlers
    flags 
    probability 4604905030352085739
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors 
    xhandlers
    flags 
    probability 4598226396813769260
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: astore_3      
     2: aload_2       
     3: astore        4
     5: aload         4
     7: ifnull        31
    10: aload_3       
    11: ifnonnull     16
    14: iconst_1      
    15: ireturn       
    16: aload_3       
    17: invokevirtual #7          // List$Element.getNext:()List$Element
    20: astore_3      
    21: aload         4
    23: invokevirtual #7          // List$Element.getNext:()List$Element
    26: astore        4
    28: goto          5
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000738a7f00004d03d44d33e4493bc20f85e3ffffff89842400c0feff4883ec1841817f20000000000f85b800000048896c24100f1f4400004885c90f845e0000004885d20f847c0000008b4210448b511049c1e20348c1e0034c8914244c8bd0488b0424e9310000006666660f1f840000000000666666904d85d20f84450000004d8b9f58040000418503458b52108b401048c1e00349c1e2034885c075d9b800000000488b6c24104883c4186666660f1f840000000000493ba7500400000f8731000000c3b801000000488b6c24104883c4180f1f4000493ba7500400000f8725000000c348896c2410e800000000e939fffffff4488d0dbbffffff49898f68040000e9effefffff4488d0dc7ffffff49898f68040000e9dbfefffff4e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD  <||@
  Comment 59 6 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 73 block B2 null  <||@
  Comment 73 12 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 73 14 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 82 block B4 null  <||@
  Comment 82 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 82 22 rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 85 24 r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 89 26 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3  <||@
  Comment 93 28 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3  <||@
  Comment 97 30 stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 101 32 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 104 34 rax|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 108 36 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 113 block B6 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 113 42 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 128 44 TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD  <||@
  Comment 137 block B7 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 137 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 137 48 SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5]  <||@
  Comment 144 [rax:0, r10:0]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |r10|QWORD[.]  |rax|QWORD[.]   <||@
  Comment 144 {infopoint: SAFEPOINT}  <||@
  Comment 144 POLL_FAR  <||@
  Comment 147 50 r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 151 52 rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 154 54 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3  <||@
  Comment 158 56 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3  <||@
  Comment 162 58 JUMP ~outgoingValues: [] destination: B7 -> B5  <||@
  Comment 162 block B5 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 162 38 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 162 40 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD  <||@
  Comment 167 block B10 null  <||@
  Comment 167 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 167 70 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 172 72 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 192 POLL_RETURN_FAR  <||@
  Comment 206 block B11 null  <||@
  Comment 206 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 206 76 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 211 78 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 224 POLL_RETURN_FAR  <||@
  Comment 243 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 268 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 288 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 294 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 294 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 300 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 300 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-77[List.isShorterThan(List$Element, List$Element)]"
  method "HotSpotCompilation-77[List.isShorterThan(List$Element, List$Element)]"
  date 1740398975234
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0bf780 448b560849bc000000738a7f00004d03d44d33e4493bc20f85e3e8f8ff89842400c0feff4883ec1841817f20000000000f85b800000048896c24100f1f4400004885c90f845e0000004885d20f847c0000008b4210448b511049c1e20348c1e0034c8914244c8bd0488b0424e9310000006666660f1f840000000000666666904d85d20f84450000004d8b9f58040000418503458b52108b401048c1e00349c1e2034885c075d9b800000000488b6c24104883c4186666660f1f840000000000493ba7500400000f8731000000c3b801000000488b6c24104883c4180f1f4000493ba7500400000f8725000000c348896c2410e8a849f7ffe939fffffff4488d0dbbffffff49898f68040000e96f57f9fff4488d0dc7ffffff49898f68040000e95b57f9fff4e8554cfffff4e86f46f9fff4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@757de2f0 slotKind: QWORD  <||@
  Comment 59 6 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 73 block B2 null  <||@
  Comment 73 12 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 73 14 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 82 block B4 null  <||@
  Comment 82 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 82 22 rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 85 24 r10|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 89 26 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3  <||@
  Comment 93 28 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3  <||@
  Comment 97 30 stack:32|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 101 32 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 104 34 rax|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 108 36 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 113 block B6 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 113 42 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 128 44 TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.037900564249973345 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD  <||@
  Comment 137 block B7 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 137 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 137 48 SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5]  <||@
  Comment 144 [rax:0, r10:0]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |r10|QWORD[.]  |rax|QWORD[.]   <||@
  Comment 144 {infopoint: SAFEPOINT}  <||@
  Comment 144 POLL_FAR  <||@
  Comment 147 50 r10|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 151 52 rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 154 54 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3  <||@
  Comment 158 56 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5d435bda encoding: base: 0 shift: 3  <||@
  Comment 162 58 JUMP ~outgoingValues: [] destination: B7 -> B5  <||@
  Comment 162 block B5 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 162 38 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 162 40 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10071804691239827 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD  <||@
  Comment 167 block B10 null  <||@
  Comment 167 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 167 70 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 172 72 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 192 POLL_RETURN_FAR  <||@
  Comment 206 block B11 null  <||@
  Comment 206 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 206 76 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 211 78 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 224 POLL_RETURN_FAR  <||@
  Comment 243 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 268 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 288 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 294 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 294 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 300 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 300 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
