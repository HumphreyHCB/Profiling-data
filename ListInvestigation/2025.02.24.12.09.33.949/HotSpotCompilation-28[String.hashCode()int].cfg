begin_compilation
  name " HotSpotCompilation-28[java.lang.String.hashCode()]"
  method "HotSpotCompilation-28[java.lang.String.hashCode()]"
  date 1740398973953
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i110 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i110  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v115 v116 v118 v117 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i110 v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.hash
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.hashCode(String.java:2367) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v115 
lastLocationAccess: - 
=== Succesors ===
next: v8 
=== Usages ===
v5 i32 i32 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v115 lastLocationAccess: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 i48 v27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i110 
y: i4 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i110 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 6]
profileData: PROFILED designatedSuccessorProbability: 0.1507280759162304
stamp: void
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v6 
=== Usages ===
=== Predecessor ===
i110 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v7 #falseSuccessor: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i111 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i111  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.hashIsZero
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 10]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v116 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
v72 
=== Predecessor ===
v7 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v116 lastLocationAccess: - #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 v73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i71 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i111 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 13]
profileData: PROFILED designatedSuccessorProbability: 0.9617367706919946
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
i111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2369) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a112 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a112  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a112 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.hashCode(String.java:2369) [bci: 24]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v118 
lastLocationAccess: - 
=== Succesors ===
next: i113 
=== Usages ===
a64 v119 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v118 lastLocationAccess: - #next: i113  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.hashCode()>
localsSize: 2
locksSize: 0
sourceFile: String.java
sourceLine: 2367
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v98 i113 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a112 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-16907|0xffffffffffffbdf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v119 
lastLocationAccess: - 
=== Succesors ===
next: i114 
=== Usages ===
v42 i48 
=== Predecessor ===
a112 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v119 lastLocationAccess: - #next: i114  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.hashCode(String.java:2369) [bci: 17]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v117 
lastLocationAccess: - 
=== Succesors ===
next: v87 
=== Usages ===
v73 
=== Predecessor ===
i113 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v117 lastLocationAccess: - #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.hashCode(String.java:2369) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i71 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i114 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.hashCode(String.java:2369) [bci: 17]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
i114 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v85 #falseSuccessor: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 13]
at java.lang.String.hashCode(String.java:2369) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
areKeysContiguous: true
keySuccessors: [I@50fead2a
keys: [I@3a19373c
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 2]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
profileData: PROFILED keyProbabilities: [0.0, 0.0, 1.0]
stamp: void
=== Inputs ===
value: i113 
=== Succesors ===
successors: v43 v45 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@IntegerSwitch|@jdk.graal.compiler.nodes.extended.IntegerSwitchNode>@ value: i113 #successors: v43 v45  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:191) [bci: 42]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j108 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j108  <|@  <|@
f <@~|@floating>@ <|@
tid a64 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.hashCode(String.java:2369) [bci: 24]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a112 
=== Succesors ===
=== Usages ===
j108 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedHashCode(Object, int, int, int, int) [bci: -1]
at java.lang.StringLatin1.hashCode(StringLatin1.java:191) [bci: 48]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: i64
=== Inputs ===
object: a64 
=== Succesors ===
next: i48 
=== Usages ===
j109 
=== Predecessor ===
v43 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a64 #next: i48  <|@  <|@
f <@~|@floating>@ <|@
tid j46 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedHashCode(Object, int, int, int, int) [bci: -1]
at java.lang.StringLatin1.hashCode(StringLatin1.java:191) [bci: 48]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedHashCode(Object, int, int, int, int) [bci: -1]
at java.lang.StringLatin1.hashCode(StringLatin1.java:191) [bci: 48]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: i64
=== Inputs ===
x: j108 
y: j46 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j108 y: j46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
arrayKind: boolean
locationIdentity: Array: boolean
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedHashCode(Object, int, int, int, int) [bci: -1]
at java.lang.StringLatin1.hashCode(StringLatin1.java:191) [bci: 48]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
runtimeCheckedCPUFeatures: [null]
stamp: i32
=== Inputs ===
lastLocationAccess: - 
arrayStart: j109 
length: i113 
initialValue: i4 
=== Succesors ===
next: v91 
=== Usages ===
i32 v70 v27 
=== Predecessor ===
j108 >@ <|@
instruction <@VectorizedHashCode|@jdk.graal.compiler.replacements.nodes.VectorizedHashCodeNode>@ lastLocationAccess: - arrayStart: j109 length: i113 initialValue: i4 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.hashCode(String.java:2371) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i4 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i48 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2371) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
i48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v89 #falseSuccessor: v90  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2371) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: -22547
stableDimension: 0
stamp: i32 [-22547]
stampKind: i32
value: int[-22547|0xffffffffffffa7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2374) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: String.hash
location: String.hash
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.hashCode(String.java:2374) [bci: 55]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v115 
lastLocationAccess: - 
value: i48 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v115 lastLocationAccess: - value: i48 stateAfter: - #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 2]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid j107 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: -11283
stableDimension: 0
stamp: i32 [-11283]
stampKind: i32
value: int[-11283|0xffffffffffffd3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v45 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.hashCode(String.java:2369) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid j104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: -21523
stableDimension: 0
stamp: i32 [-21523]
stampKind: i32
value: int[-21523|0xffffffffffffabed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: i32 [-22547 - -11283] bits:1...1xxxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v92 
values: i100 i103 i106 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v92 values: i100 i103 i106  <|@  <|@
f <@~|@floating>@ <|@
tid j97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: i64 [660 - 1940] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v92 
values: j101 j104 j107 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v92 values: j101 j104 j107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v99 v102 v105 
=== Succesors ===
next: v98 
=== Usages ===
i96 j97 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v99 v102 v105 #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i96 
speculation: j97 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i96 speculation: j97  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v13  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
v15 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
v6 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v12 
values: i110 i110 i48 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v12 values: i110 i110 i48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v11 v13 v31 
=== Succesors ===
next: v34 
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v11 v13 v31 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 59]
stamp: void
=== Inputs ===
memoryMap: - 
result: i32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i32  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = LEA address: [v5|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-11283|0xffffffffffffd3ed], long[1940|0x794]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-21523|0xffffffffffffabed], long[1300|0x514]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22547|0xffffffffffffa7ed], long[660|0x294]] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i110 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i110  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v115 v116 v118 v117 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i110 v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i110 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.hash
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.hashCode(String.java:2367) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v115 
lastLocationAccess: - 
=== Succesors ===
next: v8 
=== Usages ===
v5 i32 i32 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v115 lastLocationAccess: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 i48 v27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i110 
y: i4 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i110 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 6]
profileData: PROFILED designatedSuccessorProbability: 0.1507280759162304
stamp: void
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v6 
=== Usages ===
=== Predecessor ===
i110 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v7 #falseSuccessor: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i111 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i111  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
result [v0|QWORD[.] + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.hashIsZero
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 10]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v116 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
v72 
=== Predecessor ===
v7 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v116 lastLocationAccess: - #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 v73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i71 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i111 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2368) [bci: 13]
profileData: PROFILED designatedSuccessorProbability: 0.9617367706919946
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
i111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2369) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a112 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a112  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a112 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.hashCode(String.java:2369) [bci: 24]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v118 
lastLocationAccess: - 
=== Succesors ===
next: i113 
=== Usages ===
a64 v119 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v118 lastLocationAccess: - #next: i113  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.hashCode()>
localsSize: 2
locksSize: 0
sourceFile: String.java
sourceLine: 2367
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v98 i113 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a112 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i113 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-16907|0xffffffffffffbdf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v119 
lastLocationAccess: - 
=== Succesors ===
next: i114 
=== Usages ===
v42 i48 
=== Predecessor ===
a112 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v119 lastLocationAccess: - #next: i114  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.hashCode(String.java:2369) [bci: 17]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v117 
lastLocationAccess: - 
=== Succesors ===
next: v87 
=== Usages ===
v73 
=== Predecessor ===
i113 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v117 lastLocationAccess: - #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.hashCode(String.java:2369) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i71 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i114 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.hashCode(String.java:2369) [bci: 17]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
i114 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v85 #falseSuccessor: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 13]
at java.lang.String.hashCode(String.java:2369) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
areKeysContiguous: true
keySuccessors: [I@50fead2a
keys: [I@3a19373c
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 2]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
profileData: PROFILED keyProbabilities: [0.0, 0.0, 1.0]
stamp: void
=== Inputs ===
value: i113 
=== Succesors ===
successors: v43 v45 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@IntegerSwitch|@jdk.graal.compiler.nodes.extended.IntegerSwitchNode>@ value: i113 #successors: v43 v45  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:191) [bci: 42]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j108 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j108  <|@  <|@
f <@~|@floating>@ <|@
tid a64 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.hashCode(String.java:2369) [bci: 24]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a112 
=== Succesors ===
=== Usages ===
j108 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j108 <|@
result v5|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedHashCode(Object, int, int, int, int) [bci: -1]
at java.lang.StringLatin1.hashCode(StringLatin1.java:191) [bci: 48]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: i64
=== Inputs ===
object: a64 
=== Succesors ===
next: i48 
=== Usages ===
j109 
=== Predecessor ===
v43 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a64 #next: i48  <|@  <|@
f <@~|@floating>@ <|@
tid j46 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedHashCode(Object, int, int, int, int) [bci: -1]
at java.lang.StringLatin1.hashCode(StringLatin1.java:191) [bci: 48]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j109 <|@
result v6|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedHashCode(Object, int, int, int, int) [bci: -1]
at java.lang.StringLatin1.hashCode(StringLatin1.java:191) [bci: 48]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: i64
=== Inputs ===
x: j108 
y: j46 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j108 y: j46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i48 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
arrayKind: boolean
locationIdentity: Array: boolean
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedHashCode(Object, int, int, int, int) [bci: -1]
at java.lang.StringLatin1.hashCode(StringLatin1.java:191) [bci: 48]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
runtimeCheckedCPUFeatures: [null]
stamp: i32
=== Inputs ===
lastLocationAccess: - 
arrayStart: j109 
length: i113 
initialValue: i4 
=== Succesors ===
next: v91 
=== Usages ===
i32 v70 v27 
=== Predecessor ===
j108 >@ <|@
instruction <@VectorizedHashCode|@jdk.graal.compiler.replacements.nodes.VectorizedHashCodeNode>@ lastLocationAccess: - arrayStart: j109 length: i113 initialValue: i4 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.hashCode(String.java:2371) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i4 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i48 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2371) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
i48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v89 #falseSuccessor: v90  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = LEA address: [v5|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2371) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
result int[-22547|0xffffffffffffa7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: -22547
stableDimension: 0
stamp: i32 [-22547]
stampKind: i32
value: int[-22547|0xffffffffffffa7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22547|0xffffffffffffa7ed], long[660|0x294]] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2374) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: String.hash
location: String.hash
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.hashCode(String.java:2374) [bci: 55]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v115 
lastLocationAccess: - 
value: i48 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v115 lastLocationAccess: - value: i48 stateAfter: - #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 2]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid j107 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result int[-11283|0xffffffffffffd3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: -11283
stableDimension: 0
stamp: i32 [-11283]
stampKind: i32
value: int[-11283|0xffffffffffffd3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v45 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-11283|0xffffffffffffd3ed], long[1940|0x794]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.hashCode(String.java:2369) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid j104 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result int[-21523|0xffffffffffffabed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
rawvalue: -21523
stableDimension: 0
stamp: i32 [-21523]
stampKind: i32
value: int[-21523|0xffffffffffffabed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-21523|0xffffffffffffabed], long[1300|0x514]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i96 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: i32 [-22547 - -11283] bits:1...1xxxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v92 
values: i100 i103 i106 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v92 values: i100 i103 i106  <|@  <|@
f <@~|@floating>@ <|@
tid j97 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: i64 [660 - 1940] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v92 
values: j101 j104 j107 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v92 values: j101 j104 j107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v99 v102 v105 
=== Succesors ===
next: v98 
=== Usages ===
i96 j97 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v99 v102 v105 #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.hashCode(StringLatin1.java:188) [bci: 1]
at java.lang.String.hashCode(String.java:2369) [bci: 27]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i96 
speculation: j97 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i96 speculation: j97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v13  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
v15 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
v6 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i32 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v12 
values: i110 i110 i48 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v12 values: i110 i110 i48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v11 v13 v31 
=== Succesors ===
next: v34 
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v11 v13 v31 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:2377) [bci: 59]
stamp: void
=== Inputs ===
memoryMap: - 
result: i32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = LEA address: [v5|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-11283|0xffffffffffffd3ed], long[1940|0x794]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-21523|0xffffffffffffabed], long[1300|0x514]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22547|0xffffffffffffa7ed], long[660|0x294]] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = LEA address: [v5|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-11283|0xffffffffffffd3ed], long[1940|0x794]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-21523|0xffffffffffffabed], long[1300|0x514]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22547|0xffffffffffffa7ed], long[660|0x294]] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = LEA address: [v5|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-11283|0xffffffffffffd3ed], long[1940|0x794]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-21523|0xffffffffffffabed], long[1300|0x514]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22547|0xffffffffffffa7ed], long[660|0x294]] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = LEA address: [v5|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-11283|0xffffffffffffd3ed], long[1940|0x794]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-21523|0xffffffffffffabed], long[1300|0x514]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22547|0xffffffffffffa7ed], long[660|0x294]] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction v5|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v6|QWORD[*] = LEA address: [v5|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   48  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [int[-11283|0xffffffffffffd3ed], long[1940|0x794]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [int[-21523|0xffffffffffffabed], long[1300|0x514]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [int[-22547|0xffffffffffffa7ed], long[660|0x294]] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [v8|DWORD, v9|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v9|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction v5|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v6|QWORD[*] = LEA address: [v5|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   48  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [int[-11283|0xffffffffffffd3ed], long[1940|0x794]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [int[-21523|0xffffffffffffabed], long[1300|0x514]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [int[-22547|0xffffffffffffa7ed], long[660|0x294]] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [v8|DWORD, v9|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v9|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v10|d [0, 1[[46, 48[[60, 62[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 1[[44, 46[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d v3|d [0, 1[[42, 46[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v6|q [0, 6[[40, 46[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 12[[16, 54[[68, 87[6 MustHaveRegister 8 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister 26 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d v10|d [8, 15[[16, 20[[64, 67[8 MustHaveRegister 10 MustHaveRegister 14 ShouldHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [22, 34[22 MustHaveRegister 24 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [24, 42[24 MustHaveRegister 30 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v2|d [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v4|q [36, 38[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [38, 40[38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d rax|d [48, 57[48 MustHaveRegister 50 MustHaveRegister 54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [80, 82[82 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [80, 84[84 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v1|d [58, 60[60 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v10|d [0, 1[[46, 48[[60, 62[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 1[[44, 46[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d v3|d [0, 1[[42, 46[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v6|q [0, 6[[40, 46[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  v0|q QWORD "[rdi|q]" v0|q rsi|q [6, 12[[16, 54[[68, 87[6 MustHaveRegister 8 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister 26 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d v10|d [8, 15[[16, 20[[64, 67[8 MustHaveRegister 10 MustHaveRegister 14 ShouldHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rsi|d]" v2|d -1 [22, 34[22 MustHaveRegister 24 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rdx|d]" v3|d -1 [24, 42[24 MustHaveRegister 30 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q v2|d [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rsi|q]" v5|q v4|q [36, 38[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [38, 40[38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d rax|d [48, 57[48 MustHaveRegister 50 MustHaveRegister 54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [80, 82[82 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q -1 [80, 84[84 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d v1|d [58, 60[60 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction v5|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v6|QWORD[*] = LEA address: [v5|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   48  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [int[-11283|0xffffffffffffd3ed], long[1940|0x794]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [int[-21523|0xffffffffffffabed], long[1300|0x514]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [int[-22547|0xffffffffffffa7ed], long[660|0x294]] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [v8|DWORD, v9|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v9|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v10|d [0, 1[[46, 48[[60, 62[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 1[[44, 46[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d v3|d [0, 1[[42, 46[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v6|q [0, 6[[40, 46[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  v0|q QWORD "[rdi|q]" v0|q rsi|q [6, 12[[16, 54[[68, 87[6 MustHaveRegister 8 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister 26 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d v10|d [8, 15[[16, 20[[64, 67[8 MustHaveRegister 10 MustHaveRegister 14 ShouldHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rsi|d]" v2|d -1 [22, 34[22 MustHaveRegister 24 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rdx|d]" v3|d -1 [24, 42[24 MustHaveRegister 30 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q v2|d [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rsi|q]" v5|q v4|q [36, 38[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [38, 40[38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d rax|d [48, 57[48 MustHaveRegister 50 MustHaveRegister 54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [80, 82[82 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q -1 [80, 84[84 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d v1|d [58, 60[60 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction v5|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v6|QWORD[*] = LEA address: [v5|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   48  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [int[-11283|0xffffffffffffd3ed], long[1940|0x794]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [int[-21523|0xffffffffffffabed], long[1300|0x514]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [int[-22547|0xffffffffffffa7ed], long[660|0x294]] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [v8|DWORD, v9|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v9|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v10|d [0, 1[[46, 48[[60, 62[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 1[[44, 46[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d v3|d [0, 1[[42, 46[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v6|q [0, 6[[40, 46[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[46, 47[ "NoDefinitionFound"
  v0|q QWORD "[rdi|q]" v0|q rsi|q [6, 12[[16, 54[[68, 87[6 MustHaveRegister 8 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister 26 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d v10|d [8, 15[[16, 20[[64, 67[8 MustHaveRegister 10 MustHaveRegister 14 ShouldHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rsi|d]" v2|d -1 [22, 34[22 MustHaveRegister 24 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rdx|d]" v3|d -1 [24, 42[24 MustHaveRegister 30 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q v2|d [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rsi|q]" v5|q v4|q [36, 38[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [38, 40[38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d rax|d [48, 57[48 MustHaveRegister 50 MustHaveRegister 54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [80, 82[82 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q -1 [80, 84[84 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d v1|d [58, 60[60 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction v5|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v6|QWORD[*] = LEA address: [v5|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   48  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [v8|DWORD, v9|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v9|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction v5|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v6|QWORD[*] = LEA address: [v5|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   48  <|@ instruction v7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v9|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605824780986956194
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4573299315844355611
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" "B1" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" "B1" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" "B1" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" "B1" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" "B1" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rsi:0, rdi:0]
live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rdi:0]
live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" "B1" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4594598571542780280
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rsi:0, rdi:0]
live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594390781114946759
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rdi:0]
live-base-pointers: []
java.lang.String.hashCode(String.java:2367) [bci: 0]
locals: rdi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          58
     9: aload_0       
    10: getfield      #4          // hashIsZero:boolean
    13: ifne          58
    16: aload_0       
    17: invokevirtual #122        // isLatin1:()boolean
    20: ifeq          33
    23: aload_0       
    24: getfield      #1          // value:byte[]
    27: invokestatic  #166        // java.lang.StringLatin1.hashCode:(byte[])int
    30: goto          40
    33: aload_0       
    34: getfield      #1          // value:byte[]
    37: invokestatic  #167        // java.lang.StringUTF16.hashCode:(byte[])int
    40: istore_1      
    41: iload_1       
    42: ifne          53
    45: aload_0       
    46: iconst_1      
    47: putfield      #4          // hashIsZero:boolean
    50: goto          58
    53: aload_0       
    54: iload_1       
    55: putfield      #3          // hash:int
    58: iload_1       
    59: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000738a7f00004d03d44d33e4493bc20f85e3ffffff89842400c0feff4883ec1841817f20000000000f85cf00000048896c2410488bfe448b570c4585d20f8426000000418bc2488b6c24104883c418660f1f840000000000493ba7500400000f87a8000000c5f877c3807f110075d48b77148b14f50c000000807f10000f853400000083fa000f845300000083fa010f844a00000048c1e603488d7610b900000000e80000000085c00f843f00000089470c448bd0eb8c49c7c31405000041baedabffff458997840400004d899f90040000e8000000000f1f84000000000049c7c39407000041baedd3ffffebd649c7c39402000041baeda7ffffebc748896c2410e800000000e922fffffff4488d0d44ffffff49898f68040000e9d8fefffff441c78784040000f5bdffff49c787900400000000000090e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD  <||@
  Comment 59 6 rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 62 8 r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD  <||@
  Comment 66 10 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 size: DWORD  <||@
  Comment 75 block B12 null  <||@
  Comment 75 58 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 75 60 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 78 62 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 96 POLL_RETURN_FAR  <||@
  Comment 113 block B1 null  <||@
  Comment 113 16 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 113 18 CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: 0 size: BYTE inlinedY: null  <||@
  Comment 119 block B2 null  <||@
  Comment 119 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 22 rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD  <||@
  Comment 122 24 rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 122 [rsi:0, rdi:0]at java.lang.String.hashCode(String.java:2367) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |-   <||@
  Comment 122 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 129 26 CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null  <||@
  Comment 139 block B3 null  <||@
  Comment 139 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 139 30 AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0]  <||@
  Comment 157 block B4 null  <||@
  Comment 157 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 157 34 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3  <||@
  Comment 161 36 rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 161 38 rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 165 40 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 165 44 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 170 46 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL  <||@
  Comment 170 {Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 175 50 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 183 block B6 null  <||@
  Comment 183 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 183 54 MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 186 -1 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 189 56 JUMP ~outgoingValues: [] destination: B6 -> B12  <||@
  Comment 191 block B8 null  <||@
  Comment 191 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 191 -1 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 198 -1 r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed]  <||@
  Comment 204 74 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 204 block B9 null  <||@
  Comment 204 80 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 204 82 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 211 84 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 218 86 DEOPT info [bci:0]  <||@
  Comment 218 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 223 [rdi:0]at java.lang.String.hashCode(String.java:2367) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |-   <||@
  Comment 231 block B7 null  <||@
  Comment 231 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 231 -1 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 238 -1 r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed]  <||@
  Comment 244 70 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 246 block B5 null  <||@
  Comment 246 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 246 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 253 -1 r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed]  <||@
  Comment 259 78 JUMP ~outgoingValues: [] destination: B5 -> B9  <||@
  Comment 266 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 291 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 320 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 325 [rsi:0, rdi:0]at java.lang.String.hashCode(String.java:2367) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |-   <||@
  Comment 333 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 333 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 339 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 339 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-28[java.lang.String.hashCode()]"
  method "HotSpotCompilation-28[java.lang.String.hashCode()]"
  date 1740398974045
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0b4900 448b560849bc000000738a7f00004d03d44d33e4493bc20f856397f9ff89842400c0feff4883ec1841817f20000000000f85cf00000048896c2410488bfe448b570c4585d20f8426000000418bc2488b6c24104883c418660f1f840000000000493ba7500400000f87a8000000c5f877c3807f110075d48b77148b14f50c000000807f10000f853400000083fa000f845300000083fa010f844a00000048c1e603488d7610b900000000e8f1f8ffff85c00f843f00000089470c448bd0eb8c49c7c31405000041baedabffff458997840400004d899f90040000e89bf7f9ff0f1f84000000000049c7c39407000041baedd3ffffebd649c7c39402000041baeda7ffffebc748896c2410e811f8f7ffe922fffffff4488d0d44ffffff49898f68040000e9d805fafff441c78784040000f5bdffff49c787900400000000000090e835f7f9ff0f1f840000000000e8aefafffff4e8c8f4f9fff4f4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd87bd9 slotKind: QWORD  <||@
  Comment 59 6 rdi|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 62 8 r10|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD  <||@
  Comment 66 10 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.1507280759162304 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 size: DWORD  <||@
  Comment 75 block B12 null  <||@
  Comment 75 58 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 75 60 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 78 62 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 96 POLL_RETURN_FAR  <||@
  Comment 113 block B1 null  <||@
  Comment 113 16 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 113 18 CMPCONSTBRANCH x: [rdi|QWORD[.] + 17] trueDestinationProbability: 0.9617367706919946 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B12 y: 0 size: BYTE inlinedY: null  <||@
  Comment 119 block B2 null  <||@
  Comment 119 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 22 rsi|DWORD[_] = MOV input: [rdi|QWORD[.] + 20] size: DWORD  <||@
  Comment 122 24 rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 122 [rsi:0, rdi:0]at java.lang.String.hashCode(String.java:2367) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |-   <||@
  Comment 122 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 129 26 CMPCONSTBRANCH x: [rdi|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 y: 0 size: BYTE inlinedY: null  <||@
  Comment 139 block B3 null  <||@
  Comment 139 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 139 30 AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|DWORD scratch: - keyConstants: [int[0|0x0], int[1|0x1]] keyTargets: [B3 -> B7, B3 -> B7] defaultTarget: B3 -> B4 strategy: SequentialStrategy[avgEffort=2.0]  <||@
  Comment 157 block B4 null  <||@
  Comment 157 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 157 34 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@778b6b8c encoding: base: 0 shift: 3  <||@
  Comment 161 36 rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 161 38 rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 165 40 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 165 44 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 170 46 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, rbx|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL  <||@
  Comment 170 {Stub<IntrinsicStubsGen.vectorizedHashCodeBoolean>@0x7f8acf0b42a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,rbx|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 175 50 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 183 block B6 null  <||@
  Comment 183 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 183 54 MOV (x: [rdi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 186 -1 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 189 56 JUMP ~outgoingValues: [] destination: B6 -> B12  <||@
  Comment 191 block B8 null  <||@
  Comment 191 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 191 -1 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 198 -1 r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed]  <||@
  Comment 204 74 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 204 block B9 null  <||@
  Comment 204 80 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 204 82 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 211 84 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 218 86 DEOPT info [bci:0]  <||@
  Comment 218 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 223 [rdi:0]at java.lang.String.hashCode(String.java:2367) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |-   <||@
  Comment 231 block B7 null  <||@
  Comment 231 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 231 -1 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 238 -1 r10|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed]  <||@
  Comment 244 70 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 246 block B5 null  <||@
  Comment 246 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 246 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 253 -1 r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed]  <||@
  Comment 259 78 JUMP ~outgoingValues: [] destination: B5 -> B9  <||@
  Comment 266 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 291 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 320 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 325 [rsi:0, rdi:0]at java.lang.String.hashCode(String.java:2367) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |-   <||@
  Comment 333 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 333 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 339 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 339 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
