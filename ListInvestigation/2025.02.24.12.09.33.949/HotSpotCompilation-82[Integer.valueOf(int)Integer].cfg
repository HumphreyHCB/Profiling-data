begin_compilation
  name " HotSpotCompilation-82[java.lang.Integer.valueOf(int)]"
  method "HotSpotCompilation-82[java.lang.Integer.valueOf(int)]"
  date 1740398976861
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 i11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1071) [bci: 10]
rawvalue: 128
stableDimension: 0
stamp: i32 [128]
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 20]
stamp: i32
=== Inputs ===
x: i1 
y: i7 
=== Succesors ===
=== Usages ===
j26 v15 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
rawvalue: 256
stableDimension: 0
stamp: i32 [256]
stampKind: i32
value: int[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i14 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i11 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v28 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a44 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a44  <|@  <|@
f <@~|@floating>@ <|@
tid a10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 13]
rawvalue: Instance<java.lang.Integer[]>
stableDimension: 1
stamp: a!# java.lang.Integer[]
stampKind: a java.lang.Object
value: Object[Instance<java.lang.Integer[]>]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j26 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i11 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a10 
index: j26 
=== Succesors ===
=== Usages ===
a44 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a10 index: j26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a44 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v47 
lastLocationAccess: - 
=== Succesors ===
next: v13 
=== Usages ===
a25 
=== Predecessor ===
v28 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v47 lastLocationAccess: - #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid a25 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a44 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a44  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 22]
stamp: void
=== Inputs ===
memoryMap: - 
result: a25 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a44 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a25  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_0
code: ResolvedJavaMethodBytecode<Integer.valueOf(int)>
localsSize: 1
locksSize: 0
sourceFile: Integer.java
sourceLine: 1071
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 16
mayConvertToGuard: true
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@35835e65
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = LEA address: [v0|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v2|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 i11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1071) [bci: 10]
rawvalue: 128
stableDimension: 0
stamp: i32 [128]
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 20]
stamp: i32
=== Inputs ===
x: i1 
y: i7 
=== Succesors ===
=== Usages ===
j26 v15 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[256|0x100] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
rawvalue: 256
stableDimension: 0
stamp: i32 [256]
stampKind: i32
value: int[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i14 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i11 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v28 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = LEA address: [v0|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a44 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a44  <|@  <|@
f <@~|@floating>@ <|@
tid a10 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 13]
rawvalue: Instance<java.lang.Integer[]>
stableDimension: 1
stamp: a!# java.lang.Integer[]
stampKind: a java.lang.Object
value: Object[Instance<java.lang.Integer[]>]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j26 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i11 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
result [v2|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a10 
index: j26 
=== Succesors ===
=== Usages ===
a44 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a10 index: j26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a44 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v47 
lastLocationAccess: - 
=== Succesors ===
next: v13 
=== Usages ===
a25 
=== Predecessor ===
v28 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v47 lastLocationAccess: - #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid a25 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a44 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a44  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 22]
stamp: void
=== Inputs ===
memoryMap: - 
result: a25 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a44 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a25  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v2|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_0
code: ResolvedJavaMethodBytecode<Integer.valueOf(int)>
localsSize: 1
locksSize: 0
sourceFile: Integer.java
sourceLine: 1071
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 16
mayConvertToGuard: true
nodeSourcePosition: at java.lang.Integer.valueOf(Integer.java:1072) [bci: 21]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@35835e65
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = LEA address: [v0|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v2|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = LEA address: [v0|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v2|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = LEA address: [v0|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v2|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = LEA address: [v0|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v2|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = LEA address: [v0|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction v3|DWORD[_] = MOV input: [v2|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = LEA address: [v0|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction v3|DWORD[_] = MOV input: [v2|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v4|q [0, 1[[20, 22[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  v0|d DWORD "[v0|d]" v0|d rsi|d [6, 12[[24, 31[6 MustHaveRegister 8 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [8, 16[8 MustHaveRegister 10 ShouldHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [16, 18[16 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|d [18, 20[18 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v4|q [0, 1[[20, 22[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [6, 12[[24, 31[6 MustHaveRegister 8 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [8, 16[8 MustHaveRegister 10 ShouldHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[r10|q]" v2|q -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [16, 18[16 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [18, 20[18 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = LEA address: [v0|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction v3|DWORD[_] = MOV input: [v2|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v4|q [0, 1[[20, 22[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [6, 12[[24, 31[6 MustHaveRegister 8 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [8, 16[8 MustHaveRegister 10 ShouldHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[r10|q]" v2|q -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [16, 18[16 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [18, 20[18 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = LEA address: [v0|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction v3|DWORD[_] = MOV input: [v2|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v4|q [0, 1[[20, 22[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 6[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [6, 12[[24, 31[6 MustHaveRegister 8 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [8, 16[8 MustHaveRegister 10 ShouldHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[r10|q]" v2|q -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [16, 18[16 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [18, 20[18 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = LEA address: [v0|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction v3|DWORD[_] = MOV input: [v2|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = LEA address: [v0|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction v3|DWORD[_] = MOV input: [v2|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.valueOf(Integer.java:1071) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: bipush        -128
     3: if_icmplt     23
     6: iload_0       
     7: getstatic     #42         // java.lang.Integer$IntegerCache.high:int
    10: if_icmpgt     23
    13: getstatic     #43         // java.lang.Integer$IntegerCache.cache:java.lang.Integer[]
    16: iload_0       
    17: sipush        128
    20: iadd          
    21: aaload        
    22: areturn       
    23: new           #1          // java.lang.Integer
    26: dup           
    27: iload_0       
    28: invokespecial #44         // <init>:(int)void
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f856400000048896c24108d868000000081f8000100000f832a00000049baaddeaddeaddeadde418b44821048c1e003488b6c24104883c418493ba7500400000f8731000000c341c78784040000e5efffff49c7879004000000000000e8000000000f1f84000000000048896c2410e800000000eb90f4488d0dbbffffff49898f68040000e962fffffff490e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD  <||@
  Comment 31 8 rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD  <||@
  Comment 37 10 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null  <||@
  Comment 49 block B1 null  <||@
  Comment 49 12 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 49 14 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>]  <||@
  Comment 49 {Object[Instance<java.lang.Integer[]>]}  <||@
  Comment 59 16 rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 64 18 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3  <||@
  Comment 68 22 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 77 POLL_RETURN_FAR  <||@
  Comment 91 block B2 null  <||@
  Comment 91 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 91 26 MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD  <||@
  Comment 102 28 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 113 30 DEOPT info [bci:0]  <||@
  Comment 113 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 118 []at java.lang.Integer.valueOf(Integer.java:1071) [bci: 0, duringCall: false, rethrow: false]
              |0         
     locals:  |rsi|DWORD   <||@
  Comment 131 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 153 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 160 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 160 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 166 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 166 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-82[java.lang.Integer.valueOf(int)]"
  method "HotSpotCompilation-82[java.lang.Integer.valueOf(int)]"
  date 1740398976890
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0c2780 89842400c0feff4883ec189041817f20000000000f856400000048896c24108d868000000081f8000100000f832a00000049baf8e3ecff07000000418b44821048c1e003488b6c24104883c418493ba7500400000f8731000000c341c78784040000e5efffff49c7879004000000000000e88419f9ff0f1f84000000000048896c2410e8181af7ffeb90f4488d0dbbffffff49898f68040000e9e227f9fff490e8db1cfffff4e8f516f9fff4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4bb27bbf slotKind: QWORD  <||@
  Comment 31 8 rax|DWORD = LEA address: [rsi|DWORD + 128] size: DWORD  <||@
  Comment 37 10 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 256 size: DWORD inlinedY: null  <||@
  Comment 49 block B1 null  <||@
  Comment 49 12 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 49 14 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>]  <||@
  Comment 49 {Object[Instance<java.lang.Integer[]>]}  <||@
  Comment 59 16 rax|DWORD[_] = MOV input: [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 64 18 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@28a63866 encoding: base: 0 shift: 3  <||@
  Comment 68 22 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 77 POLL_RETURN_FAR  <||@
  Comment 91 block B2 null  <||@
  Comment 91 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 91 26 MOV x: [r15|QWORD + 1156] y: -4123 size: DWORD  <||@
  Comment 102 28 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 113 30 DEOPT info [bci:0]  <||@
  Comment 113 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 118 []at java.lang.Integer.valueOf(Integer.java:1071) [bci: 0, duringCall: false, rethrow: false]
              |0         
     locals:  |rsi|DWORD   <||@
  Comment 131 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 153 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 160 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 160 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 166 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 166 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
