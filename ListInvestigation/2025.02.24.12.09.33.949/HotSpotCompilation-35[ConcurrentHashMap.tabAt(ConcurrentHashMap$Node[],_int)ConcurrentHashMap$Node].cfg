begin_compilation
  name " HotSpotCompilation-35[java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap$Node[], int)]"
  method "HotSpotCompilation-35[java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap$Node[], int)]"
  date 1740398974196
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a19 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a19  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.util.concurrent.ConcurrentHashMap$Node[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:760) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1 
index: j5 
=== Succesors ===
=== Usages ===
a19 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a19 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.ConcurrentHashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: Object
memoryOrder: ACQUIRE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getReferenceAcquire(Object, long) [bci: -1]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:760) [bci: 15]
stamp: n java.util.concurrent.ConcurrentHashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v23 
lastLocationAccess: - 
=== Succesors ===
next: v15 
=== Usages ===
a20 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v23 lastLocationAccess: - #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid a20 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.Unsafe.getReferenceAcquire(Object, long) [bci: -1]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:760) [bci: 15]
op: Uncompress
stamp: a java.util.concurrent.ConcurrentHashMap$Node
=== Inputs ===
value: a19 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a19  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:760) [bci: 21]
stamp: void
=== Inputs ===
memoryMap: - 
result: a20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a19 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a20  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v5|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a19 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a19  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.util.concurrent.ConcurrentHashMap$Node[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:760) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
result [v0|QWORD[.] + v2|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1 
index: j5 
=== Succesors ===
=== Usages ===
a19 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a19 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.ConcurrentHashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: Object
memoryOrder: ACQUIRE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getReferenceAcquire(Object, long) [bci: -1]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:760) [bci: 15]
stamp: n java.util.concurrent.ConcurrentHashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v23 
lastLocationAccess: - 
=== Succesors ===
next: v15 
=== Usages ===
a20 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v23 lastLocationAccess: - #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid a20 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.Unsafe.getReferenceAcquire(Object, long) [bci: -1]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:760) [bci: 15]
op: Uncompress
stamp: a java.util.concurrent.ConcurrentHashMap$Node
=== Inputs ===
value: a19 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a19  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:760) [bci: 21]
stamp: void
=== Inputs ===
memoryMap: - 
result: a20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a19 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v5|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v5|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v5|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v5|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v5|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v5|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: v5|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v5|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: v5|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v4|q [0, 1[[16, 18[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 12[6 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 10[8 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|d [14, 16[14 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q rbp|q [2, 18[2 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v4|q [0, 1[[16, 18[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 12[6 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 10[8 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [14, 16[14 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbp|q]" v5|q rbp|q [2, 18[2 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v5|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: v5|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v4|q [0, 1[[16, 18[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 12[6 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 10[8 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [14, 16[14 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbp|q]" v5|q rbp|q [2, 18[2 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v5|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: v5|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v4|q [0, 1[[16, 18[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 12[6 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 10[8 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [14, 16[14 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbp|q]" v5|q rbp|q [2, 18[2 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v5|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: v5|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v5|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: v5|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #6          // U:jdk.internal.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #7          // ASHIFT:int
     9: lshl          
    10: getstatic     #8          // ABASE:int
    13: i2l           
    14: ladd          
    15: invokevirtual #9          // jdk.internal.misc.Unsafe.getReferenceAcquire:(java.lang.Object, long)java.lang.Object
    18: checkcast     #57         // java.util.concurrent.ConcurrentHashMap$Node
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f851d0000004863c28b44861048c1e0034883c418493ba7500400000f870e000000c348896c2410e800000000ebd7f4488d0ddeffffff49898f68040000e9a9fffffff4e800000000f46690e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD  <||@
  Comment 26 10 rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD  <||@
  Comment 29 12 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD  <||@
  Comment 33 14 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3  <||@
  Comment 37 18 RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 41 POLL_RETURN_FAR  <||@
  Comment 60 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 82 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 88 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 88 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 96 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 96 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-35[java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap$Node[], int)]"
  method "HotSpotCompilation-35[java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap$Node[], int)]"
  date 1740398974211
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0b5f80 89842400c0feff4883ec189041817f20000000000f851d0000004863c28b44861048c1e0034883c418493ba7500400000f870e000000c348896c2410e85fe2f7ffebd7f4488d0ddeffffff49898f68040000e929f0f9fff4e823e5fffff46690e83bdff9fff4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2e87f48a slotKind: QWORD  <||@
  Comment 26 10 rax|QWORD = MOVSXD value: rdx|DWORD size: QWORD  <||@
  Comment 29 12 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD  <||@
  Comment 33 14 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7250b472 encoding: base: 0 shift: 3  <||@
  Comment 37 18 RETURN (savedRbp: rbp|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 41 POLL_RETURN_FAR  <||@
  Comment 60 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 82 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 88 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 88 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 96 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 96 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
