begin_compilation
  name " HotSpotCompilation-84[List.benchmark()]"
  method "HotSpotCompilation-84[List.benchmark()]"
  date 1740398977111
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a5 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a5  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# List
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?706 v398 v516 ?707 v399 ?707 ?708 v400 ?691 ?260 ?27 ?27 ?32 ?32 ?691 ?63 v431 ?692 ?692 v436 ?693 ?694 v441 ?694 v442 ?108 ?109 ?109 v459 ?695 ?695 v464 ?696 ?698 v467 ?698 v468 ?158 ?159 ?159 v485 ?699 ?699 v488 ?700 ?702 v491 ?702 v492 ?208 ?209 v505 ?703 ?703 v510 ?704 ?706 v515 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.benchmark() [bci: 2]
rawvalue: 15
stableDimension: 0
stamp: i32 [15]
stampKind: i32
value: int[15|0xf]
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.benchmark() [bci: 4]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<List.makeList(int)>
=== Inputs ===
arguments: a1 i3 
=== Succesors ===
=== Usages ===
a5 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3  <|@  <|@
tid ?691 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1 
=== Succesors ===
=== Usages ===
a5 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.benchmark() [bci: 4]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.makeList
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v398 
stateDuring: ?691 
=== Succesors ===
next: a9 
=== Usages ===
a188 ?702 ?703 ?208 v23 v847 ?27 ?32 ?692 ?63 ?109 v459 ?693 v464 ?698 v491 ?158 ?159 a162 v485 ?699 
=== Predecessor ===
v0 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v398 stateDuring: ?691 #next: a9  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.benchmark() [bci: 8]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.benchmark() [bci: 10]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<List.makeList(int)>
=== Inputs ===
arguments: a1 i7 
=== Succesors ===
=== Usages ===
a9 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i7  <|@  <|@
tid ?692 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a5 a1 
=== Succesors ===
=== Usages ===
a9 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a5 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a9 <|@
d <@d|@=== Debug Properties ===
bci: 10
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.benchmark() [bci: 10]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.makeList
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v399 
stateDuring: ?692 
=== Succesors ===
next: a13 
=== Usages ===
?208 ?702 a212 ?695 v28 v488 ?32 v846 ?63 v431 ?703 v841 ?693 v441 a88 ?108 ?109 ?159 v485 ?694 
=== Predecessor ===
a5 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v399 stateDuring: ?692 #next: a13  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.benchmark() [bci: 14]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.benchmark() [bci: 16]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<List.makeList(int)>
=== Inputs ===
arguments: a1 i11 
=== Succesors ===
=== Usages ===
a13 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i11  <|@  <|@
tid ?693 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a5 a9 
=== Succesors ===
=== Usages ===
a13 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a5 a9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a13 <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.benchmark() [bci: 16]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.makeList
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v400 
stateDuring: ?693 
=== Succesors ===
next: v366 
=== Usages ===
?698 ?159 ?27 ?158 v843 a138 a269 ?63 v431 a269 v436 ?699 v853 ?108 ?109 a112 v459 ?695 v842 ?694 v467 
=== Predecessor ===
a9 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v400 stateDuring: ?693 #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a5 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a5  <|@  <|@
f <@~|@floating>@ <|@
tid a834 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?27 ?32 ?17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
a13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v365 #falseSuccessor: v364  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a801 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a801  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
a801 a820 a815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a801 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v847 
lastLocationAccess: - 
=== Succesors ===
next: v370 
=== Usages ===
a407 v852 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v847 lastLocationAccess: - #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid a407 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a801 
=== Succesors ===
=== Usages ===
a396 ?108 a89 ?694 v436 ?695 v441 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a801  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a9 
index: - 
=== Succesors ===
=== Usages ===
a802 a808 a810 a821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a9 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a9 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a9  <|@  <|@
tid ?266 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?27 ?32 ?209 ?261 ?63 ?109 ?159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v369 
falseSuccessor: v368 
=== Usages ===
=== Predecessor ===
a801 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v369 #falseSuccessor: v368  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a802 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a802 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
lastLocationAccess: - 
=== Succesors ===
next: v41 
=== Usages ===
a404 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v846 lastLocationAccess: - #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid a404 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a802 
=== Succesors ===
=== Usages ===
a395 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a802  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
values: a1 a5 a9 a13 
=== Succesors ===
=== Usages ===
?45 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a1 a5 a9 a13  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
a802 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v42 
values: a407 a413 
=== Succesors ===
=== Usages ===
?45 v46 v849 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v42 values: a407 a413  <|@  <|@
f <@~|@floating>@ <|@
tid a395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v42 
values: a404 a410 
=== Succesors ===
=== Usages ===
?45 v51 v848 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v42 values: a404 a410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 41
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v41 
=== Succesors ===
next: v50 
=== Usages ===
a396 a395 v48 v53 v62 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v41 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a396 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a396  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v48 #falseSuccessor: v47  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a395 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a395  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v53 #falseSuccessor: v52  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?63 
values: - - - a395 a396 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?63 values: - - - a395 a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateBefore: ?45 
=== Succesors ===
next: a803 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?45 #next: a803  <|@  <|@
f <@~|@floating>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a395 
index: - 
=== Succesors ===
=== Usages ===
a803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a803 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v848 
lastLocationAccess: - 
=== Succesors ===
next: a804 
=== Usages ===
a410 
=== Predecessor ===
v640 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v848 lastLocationAccess: - #next: a804  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a396 
index: - 
=== Succesors ===
=== Usages ===
a804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a804 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
lastLocationAccess: - 
=== Succesors ===
next: v62 
=== Usages ===
a413 
=== Predecessor ===
a803 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v849 lastLocationAccess: - #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid a413 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a804 
=== Succesors ===
=== Usages ===
a396 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a804  <|@  <|@
f <@~|@floating>@ <|@
tid a410 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a803 
=== Succesors ===
=== Usages ===
a395 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a803  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
loopBegin: v42 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a804 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v42  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v42 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v42 #next: v378  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v42 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v42 #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v378 v379 
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v378 v379 #next: v86  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
values: a1 a1 a5 a9 a13 
=== Succesors ===
=== Usages ===
?694 ?695 ?696 ?697 ?108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a1 a1 a5 a9 a13  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?109 
values: a1 a407 a9 a13 
=== Succesors ===
=== Usages ===
?90 ?99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?109 values: a1 a407 a9 a13  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a13 
index: - 
=== Succesors ===
=== Usages ===
a809 a814 a816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a13 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v377 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v87 
values: a9 a422 
=== Succesors ===
=== Usages ===
?90 v96 v850 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v87 values: a9 a422  <|@  <|@
f <@~|@floating>@ <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v87 
values: a407 a425 
=== Succesors ===
=== Usages ===
?90 v91 v851 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v87 values: a407 a425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 97
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v86 
=== Succesors ===
next: v95 
=== Usages ===
a88 a89 v93 v98 v107 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v86 #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a89 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a89  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v93 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v93 #falseSuccessor: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a88 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a88  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v98 #falseSuccessor: v97  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v641  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?108 
values: - - - a88 a89 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?108 values: - - - a88 a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateBefore: ?90 
=== Succesors ===
next: a805 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?90 #next: a805  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a88 
index: - 
=== Succesors ===
=== Usages ===
a805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a88 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a805 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v850 
lastLocationAccess: - 
=== Succesors ===
next: a806 
=== Usages ===
a422 
=== Predecessor ===
v641 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v850 lastLocationAccess: - #next: a806  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a89 
index: - 
=== Succesors ===
=== Usages ===
a806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a89 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a806 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v851 
lastLocationAccess: - 
=== Succesors ===
next: v107 
=== Usages ===
a425 
=== Predecessor ===
a805 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v851 lastLocationAccess: - #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid a425 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a806 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a806  <|@  <|@
f <@~|@floating>@ <|@
tid a422 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a805 
=== Succesors ===
=== Usages ===
a88 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a805  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
loopBegin: v87 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a806 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v87 
=== Succesors ===
next: a807 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v87 #next: a807  <|@  <|@
tid ?99 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?108 
=== Succesors ===
=== Usages ===
v842 a807 v841 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?108  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a801 
=== Succesors ===
=== Usages ===
a807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a807 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-109323|0xfffffffffffe54f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?99 
guard: - 
address: v852 
lastLocationAccess: - 
=== Succesors ===
next: v841 
=== Usages ===
a430 
=== Predecessor ===
v98 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?99 guard: - address: v852 lastLocationAccess: - #next: v841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-110603|0xfffffffffffe4ff5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?99 
object: a9 
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
a807 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?99 object: a9 #next: v842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-111883|0xfffffffffffe4af5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?99 
object: a13 
=== Succesors ===
next: a69 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?99 object: a13 #next: a69  <|@  <|@
f <@~|@floating>@ <|@
tid a430 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a807 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a807  <|@  <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a430 a9 a13 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a430 a9 a13  <|@  <|@
tid ?694 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?109 
values: a1 a1 a407 a9 a13 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?109 values: a1 a1 a407 a9 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a69 <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v431 
stateDuring: ?694 
=== Succesors ===
next: a808 
=== Usages ===
v442 ?695 ?696 
=== Predecessor ===
v842 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v431 stateDuring: ?694 #next: a808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a808 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
lastLocationAccess: - 
=== Succesors ===
next: a75 
=== Usages ===
a435 
=== Predecessor ===
a69 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v846 lastLocationAccess: - #next: a75  <|@  <|@
f <@~|@floating>@ <|@
tid a435 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a808 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a808  <|@  <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a435 a13 a407 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a435 a13 a407  <|@  <|@
tid ?695 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?109 
values: a1 a69 a1 a407 a9 a13 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?109 values: a1 a69 a1 a407 a9 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v436 
stateDuring: ?695 
=== Succesors ===
next: a809 
=== Usages ===
v442 ?696 
=== Predecessor ===
a808 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v436 stateDuring: ?695 #next: a809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a809 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
lastLocationAccess: - 
=== Succesors ===
next: a81 
=== Usages ===
a440 
=== Predecessor ===
a75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v853 lastLocationAccess: - #next: a81  <|@  <|@
f <@~|@floating>@ <|@
tid a440 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a809 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a809  <|@  <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a440 a407 a9 
=== Succesors ===
=== Usages ===
a81 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a440 a407 a9  <|@  <|@
tid ?696 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?109 
values: a1 a69 a75 
=== Succesors ===
=== Usages ===
a81 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?109 values: a1 a69 a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a81 <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v441 
stateDuring: ?696 
=== Succesors ===
next: a84 
=== Usages ===
v442 
=== Predecessor ===
a809 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v441 stateDuring: ?696 #next: a84  <|@  <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a69 a75 a81 
=== Succesors ===
=== Usages ===
a84 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a69 a75 a81  <|@  <|@
tid ?697 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?109 
=== Succesors ===
=== Usages ===
a84 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a84 <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v442 
stateDuring: ?697 
=== Succesors ===
next: v111 
=== Usages ===
a112 
=== Predecessor ===
a81 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v442 stateDuring: ?697 #next: v111  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
a84 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v87 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v87 #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a112 <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v110 
values: a84 a13 
=== Succesors ===
=== Usages ===
?27 ?32 ?260 ?159 ?209 a241 v862 ?706 v510 ?707 v515 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v110 values: a84 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v111 v113 
=== Succesors ===
next: a810 
=== Usages ===
a112 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v111 v113 #next: a810  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: aload_0
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
values: a1 a112 a1 a5 a834 a13 
=== Succesors ===
=== Usages ===
a810 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a1 a112 a1 a5 a834 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a810 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-113675|0xfffffffffffe43f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?27 
guard: - 
address: v846 
lastLocationAccess: - 
=== Succesors ===
next: v136 
=== Usages ===
a447 v856 
=== Predecessor ===
v110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?27 guard: - address: v846 lastLocationAccess: - #next: v136  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
values: a1 a112 a1 a5 a9 a13 
=== Succesors ===
=== Usages ===
?698 ?699 ?700 ?701 ?158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a1 a112 a1 a5 a9 a13  <|@  <|@
f <@~|@floating>@ <|@
tid a447 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a810 
=== Succesors ===
=== Usages ===
?158 a139 ?698 v464 ?699 v467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a810  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?159 
values: a1 a447 a13 a5 
=== Succesors ===
=== Usages ===
?140 ?149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?159 values: a1 a447 a13 a5  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
a810 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v137 
values: a13 a450 
=== Succesors ===
=== Usages ===
?140 v146 v854 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v137 values: a13 a450  <|@  <|@
f <@~|@floating>@ <|@
tid a139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v137 
values: a447 a453 
=== Succesors ===
=== Usages ===
?140 v141 v855 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v137 values: a447 a453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 151
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v136 
=== Succesors ===
next: v145 
=== Usages ===
a138 a139 v143 v148 v157 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v136 #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a139 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a139  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v143 #falseSuccessor: v142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a138 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a138  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v148 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?158 
values: - - - a138 a139 
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?158 values: - - - a138 a139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateBefore: ?140 
=== Succesors ===
next: a811 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?140 #next: a811  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a138 
index: - 
=== Succesors ===
=== Usages ===
a811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a138 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a811 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v854 
lastLocationAccess: - 
=== Succesors ===
next: a812 
=== Usages ===
a450 
=== Predecessor ===
v642 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v854 lastLocationAccess: - #next: a812  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a139 
index: - 
=== Succesors ===
=== Usages ===
a812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a139 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a812 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v855 
lastLocationAccess: - 
=== Succesors ===
next: v157 
=== Usages ===
a453 
=== Predecessor ===
a811 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v855 lastLocationAccess: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid a453 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a812 
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a812  <|@  <|@
f <@~|@floating>@ <|@
tid a450 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a811 
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a811  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
loopBegin: v137 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a812 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v137  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v137 
=== Succesors ===
next: a813 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v137 #next: a813  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?158 
=== Succesors ===
=== Usages ===
v843 a813 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?158  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a810 
=== Succesors ===
=== Usages ===
a813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a813 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-116491|0xfffffffffffe38f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?149 
guard: - 
address: v856 
lastLocationAccess: - 
=== Succesors ===
next: v843 
=== Usages ===
a458 
=== Predecessor ===
v148 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?149 guard: - address: v856 lastLocationAccess: - #next: v843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-117771|0xfffffffffffe33f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?149 
object: a13 
=== Succesors ===
next: a119 
=== Usages ===
=== Predecessor ===
a813 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?149 object: a13 #next: a119  <|@  <|@
f <@~|@floating>@ <|@
tid a458 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a813 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a813  <|@  <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a458 a13 a5 
=== Succesors ===
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a458 a13 a5  <|@  <|@
tid ?698 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?159 
values: a1 a1 a447 a13 a5 
=== Succesors ===
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?159 values: a1 a1 a447 a13 a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a119 <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v459 
stateDuring: ?698 
=== Succesors ===
next: a814 
=== Usages ===
v468 ?699 ?700 
=== Predecessor ===
v843 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v459 stateDuring: ?698 #next: a814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a814 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
lastLocationAccess: - 
=== Succesors ===
next: a125 
=== Usages ===
a463 
=== Predecessor ===
a119 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v853 lastLocationAccess: - #next: a125  <|@  <|@
f <@~|@floating>@ <|@
tid a463 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a814 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a814  <|@  <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a463 a5 a447 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a463 a5 a447  <|@  <|@
tid ?699 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?159 
values: a1 a119 a1 a447 a13 a5 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?159 values: a1 a119 a1 a447 a13 a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v464 
stateDuring: ?699 
=== Succesors ===
next: a815 
=== Usages ===
v468 ?700 
=== Predecessor ===
a814 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v464 stateDuring: ?699 #next: a815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a815 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v847 
lastLocationAccess: - 
=== Succesors ===
next: a131 
=== Usages ===
a466 
=== Predecessor ===
a125 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v847 lastLocationAccess: - #next: a131  <|@  <|@
f <@~|@floating>@ <|@
tid a466 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a815 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a815  <|@  <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a466 a447 a13 
=== Succesors ===
=== Usages ===
a131 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a466 a447 a13  <|@  <|@
tid ?700 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?159 
values: a1 a119 a125 
=== Succesors ===
=== Usages ===
a131 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?159 values: a1 a119 a125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a131 <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v467 
stateDuring: ?700 
=== Succesors ===
next: a134 
=== Usages ===
v468 
=== Predecessor ===
a815 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v467 stateDuring: ?700 #next: a134  <|@  <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a119 a125 a131 
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a119 a125 a131  <|@  <|@
tid ?701 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?159 
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v468 
stateDuring: ?701 
=== Succesors ===
next: v161 
=== Usages ===
a162 
=== Predecessor ===
a131 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v468 stateDuring: ?701 #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
a134 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v137 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v137 #next: v163  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
v143 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a162 <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v160 
values: a134 a5 
=== Succesors ===
=== Usages ===
?32 ?260 ?209 v505 ?706 v844 v863 ?707 v515 a240 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v160 values: a134 a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v161 v163 
=== Succesors ===
next: a816 
=== Usages ===
a162 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v161 v163 #next: a816  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: aload_0
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stackSize: 3
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
values: a1 a112 a162 a1 a5 a9 a834 
=== Succesors ===
=== Usages ===
a816 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a1 a112 a162 a1 a5 a9 a834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a816 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-120331|0xfffffffffffe29f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v853 
lastLocationAccess: - 
=== Succesors ===
next: v186 
=== Usages ===
a473 v859 
=== Predecessor ===
v160 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v853 lastLocationAccess: - #next: v186  <|@  <|@
tid ?209 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
values: a1 a112 a162 
=== Succesors ===
=== Usages ===
?702 ?703 ?704 ?705 ?208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a1 a112 a162  <|@  <|@
f <@~|@floating>@ <|@
tid a473 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a816 
=== Succesors ===
=== Usages ===
?208 a189 ?702 v488 ?703 v491 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a816  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?209 
values: a1 a473 a5 a9 
=== Succesors ===
=== Usages ===
?190 ?199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?209 values: a1 a473 a5 a9  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
a816 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v187 
values: a5 a476 
=== Succesors ===
=== Usages ===
?190 v196 v857 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v187 values: a5 a476  <|@  <|@
f <@~|@floating>@ <|@
tid a189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v187 
values: a473 a479 
=== Succesors ===
=== Usages ===
?190 v191 v858 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v187 values: a473 a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 205
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v186 
=== Succesors ===
next: v195 
=== Usages ===
a188 a189 v193 v198 v207 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v186 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a189 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a189  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v193 #falseSuccessor: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a188 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a188  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v198 #falseSuccessor: v197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
tid ?190 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?208 
values: - - - a188 a189 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?208 values: - - - a188 a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateBefore: ?190 
=== Succesors ===
next: a817 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?190 #next: a817  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a188 
index: - 
=== Succesors ===
=== Usages ===
a817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a188 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a817 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
lastLocationAccess: - 
=== Succesors ===
next: a818 
=== Usages ===
a476 
=== Predecessor ===
v643 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v857 lastLocationAccess: - #next: a818  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a189 
index: - 
=== Succesors ===
=== Usages ===
a818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a189 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a818 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
a479 
=== Predecessor ===
a817 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v858 lastLocationAccess: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid a479 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a818 
=== Succesors ===
=== Usages ===
a189 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a818  <|@  <|@
f <@~|@floating>@ <|@
tid a476 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a817 
=== Succesors ===
=== Usages ===
a188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a817  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
loopBegin: v187 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a818 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v187 
=== Succesors ===
next: a819 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v187 #next: a819  <|@  <|@
tid ?199 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?208 
=== Succesors ===
=== Usages ===
a819 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?208  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a816 
=== Succesors ===
=== Usages ===
a819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a819 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-123147|0xfffffffffffe1ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?199 
guard: - 
address: v859 
lastLocationAccess: - 
=== Succesors ===
next: a169 
=== Usages ===
a484 
=== Predecessor ===
v198 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?199 guard: - address: v859 lastLocationAccess: - #next: a169  <|@  <|@
f <@~|@floating>@ <|@
tid a484 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a819 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a819  <|@  <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a484 a5 a9 
=== Succesors ===
=== Usages ===
a169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a484 a5 a9  <|@  <|@
tid ?702 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?209 
values: a1 a1 a473 a5 a9 
=== Succesors ===
=== Usages ===
a169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?209 values: a1 a1 a473 a5 a9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a169 <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v485 
stateDuring: ?702 
=== Succesors ===
next: a820 
=== Usages ===
v492 ?703 ?704 
=== Predecessor ===
a819 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v485 stateDuring: ?702 #next: a820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a820 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v847 
lastLocationAccess: - 
=== Succesors ===
next: a175 
=== Usages ===
a487 
=== Predecessor ===
a169 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v847 lastLocationAccess: - #next: a175  <|@  <|@
f <@~|@floating>@ <|@
tid a487 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a820 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a820  <|@  <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a487 a9 a473 
=== Succesors ===
=== Usages ===
a175 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a487 a9 a473  <|@  <|@
tid ?703 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?209 
values: a1 a169 a1 a473 a5 a9 
=== Succesors ===
=== Usages ===
a175 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?209 values: a1 a169 a1 a473 a5 a9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a175 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v488 
stateDuring: ?703 
=== Succesors ===
next: a821 
=== Usages ===
v492 ?704 
=== Predecessor ===
a820 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v488 stateDuring: ?703 #next: a821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a821 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
lastLocationAccess: - 
=== Succesors ===
next: a181 
=== Usages ===
a490 
=== Predecessor ===
a175 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v846 lastLocationAccess: - #next: a181  <|@  <|@
f <@~|@floating>@ <|@
tid a490 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a821 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a821  <|@  <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a490 a473 a5 
=== Succesors ===
=== Usages ===
a181 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a490 a473 a5  <|@  <|@
tid ?704 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?209 
values: a1 a169 a175 
=== Succesors ===
=== Usages ===
a181 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?209 values: a1 a169 a175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a181 <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v491 
stateDuring: ?704 
=== Succesors ===
next: a184 
=== Usages ===
v492 
=== Predecessor ===
a821 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v491 stateDuring: ?704 #next: a184  <|@  <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a169 a175 a181 
=== Succesors ===
=== Usages ===
a184 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a169 a175 a181  <|@  <|@
tid ?705 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?209 
=== Succesors ===
=== Usages ===
a184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a184 <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v492 
stateDuring: ?705 
=== Succesors ===
next: v211 
=== Usages ===
a212 
=== Predecessor ===
a181 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v492 stateDuring: ?705 #next: v211  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
a184 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v187 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v187 #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v193 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a212 <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v210 
values: a184 a9 
=== Succesors ===
=== Usages ===
a269 v505 ?706 v510 ?707 v845 v864 ?260 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v210 values: a184 a9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v211 v213 
=== Succesors ===
next: v238 
=== Usages ===
a212 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v211 v213 #next: v238  <|@  <|@
tid ?261 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
=== Succesors ===
=== Usages ===
?706 ?707 ?708 ?709 ?260 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266  <|@  <|@
tid ?260 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?261 
values: a1 a112 a162 a212 
=== Succesors ===
=== Usages ===
?242 ?251 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?261 values: a1 a112 a162 a212  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
v210 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v239 
values: a162 a496 
=== Succesors ===
=== Usages ===
?242 v248 v860 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v239 values: a162 a496  <|@  <|@
f <@~|@floating>@ <|@
tid a241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v239 
values: a112 a499 
=== Succesors ===
=== Usages ===
?242 v243 v861 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v239 values: a112 a499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 259
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v238 
=== Succesors ===
next: v247 
=== Usages ===
a240 a241 v245 v250 v259 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v238 #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a241 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a241  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v243 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v243 #trueSuccessor: v245 #falseSuccessor: v244  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a240 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a240  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v250 
falseSuccessor: v249 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v250 #falseSuccessor: v249  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?260 
values: - - - a240 a241 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?260 values: - - - a240 a241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateBefore: ?242 
=== Succesors ===
next: a822 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?242 #next: a822  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a240 
index: - 
=== Succesors ===
=== Usages ===
a822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a240 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a822 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
lastLocationAccess: - 
=== Succesors ===
next: a823 
=== Usages ===
a496 
=== Predecessor ===
v644 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v860 lastLocationAccess: - #next: a823  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a241 
index: - 
=== Succesors ===
=== Usages ===
a823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a241 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a823 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
lastLocationAccess: - 
=== Succesors ===
next: v259 
=== Usages ===
a499 
=== Predecessor ===
a822 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v861 lastLocationAccess: - #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid a499 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a823 
=== Succesors ===
=== Usages ===
a241 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a823  <|@  <|@
f <@~|@floating>@ <|@
tid a496 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a822 
=== Succesors ===
=== Usages ===
a240 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a822  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
loopBegin: v239 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a823 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v239  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v239 
=== Succesors ===
next: a824 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v239 #next: a824  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?260 
=== Succesors ===
=== Usages ===
v845 a824 v844 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?260  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a112 
index: - 
=== Succesors ===
=== Usages ===
a824 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a824 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-128267|0xfffffffffffe0af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?251 
guard: - 
address: v862 
lastLocationAccess: - 
=== Succesors ===
next: v844 
=== Usages ===
a504 
=== Predecessor ===
v250 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?251 guard: - address: v862 lastLocationAccess: - #next: v844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-129547|0xfffffffffffe05f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?251 
object: a162 
=== Succesors ===
next: v845 
=== Usages ===
=== Predecessor ===
a824 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?251 object: a162 #next: v845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-130827|0xfffffffffffe00f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?251 
object: a212 
=== Succesors ===
next: a219 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?251 object: a212 #next: a219  <|@  <|@
f <@~|@floating>@ <|@
tid a504 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a824 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a824  <|@  <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a504 a162 a212 
=== Succesors ===
=== Usages ===
a219 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a504 a162 a212  <|@  <|@
tid ?706 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?261 
values: a1 a1 a112 a162 a212 
=== Succesors ===
=== Usages ===
a219 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?261 values: a1 a1 a112 a162 a212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a219 <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v505 
stateDuring: ?706 
=== Succesors ===
next: a825 
=== Usages ===
v516 ?707 ?708 
=== Predecessor ===
v845 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v505 stateDuring: ?706 #next: a825  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a162 
index: - 
=== Succesors ===
=== Usages ===
a825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a162 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a825 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
lastLocationAccess: - 
=== Succesors ===
next: a226 
=== Usages ===
a509 
=== Predecessor ===
a219 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v863 lastLocationAccess: - #next: a226  <|@  <|@
f <@~|@floating>@ <|@
tid a509 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a825 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a825  <|@  <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a509 a212 a112 
=== Succesors ===
=== Usages ===
a226 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a509 a212 a112  <|@  <|@
tid ?707 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?261 
values: a1 a219 a1 a112 a162 a212 
=== Succesors ===
=== Usages ===
a226 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?261 values: a1 a219 a1 a112 a162 a212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a226 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v510 
stateDuring: ?707 
=== Succesors ===
next: a826 
=== Usages ===
v516 ?708 
=== Predecessor ===
a825 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v510 stateDuring: ?707 #next: a826  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a212 
index: - 
=== Succesors ===
=== Usages ===
a826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a212 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a826 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
lastLocationAccess: - 
=== Succesors ===
next: a233 
=== Usages ===
a514 
=== Predecessor ===
a226 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v864 lastLocationAccess: - #next: a233  <|@  <|@
f <@~|@floating>@ <|@
tid a514 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a826 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a826  <|@  <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a514 a112 a162 
=== Succesors ===
=== Usages ===
a233 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a514 a112 a162  <|@  <|@
tid ?708 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?261 
values: a1 a219 a226 
=== Succesors ===
=== Usages ===
a233 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?261 values: a1 a219 a226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a233 <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v515 
stateDuring: ?708 
=== Succesors ===
next: a236 
=== Usages ===
v516 
=== Predecessor ===
a826 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v515 stateDuring: ?708 #next: a236  <|@  <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a219 a226 a233 
=== Succesors ===
=== Usages ===
a236 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a219 a226 a233  <|@  <|@
tid ?709 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?261 
=== Succesors ===
=== Usages ===
a236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a236 <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v516 
stateDuring: ?709 
=== Succesors ===
next: v268 
=== Usages ===
a269 
=== Predecessor ===
a233 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v516 stateDuring: ?709 #next: v268  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a236 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v239 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v239 #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a269 <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v267 
values: a236 a13 a212 a13 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v267 values: a236 a13 a212 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v268 v270 v271 v397 
=== Succesors ===
next: a827 
=== Usages ===
a269 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v268 v270 v271 v397 #next: a827  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: astore_1
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at List.benchmark() [bci: 19]
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a834 
=== Succesors ===
=== Usages ===
a827 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a834  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a269 
index: - 
=== Succesors ===
=== Usages ===
a827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a269 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a827 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-132619|0xfffffffffffdf9f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List.benchmark() [bci: 24]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?17 
guard: - 
address: v865 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
v866 v544 
=== Predecessor ===
v267 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?17 guard: - address: v865 lastLocationAccess: - #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List.benchmark() [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a827 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a827  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List.benchmark() [bci: 24]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i355 i345 i283 ?347 i293 i350 i302 ?352 i311 i360 i320 ?710 i331 ?332 i335 ?337 i340 ?342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List.benchmark() [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.09998047256395237
stamp: void
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v277 
=== Usages ===
=== Predecessor ===
a827 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v278 #falseSuccessor: v277  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v278 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a828 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a828  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a827 
=== Succesors ===
=== Usages ===
a828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a828 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
lastLocationAccess: - 
=== Succesors ===
next: v291 
=== Usages ===
v867 v545 
=== Predecessor ===
v277 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v866 lastLocationAccess: - #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a828 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a828  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.09998047256395237
stamp: void
=== Inputs ===
condition: v545 
=== Succesors ===
trueSuccessor: v290 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
a828 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v545 #trueSuccessor: v290 #falseSuccessor: v289  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v290 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a829 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a829  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a828 
=== Succesors ===
=== Usages ===
a829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a829 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
lastLocationAccess: - 
=== Succesors ===
next: v300 
=== Usages ===
v868 v546 
=== Predecessor ===
v289 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v867 lastLocationAccess: - #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a829 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a829  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.09998047256395237
stamp: void
=== Inputs ===
condition: v546 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v298 
=== Usages ===
=== Predecessor ===
a829 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v546 #trueSuccessor: v299 #falseSuccessor: v298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a830 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a830  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a829 
=== Succesors ===
=== Usages ===
a830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a830 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v868 
lastLocationAccess: - 
=== Succesors ===
next: v309 
=== Usages ===
v869 v547 
=== Predecessor ===
v298 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v868 lastLocationAccess: - #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a830 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a830  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.09998047256395237
stamp: void
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
a830 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v308 #falseSuccessor: v307  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a831 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a831  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a830 
=== Succesors ===
=== Usages ===
a831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a831 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v869 
lastLocationAccess: - 
=== Succesors ===
next: v318 
=== Usages ===
v870 v548 
=== Predecessor ===
v307 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v869 lastLocationAccess: - #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a831  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.09998047256395237
stamp: void
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v317 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
a831 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v317 #falseSuccessor: v316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v317 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a832 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a832  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a831 
=== Succesors ===
=== Usages ===
a832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a832 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
a536 v537 
=== Predecessor ===
v316 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v870 lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a832 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a832  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.09998047256395237
stamp: void
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
a832 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v326 #falseSuccessor: v325  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i329 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i329  <|@  <|@
f <@~|@floating>@ <|@
tid a536 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a832 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a832  <|@  <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<LList$Element;, resolved>]
stamp: void
targetMethod: HotSpotMethod<List$Element.length()>
=== Inputs ===
arguments: a536 
=== Succesors ===
=== Usages ===
i329 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a536  <|@  <|@
tid ?357 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?352 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?352 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?357 
values: i280 
=== Succesors ===
=== Usages ===
?347 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?357 values: i280  <|@  <|@
tid ?347 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?352 
values: i280 
=== Succesors ===
=== Usages ===
?342 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?352 values: i280  <|@  <|@
tid ?342 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?347 
values: i280 
=== Succesors ===
=== Usages ===
?337 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?347 values: i280  <|@  <|@
tid ?337 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?342 
values: i280 
=== Succesors ===
=== Usages ===
?332 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?342 values: i280  <|@  <|@
tid ?332 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: i280 
=== Succesors ===
=== Usages ===
?710 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: i280  <|@  <|@
tid ?710 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?332 
values: i280 
=== Succesors ===
=== Usages ===
i329 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?332 values: i280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i329 <|@
d <@d|@=== Debug Properties ===
bci: 14
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
polymorphic: false
stamp: i32
targetMethod: Direct#List$Element.length
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v540 
stateDuring: ?710 
=== Succesors ===
next: v336 
=== Usages ===
i331 
=== Predecessor ===
v325 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v540 stateDuring: ?710 #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: i32
=== Inputs ===
x: i329 
y: i280 
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i329 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
i329 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i335 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v333 
values: i280 i331 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v333 values: i280 i331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v334 v336 
=== Succesors ===
next: v341 
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v334 v336 #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: i32
=== Inputs ===
x: i335 
y: i280 
=== Succesors ===
=== Usages ===
i340 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i335 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v333 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i340 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v338 
values: i280 i320 
=== Succesors ===
=== Usages ===
i311 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v338 values: i280 i320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v339 v341 
=== Succesors ===
next: v346 
=== Usages ===
i340 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v339 v341 #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: i32
=== Inputs ===
x: i340 
y: i280 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i340 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
v338 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v343 
values: i280 i311 
=== Succesors ===
=== Usages ===
i302 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v343 values: i280 i311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v344 v346 
=== Succesors ===
next: v351 
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v344 v346 #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: i32
=== Inputs ===
x: i345 
y: i280 
=== Succesors ===
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i345 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i350 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v348 
values: i280 i302 
=== Succesors ===
=== Usages ===
i293 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v348 values: i280 i302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v349 v351 
=== Succesors ===
next: v356 
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v349 v351 #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid i293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: i32
=== Inputs ===
x: i350 
y: i280 
=== Succesors ===
=== Usages ===
i355 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i350 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i355 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v353 
values: i280 i293 
=== Succesors ===
=== Usages ===
i283 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v353 values: i280 i293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v354 v356 
=== Succesors ===
next: v361 
=== Usages ===
i355 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v354 v356 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid i283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List.benchmark() [bci: 24]
stamp: i32
=== Inputs ===
x: i355 
y: i280 
=== Succesors ===
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i355 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v353 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v358 
values: i280 i283 
=== Succesors ===
=== Usages ===
?20 v683 i659 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v358 values: i280 i283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v359 v361 
=== Succesors ===
next: v686 
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v359 v361 #next: v686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: 128
stableDimension: 0
stamp: i32 [128]
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: i32
=== Inputs ===
x: i360 
y: i655 
=== Succesors ===
=== Usages ===
v667 j674 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i360 y: i655  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: 256
stableDimension: 0
stamp: i32 [256]
stampKind: i32
value: int[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i659 
y: i666 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i659 y: i666  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v667 
=== Succesors ===
trueSuccessor: v657 
falseSuccessor: v656 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v667 #trueSuccessor: v657 #falseSuccessor: v656  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a833 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a833  <|@  <|@
f <@~|@floating>@ <|@
tid a658 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: Instance<java.lang.Integer[]>
stableDimension: 1
stamp: a!# java.lang.Integer[]
stampKind: a java.lang.Object
value: Object[Instance<java.lang.Integer[]>]
=== Inputs ===
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j674 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i659 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i659  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a658 
index: j674 
=== Succesors ===
=== Usages ===
a833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a658 index: j674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a833 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
lastLocationAccess: - 
=== Succesors ===
next: v660 
=== Usages ===
a673 
=== Predecessor ===
v657 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v871 lastLocationAccess: - #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid a673 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a833 
=== Succesors ===
=== Usages ===
a663 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a833  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
a833 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v798  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j753 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j753 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j780 
=== Usages ===
v873 v874 
=== Predecessor ===
v798 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j780  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j753 
index: - 
=== Succesors ===
=== Usages ===
j780 v782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j753 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j780 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v873 
lastLocationAccess: - 
=== Succesors ===
next: j781 
=== Usages ===
j760 v875 v876 a771 v877 v878 
=== Predecessor ===
j753 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v873 lastLocationAccess: - #next: j781  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j753 
index: - 
=== Succesors ===
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j753 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j781 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
lastLocationAccess: - 
=== Succesors ===
next: v759 
=== Usages ===
v761 
=== Predecessor ===
j780 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v874 lastLocationAccess: - #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid j401 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j760 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: i64
=== Inputs ===
x: j780 
y: j401 
=== Succesors ===
=== Usages ===
v761 v782 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j780 y: j401  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j781 
y: j760 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j781 y: j760  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v761 
=== Succesors ===
trueSuccessor: v762 
falseSuccessor: v763 
=== Usages ===
=== Predecessor ===
j781 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v761 #trueSuccessor: v762 #falseSuccessor: v763  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a764 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a764  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at List.benchmark() [bci: 24]
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i360 
=== Succesors ===
=== Usages ===
v840 a764 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i360  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: meta{HotSpotType<Ljava/lang/Integer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Integer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a764 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a764 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?20 
arguments: v752 
=== Succesors ===
next: v840 
=== Usages ===
v840 a778 
=== Predecessor ===
v762 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?20 arguments: v752 #next: v840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-203377|0xfffffffffffce58f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?20 
object: a764 
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
a764 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?20 object: a764 #next: v766  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
v840 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v782 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v873 
lastLocationAccess: - 
value: j760 
stateAfter: - 
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v873 lastLocationAccess: - value: j760 stateAfter: - #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
address: v877 
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v877 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v875 
lastLocationAccess: - 
value: j768 
stateAfter: - 
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v875 lastLocationAccess: - value: j768 stateAfter: - #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140232611594240 shift: 0)
stampKind: Klass*(compressed base: 140232611594240 shift: 0)
value: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v878 
lastLocationAccess: - 
value: v800 
stateAfter: - 
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v878 lastLocationAccess: - value: v800 stateAfter: - #next: v788  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v876 
lastLocationAccess: - 
value: i758 
stateAfter: - 
=== Succesors ===
next: a771 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v876 lastLocationAccess: - value: i758 stateAfter: - #next: a771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j780 
=== Succesors ===
next: v772 
=== Usages ===
a778 
=== Predecessor ===
v788 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j780 #next: v772  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
a771 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v767 
values: a764 a771 
=== Succesors ===
=== Usages ===
v872 a684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v767 values: a764 a771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v766 v772 
=== Succesors ===
next: v683 
=== Usages ===
a778 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v766 v772 #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a778 
index: - 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v872 
lastLocationAccess: - 
value: i360 
stateAfter: - 
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v872 lastLocationAccess: - value: i360 stateAfter: - #next: v685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a684 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a778 
=== Succesors ===
next: v662 
=== Usages ===
a663 
=== Predecessor ===
v685 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a778 #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
a684 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v661 
values: a673 a684 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v661 values: a673 a684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v660 v662 
=== Succesors ===
next: v22 
=== Usages ===
a663 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v660 v662 #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.benchmark() [bci: 30]
stamp: void
=== Inputs ===
memoryMap: - 
result: a663 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a663  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 4]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 10]
stack: v0|QWORD[.] v1|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 16]
stack: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction v91|DWORD[_] = MOV input: [v90|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v91|DWORD[_], y: v91|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV input: [v91|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[_] = MOV input: [v92|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v93|DWORD[_], y: v93|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[_] = MOV input: [v93|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[_] = MOV input: [v94|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v95|DWORD[_], y: v95|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[_] = MOV input: [v95|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v96|DWORD[_], y: v96|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC value: v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = INC value: v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC value: v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v105|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC value: v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v109|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = LEA address: [v110|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v111|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA address: [v115|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v116|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v115|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v120|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[.] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOV input: [v112|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [v118|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v118|QWORD[.]] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a5 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a5  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# List
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?706 v398 v516 ?707 v399 ?707 ?708 v400 ?691 ?260 ?27 ?27 ?32 ?32 ?691 ?63 v431 ?692 ?692 v436 ?693 ?694 v441 ?694 v442 ?108 ?109 ?109 v459 ?695 ?695 v464 ?696 ?698 v467 ?698 v468 ?158 ?159 ?159 v485 ?699 ?699 v488 ?700 ?702 v491 ?702 v492 ?208 ?209 v505 ?703 ?703 v510 ?704 ?706 v515 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result int[15|0xf] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.benchmark() [bci: 2]
rawvalue: 15
stableDimension: 0
stamp: i32 [15]
stampKind: i32
value: int[15|0xf]
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.benchmark() [bci: 4]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<List.makeList(int)>
=== Inputs ===
arguments: a1 i3 
=== Succesors ===
=== Usages ===
a5 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3  <|@  <|@
tid ?691 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1 
=== Succesors ===
=== Usages ===
a5 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a5 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.benchmark() [bci: 4]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.makeList
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v398 
stateDuring: ?691 
=== Succesors ===
next: a9 
=== Usages ===
a188 ?702 ?703 ?208 v23 v847 ?27 ?32 ?692 ?63 ?109 v459 ?693 v464 ?698 v491 ?158 ?159 a162 v485 ?699 
=== Predecessor ===
v0 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v398 stateDuring: ?691 #next: a9  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.benchmark() [bci: 8]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.benchmark() [bci: 10]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<List.makeList(int)>
=== Inputs ===
arguments: a1 i7 
=== Succesors ===
=== Usages ===
a9 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i7  <|@  <|@
tid ?692 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a5 a1 
=== Succesors ===
=== Usages ===
a9 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a5 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a9 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 10
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.benchmark() [bci: 10]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.makeList
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v399 
stateDuring: ?692 
=== Succesors ===
next: a13 
=== Usages ===
?208 ?702 a212 ?695 v28 v488 ?32 v846 ?63 v431 ?703 v841 ?693 v441 a88 ?108 ?109 ?159 v485 ?694 
=== Predecessor ===
a5 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v399 stateDuring: ?692 #next: a13  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List.benchmark() [bci: 14]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.benchmark() [bci: 16]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<List.makeList(int)>
=== Inputs ===
arguments: a1 i11 
=== Succesors ===
=== Usages ===
a13 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i11  <|@  <|@
tid ?693 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a5 a9 
=== Succesors ===
=== Usages ===
a13 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a5 a9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a13 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.benchmark() [bci: 16]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.makeList
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v400 
stateDuring: ?693 
=== Succesors ===
next: v366 
=== Usages ===
?698 ?159 ?27 ?158 v843 a138 a269 ?63 v431 a269 v436 ?699 v853 ?108 ?109 a112 v459 ?695 v842 ?694 v467 
=== Predecessor ===
a9 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v400 stateDuring: ?693 #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a5 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a5  <|@  <|@
f <@~|@floating>@ <|@
tid a834 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?27 ?32 ?17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
a13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v365 #falseSuccessor: v364  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 4]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 10]
stack: v0|QWORD[.] v1|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 16]
stack: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a801 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a801  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
a801 a820 a815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a801 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v847 
lastLocationAccess: - 
=== Succesors ===
next: v370 
=== Usages ===
a407 v852 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v847 lastLocationAccess: - #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid a407 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a801 
=== Succesors ===
=== Usages ===
a396 ?108 a89 ?694 v436 ?695 v441 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a801  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
result [v2|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a9 
index: - 
=== Succesors ===
=== Usages ===
a802 a808 a810 a821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a9 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a9 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a9  <|@  <|@
tid ?266 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?27 ?32 ?209 ?261 ?63 ?109 ?159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v369 
falseSuccessor: v368 
=== Usages ===
=== Predecessor ===
a801 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v369 #falseSuccessor: v368  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a802 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a802 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
lastLocationAccess: - 
=== Succesors ===
next: v41 
=== Usages ===
a404 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v846 lastLocationAccess: - #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid a404 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a802 
=== Succesors ===
=== Usages ===
a395 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a802  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
values: a1 a5 a9 a13 
=== Succesors ===
=== Usages ===
?45 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a1 a5 a9 a13  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
a802 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a396 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v42 
values: a407 a413 
=== Succesors ===
=== Usages ===
?45 v46 v849 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v42 values: a407 a413  <|@  <|@
f <@~|@floating>@ <|@
tid a395 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v42 
values: a404 a410 
=== Succesors ===
=== Usages ===
?45 v51 v848 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v42 values: a404 a410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 41
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v41 
=== Succesors ===
next: v50 
=== Usages ===
a396 a395 v48 v53 v62 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v41 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a396 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a396  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v48 #falseSuccessor: v47  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a395 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a395  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v53 #falseSuccessor: v52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?63 
values: - - - a395 a396 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?63 values: - - - a395 a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateBefore: ?45 
=== Succesors ===
next: a803 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?45 #next: a803  <|@  <|@
f <@~|@floating>@ <|@
tid v848 <|@
result [v9|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a395 
index: - 
=== Succesors ===
=== Usages ===
a803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a803 <|@
result v11|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v848 
lastLocationAccess: - 
=== Succesors ===
next: a804 
=== Usages ===
a410 
=== Predecessor ===
v640 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v848 lastLocationAccess: - #next: a804  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
result [v8|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a396 
index: - 
=== Succesors ===
=== Usages ===
a804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a804 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
lastLocationAccess: - 
=== Succesors ===
next: v62 
=== Usages ===
a413 
=== Predecessor ===
a803 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v849 lastLocationAccess: - #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid a413 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a804 
=== Succesors ===
=== Usages ===
a396 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a804  <|@  <|@
f <@~|@floating>@ <|@
tid a410 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a803 
=== Succesors ===
=== Usages ===
a395 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a803  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
loopBegin: v42 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a804 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v42  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v42 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v42 #next: v378  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v42 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v42 #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v378 v379 
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v378 v379 #next: v86  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
values: a1 a1 a5 a9 a13 
=== Succesors ===
=== Usages ===
?694 ?695 ?696 ?697 ?108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a1 a1 a5 a9 a13  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?109 
values: a1 a407 a9 a13 
=== Succesors ===
=== Usages ===
?90 ?99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?109 values: a1 a407 a9 a13  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
result [v3|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a13 
index: - 
=== Succesors ===
=== Usages ===
a809 a814 a816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a13 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v377 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a88 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v87 
values: a9 a422 
=== Succesors ===
=== Usages ===
?90 v96 v850 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v87 values: a9 a422  <|@  <|@
f <@~|@floating>@ <|@
tid a89 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v87 
values: a407 a425 
=== Succesors ===
=== Usages ===
?90 v91 v851 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v87 values: a407 a425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 97
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v86 
=== Succesors ===
next: v95 
=== Usages ===
a88 a89 v93 v98 v107 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v86 #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a89 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a89  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v93 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v93 #falseSuccessor: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a88 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a88  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v98 #falseSuccessor: v97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v641  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?108 
values: - - - a88 a89 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?108 values: - - - a88 a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateBefore: ?90 
=== Succesors ===
next: a805 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?90 #next: a805  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
result [v15|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a88 
index: - 
=== Succesors ===
=== Usages ===
a805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a88 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a805 <|@
result v18|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v850 
lastLocationAccess: - 
=== Succesors ===
next: a806 
=== Usages ===
a422 
=== Predecessor ===
v641 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v850 lastLocationAccess: - #next: a806  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
result [v16|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a89 
index: - 
=== Succesors ===
=== Usages ===
a806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a89 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a806 <|@
result v19|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v851 
lastLocationAccess: - 
=== Succesors ===
next: v107 
=== Usages ===
a425 
=== Predecessor ===
a805 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v851 lastLocationAccess: - #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid a425 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a806 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a806  <|@  <|@
f <@~|@floating>@ <|@
tid a422 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a805 
=== Succesors ===
=== Usages ===
a88 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a805  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
loopBegin: v87 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a806 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v87 
=== Succesors ===
next: a807 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v87 #next: a807  <|@  <|@
tid ?99 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?108 
=== Succesors ===
=== Usages ===
v842 a807 v841 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?108  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
result [v4|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a801 
=== Succesors ===
=== Usages ===
a807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a807 <|@
result v22|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-109323|0xfffffffffffe54f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?99 
guard: - 
address: v852 
lastLocationAccess: - 
=== Succesors ===
next: v841 
=== Usages ===
a430 
=== Predecessor ===
v98 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?99 guard: - address: v852 lastLocationAccess: - #next: v841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-110603|0xfffffffffffe4ff5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?99 
object: a9 
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
a807 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?99 object: a9 #next: v842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-111883|0xfffffffffffe4af5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?99 
object: a13 
=== Succesors ===
next: a69 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?99 object: a13 #next: a69  <|@  <|@
f <@~|@floating>@ <|@
tid a430 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a807 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a807  <|@  <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a430 a9 a13 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a430 a9 a13  <|@  <|@
tid ?694 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?109 
values: a1 a1 a407 a9 a13 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?109 values: a1 a1 a407 a9 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a69 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v431 
stateDuring: ?694 
=== Succesors ===
next: a808 
=== Usages ===
v442 ?695 ?696 
=== Predecessor ===
v842 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v431 stateDuring: ?694 #next: a808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a808 <|@
result v25|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
lastLocationAccess: - 
=== Succesors ===
next: a75 
=== Usages ===
a435 
=== Predecessor ===
a69 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v846 lastLocationAccess: - #next: a75  <|@  <|@
f <@~|@floating>@ <|@
tid a435 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a808 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a808  <|@  <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a435 a13 a407 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a435 a13 a407  <|@  <|@
tid ?695 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?109 
values: a1 a69 a1 a407 a9 a13 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?109 values: a1 a69 a1 a407 a9 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v436 
stateDuring: ?695 
=== Succesors ===
next: a809 
=== Usages ===
v442 ?696 
=== Predecessor ===
a808 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v436 stateDuring: ?695 #next: a809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a809 <|@
result v28|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
lastLocationAccess: - 
=== Succesors ===
next: a81 
=== Usages ===
a440 
=== Predecessor ===
a75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v853 lastLocationAccess: - #next: a81  <|@  <|@
f <@~|@floating>@ <|@
tid a440 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a809 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a809  <|@  <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a440 a407 a9 
=== Succesors ===
=== Usages ===
a81 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a440 a407 a9  <|@  <|@
tid ?696 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?109 
values: a1 a69 a75 
=== Succesors ===
=== Usages ===
a81 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?109 values: a1 a69 a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a81 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v441 
stateDuring: ?696 
=== Succesors ===
next: a84 
=== Usages ===
v442 
=== Predecessor ===
a809 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v441 stateDuring: ?696 #next: a84  <|@  <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a69 a75 a81 
=== Succesors ===
=== Usages ===
a84 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a69 a75 a81  <|@  <|@
tid ?697 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?109 
=== Succesors ===
=== Usages ===
a84 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a84 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v442 
stateDuring: ?697 
=== Succesors ===
next: v111 
=== Usages ===
a112 
=== Predecessor ===
a81 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v442 stateDuring: ?697 #next: v111  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
a84 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v87 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v87 #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a112 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v110 
values: a84 a13 
=== Succesors ===
=== Usages ===
?27 ?32 ?260 ?159 ?209 a241 v862 ?706 v510 ?707 v515 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v110 values: a84 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v111 v113 
=== Succesors ===
next: a810 
=== Usages ===
a112 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v111 v113 #next: a810  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: aload_0
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.benchmark() [bci: 19]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
values: a1 a112 a1 a5 a834 a13 
=== Succesors ===
=== Usages ===
a810 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a1 a112 a1 a5 a834 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a810 <|@
result v33|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-113675|0xfffffffffffe43f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?27 
guard: - 
address: v846 
lastLocationAccess: - 
=== Succesors ===
next: v136 
=== Usages ===
a447 v856 
=== Predecessor ===
v110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?27 guard: - address: v846 lastLocationAccess: - #next: v136  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
values: a1 a112 a1 a5 a9 a13 
=== Succesors ===
=== Usages ===
?698 ?699 ?700 ?701 ?158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a1 a112 a1 a5 a9 a13  <|@  <|@
f <@~|@floating>@ <|@
tid a447 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a810 
=== Succesors ===
=== Usages ===
?158 a139 ?698 v464 ?699 v467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a810  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?159 
values: a1 a447 a13 a5 
=== Succesors ===
=== Usages ===
?140 ?149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?159 values: a1 a447 a13 a5  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
a810 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a138 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v137 
values: a13 a450 
=== Succesors ===
=== Usages ===
?140 v146 v854 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v137 values: a13 a450  <|@  <|@
f <@~|@floating>@ <|@
tid a139 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v137 
values: a447 a453 
=== Succesors ===
=== Usages ===
?140 v141 v855 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v137 values: a447 a453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 151
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v136 
=== Succesors ===
next: v145 
=== Usages ===
a138 a139 v143 v148 v157 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v136 #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a139 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a139  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v143 #falseSuccessor: v142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a138 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a138  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v148 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?158 
values: - - - a138 a139 
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?158 values: - - - a138 a139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateBefore: ?140 
=== Succesors ===
next: a811 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?140 #next: a811  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
result [v35|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a138 
index: - 
=== Succesors ===
=== Usages ===
a811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a138 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a811 <|@
result v38|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v854 
lastLocationAccess: - 
=== Succesors ===
next: a812 
=== Usages ===
a450 
=== Predecessor ===
v642 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v854 lastLocationAccess: - #next: a812  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
result [v36|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a139 
index: - 
=== Succesors ===
=== Usages ===
a812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a139 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a812 <|@
result v39|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v855 
lastLocationAccess: - 
=== Succesors ===
next: v157 
=== Usages ===
a453 
=== Predecessor ===
a811 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v855 lastLocationAccess: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid a453 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a812 
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a812  <|@  <|@
f <@~|@floating>@ <|@
tid a450 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a811 
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a811  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
loopBegin: v137 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a812 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v137  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v137 
=== Succesors ===
next: a813 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v137 #next: a813  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?158 
=== Succesors ===
=== Usages ===
v843 a813 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?158  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
result [v33|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a810 
=== Succesors ===
=== Usages ===
a813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a813 <|@
result v42|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-116491|0xfffffffffffe38f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?149 
guard: - 
address: v856 
lastLocationAccess: - 
=== Succesors ===
next: v843 
=== Usages ===
a458 
=== Predecessor ===
v148 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?149 guard: - address: v856 lastLocationAccess: - #next: v843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-117771|0xfffffffffffe33f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?149 
object: a13 
=== Succesors ===
next: a119 
=== Usages ===
=== Predecessor ===
a813 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?149 object: a13 #next: a119  <|@  <|@
f <@~|@floating>@ <|@
tid a458 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a813 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a813  <|@  <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a458 a13 a5 
=== Succesors ===
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a458 a13 a5  <|@  <|@
tid ?698 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?159 
values: a1 a1 a447 a13 a5 
=== Succesors ===
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?159 values: a1 a1 a447 a13 a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a119 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v459 
stateDuring: ?698 
=== Succesors ===
next: a814 
=== Usages ===
v468 ?699 ?700 
=== Predecessor ===
v843 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v459 stateDuring: ?698 #next: a814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a814 <|@
result v45|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
lastLocationAccess: - 
=== Succesors ===
next: a125 
=== Usages ===
a463 
=== Predecessor ===
a119 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v853 lastLocationAccess: - #next: a125  <|@  <|@
f <@~|@floating>@ <|@
tid a463 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a814 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a814  <|@  <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a463 a5 a447 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a463 a5 a447  <|@  <|@
tid ?699 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?159 
values: a1 a119 a1 a447 a13 a5 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?159 values: a1 a119 a1 a447 a13 a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v464 
stateDuring: ?699 
=== Succesors ===
next: a815 
=== Usages ===
v468 ?700 
=== Predecessor ===
a814 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v464 stateDuring: ?699 #next: a815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a815 <|@
result v48|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v847 
lastLocationAccess: - 
=== Succesors ===
next: a131 
=== Usages ===
a466 
=== Predecessor ===
a125 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v847 lastLocationAccess: - #next: a131  <|@  <|@
f <@~|@floating>@ <|@
tid a466 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a815 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a815  <|@  <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a466 a447 a13 
=== Succesors ===
=== Usages ===
a131 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a466 a447 a13  <|@  <|@
tid ?700 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?159 
values: a1 a119 a125 
=== Succesors ===
=== Usages ===
a131 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?159 values: a1 a119 a125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a131 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v467 
stateDuring: ?700 
=== Succesors ===
next: a134 
=== Usages ===
v468 
=== Predecessor ===
a815 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v467 stateDuring: ?700 #next: a134  <|@  <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a119 a125 a131 
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a119 a125 a131  <|@  <|@
tid ?701 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?159 
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v468 
stateDuring: ?701 
=== Succesors ===
next: v161 
=== Usages ===
a162 
=== Predecessor ===
a131 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v468 stateDuring: ?701 #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
a134 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v137 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v137 #next: v163  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
v143 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a162 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v160 
values: a134 a5 
=== Succesors ===
=== Usages ===
?32 ?260 ?209 v505 ?706 v844 v863 ?707 v515 a240 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v160 values: a134 a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v161 v163 
=== Succesors ===
next: a816 
=== Usages ===
a162 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v161 v163 #next: a816  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: aload_0
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.benchmark() [bci: 19]
stackSize: 3
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
values: a1 a112 a162 a1 a5 a9 a834 
=== Succesors ===
=== Usages ===
a816 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a1 a112 a162 a1 a5 a9 a834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a816 <|@
result v53|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-120331|0xfffffffffffe29f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v853 
lastLocationAccess: - 
=== Succesors ===
next: v186 
=== Usages ===
a473 v859 
=== Predecessor ===
v160 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v853 lastLocationAccess: - #next: v186  <|@  <|@
tid ?209 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
values: a1 a112 a162 
=== Succesors ===
=== Usages ===
?702 ?703 ?704 ?705 ?208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a1 a112 a162  <|@  <|@
f <@~|@floating>@ <|@
tid a473 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a816 
=== Succesors ===
=== Usages ===
?208 a189 ?702 v488 ?703 v491 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a816  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?209 
values: a1 a473 a5 a9 
=== Succesors ===
=== Usages ===
?190 ?199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?209 values: a1 a473 a5 a9  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
a816 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a188 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v187 
values: a5 a476 
=== Succesors ===
=== Usages ===
?190 v196 v857 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v187 values: a5 a476  <|@  <|@
f <@~|@floating>@ <|@
tid a189 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v187 
values: a473 a479 
=== Succesors ===
=== Usages ===
?190 v191 v858 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v187 values: a473 a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 205
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v186 
=== Succesors ===
next: v195 
=== Usages ===
a188 a189 v193 v198 v207 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v186 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a189 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a189  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v193 #falseSuccessor: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a188 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a188  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v198 #falseSuccessor: v197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
tid ?190 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?208 
values: - - - a188 a189 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?208 values: - - - a188 a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateBefore: ?190 
=== Succesors ===
next: a817 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?190 #next: a817  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
result [v55|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a188 
index: - 
=== Succesors ===
=== Usages ===
a817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a188 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a817 <|@
result v58|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
lastLocationAccess: - 
=== Succesors ===
next: a818 
=== Usages ===
a476 
=== Predecessor ===
v643 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v857 lastLocationAccess: - #next: a818  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
result [v56|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a189 
index: - 
=== Succesors ===
=== Usages ===
a818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a189 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a818 <|@
result v59|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
a479 
=== Predecessor ===
a817 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v858 lastLocationAccess: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid a479 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a818 
=== Succesors ===
=== Usages ===
a189 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a818  <|@  <|@
f <@~|@floating>@ <|@
tid a476 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a817 
=== Succesors ===
=== Usages ===
a188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a817  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
loopBegin: v187 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a818 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v187 
=== Succesors ===
next: a819 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v187 #next: a819  <|@  <|@
tid ?199 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?208 
=== Succesors ===
=== Usages ===
a819 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?208  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
result [v53|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a816 
=== Succesors ===
=== Usages ===
a819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a819 <|@
result v62|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-123147|0xfffffffffffe1ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?199 
guard: - 
address: v859 
lastLocationAccess: - 
=== Succesors ===
next: a169 
=== Usages ===
a484 
=== Predecessor ===
v198 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?199 guard: - address: v859 lastLocationAccess: - #next: a169  <|@  <|@
f <@~|@floating>@ <|@
tid a484 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a819 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a819  <|@  <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a484 a5 a9 
=== Succesors ===
=== Usages ===
a169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a484 a5 a9  <|@  <|@
tid ?702 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?209 
values: a1 a1 a473 a5 a9 
=== Succesors ===
=== Usages ===
a169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?209 values: a1 a1 a473 a5 a9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a169 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v485 
stateDuring: ?702 
=== Succesors ===
next: a820 
=== Usages ===
v492 ?703 ?704 
=== Predecessor ===
a819 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v485 stateDuring: ?702 #next: a820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a820 <|@
result v65|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v847 
lastLocationAccess: - 
=== Succesors ===
next: a175 
=== Usages ===
a487 
=== Predecessor ===
a169 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v847 lastLocationAccess: - #next: a175  <|@  <|@
f <@~|@floating>@ <|@
tid a487 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a820 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a820  <|@  <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a487 a9 a473 
=== Succesors ===
=== Usages ===
a175 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a487 a9 a473  <|@  <|@
tid ?703 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?209 
values: a1 a169 a1 a473 a5 a9 
=== Succesors ===
=== Usages ===
a175 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?209 values: a1 a169 a1 a473 a5 a9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a175 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v488 
stateDuring: ?703 
=== Succesors ===
next: a821 
=== Usages ===
v492 ?704 
=== Predecessor ===
a820 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v488 stateDuring: ?703 #next: a821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a821 <|@
result v68|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
lastLocationAccess: - 
=== Succesors ===
next: a181 
=== Usages ===
a490 
=== Predecessor ===
a175 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v846 lastLocationAccess: - #next: a181  <|@  <|@
f <@~|@floating>@ <|@
tid a490 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a821 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a821  <|@  <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a490 a473 a5 
=== Succesors ===
=== Usages ===
a181 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a490 a473 a5  <|@  <|@
tid ?704 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?209 
values: a1 a169 a175 
=== Succesors ===
=== Usages ===
a181 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?209 values: a1 a169 a175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a181 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v491 
stateDuring: ?704 
=== Succesors ===
next: a184 
=== Usages ===
v492 
=== Predecessor ===
a821 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v491 stateDuring: ?704 #next: a184  <|@  <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a169 a175 a181 
=== Succesors ===
=== Usages ===
a184 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a169 a175 a181  <|@  <|@
tid ?705 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?209 
=== Succesors ===
=== Usages ===
a184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a184 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v492 
stateDuring: ?705 
=== Succesors ===
next: v211 
=== Usages ===
a212 
=== Predecessor ===
a181 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v492 stateDuring: ?705 #next: v211  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
a184 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v187 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v187 #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v193 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a212 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v210 
values: a184 a9 
=== Succesors ===
=== Usages ===
a269 v505 ?706 v510 ?707 v845 v864 ?260 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v210 values: a184 a9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v211 v213 
=== Succesors ===
next: v238 
=== Usages ===
a212 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v211 v213 #next: v238  <|@  <|@
tid ?261 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?266 
=== Succesors ===
=== Usages ===
?706 ?707 ?708 ?709 ?260 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?266  <|@  <|@
tid ?260 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?261 
values: a1 a112 a162 a212 
=== Succesors ===
=== Usages ===
?242 ?251 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?261 values: a1 a112 a162 a212  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
v210 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a240 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v239 
values: a162 a496 
=== Succesors ===
=== Usages ===
?242 v248 v860 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v239 values: a162 a496  <|@  <|@
f <@~|@floating>@ <|@
tid a241 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v239 
values: a112 a499 
=== Succesors ===
=== Usages ===
?242 v243 v861 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v239 values: a112 a499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 259
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v238 
=== Succesors ===
next: v247 
=== Usages ===
a240 a241 v245 v250 v259 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v238 #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a241 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a241  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v243 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v243 #trueSuccessor: v245 #falseSuccessor: v244  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a240 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a240  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v250 
falseSuccessor: v249 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v250 #falseSuccessor: v249  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?260 
values: - - - a240 a241 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?260 values: - - - a240 a241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateBefore: ?242 
=== Succesors ===
next: a822 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?242 #next: a822  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
result [v73|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a240 
index: - 
=== Succesors ===
=== Usages ===
a822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a240 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a822 <|@
result v76|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
lastLocationAccess: - 
=== Succesors ===
next: a823 
=== Usages ===
a496 
=== Predecessor ===
v644 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v860 lastLocationAccess: - #next: a823  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
result [v74|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a241 
index: - 
=== Succesors ===
=== Usages ===
a823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a241 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a823 <|@
result v77|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
lastLocationAccess: - 
=== Succesors ===
next: v259 
=== Usages ===
a499 
=== Predecessor ===
a822 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v861 lastLocationAccess: - #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid a499 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a823 
=== Succesors ===
=== Usages ===
a241 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a823  <|@  <|@
f <@~|@floating>@ <|@
tid a496 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a822 
=== Succesors ===
=== Usages ===
a240 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a822  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
loopBegin: v239 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a823 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v239  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v239 
=== Succesors ===
next: a824 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v239 #next: a824  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?260 
=== Succesors ===
=== Usages ===
v845 a824 v844 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?260  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
result [v32|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a112 
index: - 
=== Succesors ===
=== Usages ===
a824 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a824 <|@
result v80|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-128267|0xfffffffffffe0af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?251 
guard: - 
address: v862 
lastLocationAccess: - 
=== Succesors ===
next: v844 
=== Usages ===
a504 
=== Predecessor ===
v250 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?251 guard: - address: v862 lastLocationAccess: - #next: v844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-129547|0xfffffffffffe05f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?251 
object: a162 
=== Succesors ===
next: v845 
=== Usages ===
=== Predecessor ===
a824 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?251 object: a162 #next: v845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-130827|0xfffffffffffe00f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?251 
object: a212 
=== Succesors ===
next: a219 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?251 object: a212 #next: a219  <|@  <|@
f <@~|@floating>@ <|@
tid a504 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a824 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a824  <|@  <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a504 a162 a212 
=== Succesors ===
=== Usages ===
a219 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a504 a162 a212  <|@  <|@
tid ?706 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?261 
values: a1 a1 a112 a162 a212 
=== Succesors ===
=== Usages ===
a219 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?261 values: a1 a1 a112 a162 a212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a219 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v505 
stateDuring: ?706 
=== Succesors ===
next: a825 
=== Usages ===
v516 ?707 ?708 
=== Predecessor ===
v845 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v505 stateDuring: ?706 #next: a825  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
result [v52|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a162 
index: - 
=== Succesors ===
=== Usages ===
a825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a162 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a825 <|@
result v83|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
lastLocationAccess: - 
=== Succesors ===
next: a226 
=== Usages ===
a509 
=== Predecessor ===
a219 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v863 lastLocationAccess: - #next: a226  <|@  <|@
f <@~|@floating>@ <|@
tid a509 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a825 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a825  <|@  <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a509 a212 a112 
=== Succesors ===
=== Usages ===
a226 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a509 a212 a112  <|@  <|@
tid ?707 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?261 
values: a1 a219 a1 a112 a162 a212 
=== Succesors ===
=== Usages ===
a226 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?261 values: a1 a219 a1 a112 a162 a212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a226 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v510 
stateDuring: ?707 
=== Succesors ===
next: a826 
=== Usages ===
v516 ?708 
=== Predecessor ===
a825 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v510 stateDuring: ?707 #next: a826  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
result [v72|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a212 
index: - 
=== Succesors ===
=== Usages ===
a826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a212 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a826 <|@
result v86|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
lastLocationAccess: - 
=== Succesors ===
next: a233 
=== Usages ===
a514 
=== Predecessor ===
a226 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v864 lastLocationAccess: - #next: a233  <|@  <|@
f <@~|@floating>@ <|@
tid a514 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a826 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a826  <|@  <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a514 a112 a162 
=== Succesors ===
=== Usages ===
a233 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a514 a112 a162  <|@  <|@
tid ?708 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?261 
values: a1 a219 a226 
=== Succesors ===
=== Usages ===
a233 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?261 values: a1 a219 a226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a233 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v515 
stateDuring: ?708 
=== Succesors ===
next: a236 
=== Usages ===
v516 
=== Predecessor ===
a826 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v515 stateDuring: ?708 #next: a236  <|@  <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a219 a226 a233 
=== Succesors ===
=== Usages ===
a236 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a219 a226 a233  <|@  <|@
tid ?709 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?261 
=== Succesors ===
=== Usages ===
a236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a236 <|@
result v89|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v516 
stateDuring: ?709 
=== Succesors ===
next: v268 
=== Usages ===
a269 
=== Predecessor ===
a233 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v516 stateDuring: ?709 #next: v268  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a236 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.benchmark() [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v239 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v239 #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a269 <|@
result v90|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v267 
values: a236 a13 a212 a13 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v267 values: a236 a13 a212 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v268 v270 v271 v397 
=== Succesors ===
next: a827 
=== Usages ===
a269 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v268 v270 v271 v397 #next: a827  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: astore_1
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at List.benchmark() [bci: 19]
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a834 
=== Succesors ===
=== Usages ===
a827 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a834  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
result [v90|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a269 
index: - 
=== Succesors ===
=== Usages ===
a827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a269 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a827 <|@
result v91|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-132619|0xfffffffffffdf9f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List.benchmark() [bci: 24]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?17 
guard: - 
address: v865 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
v866 v544 
=== Predecessor ===
v267 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?17 guard: - address: v865 lastLocationAccess: - #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List.benchmark() [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a827 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a827  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List.benchmark() [bci: 24]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i355 i345 i283 ?347 i293 i350 i302 ?352 i311 i360 i320 ?710 i331 ?332 i335 ?337 i340 ?342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List.benchmark() [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.09998047256395237
stamp: void
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v277 
=== Usages ===
=== Predecessor ===
a827 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v278 #falseSuccessor: v277  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction v91|DWORD[_] = MOV input: [v90|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v91|DWORD[_], y: v91|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v278 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a828 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a828  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
result [v91|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a827 
=== Succesors ===
=== Usages ===
a828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a828 <|@
result v92|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
lastLocationAccess: - 
=== Succesors ===
next: v291 
=== Usages ===
v867 v545 
=== Predecessor ===
v277 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v866 lastLocationAccess: - #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a828 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a828  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.09998047256395237
stamp: void
=== Inputs ===
condition: v545 
=== Succesors ===
trueSuccessor: v290 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
a828 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v545 #trueSuccessor: v290 #falseSuccessor: v289  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV input: [v91|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v290 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a829 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a829  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
result [v92|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a828 
=== Succesors ===
=== Usages ===
a829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a829 <|@
result v93|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
lastLocationAccess: - 
=== Succesors ===
next: v300 
=== Usages ===
v868 v546 
=== Predecessor ===
v289 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v867 lastLocationAccess: - #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a829 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a829  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.09998047256395237
stamp: void
=== Inputs ===
condition: v546 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v298 
=== Usages ===
=== Predecessor ===
a829 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v546 #trueSuccessor: v299 #falseSuccessor: v298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[_] = MOV input: [v92|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v93|DWORD[_], y: v93|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a830 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a830  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
result [v93|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a829 
=== Succesors ===
=== Usages ===
a830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a830 <|@
result v94|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v868 
lastLocationAccess: - 
=== Succesors ===
next: v309 
=== Usages ===
v869 v547 
=== Predecessor ===
v298 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v868 lastLocationAccess: - #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a830 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a830  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.09998047256395237
stamp: void
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
a830 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v308 #falseSuccessor: v307  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[_] = MOV input: [v93|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a831 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a831  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
result [v94|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a830 
=== Succesors ===
=== Usages ===
a831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a831 <|@
result v95|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v869 
lastLocationAccess: - 
=== Succesors ===
next: v318 
=== Usages ===
v870 v548 
=== Predecessor ===
v307 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v869 lastLocationAccess: - #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a831  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.09998047256395237
stamp: void
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v317 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
a831 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v317 #falseSuccessor: v316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[_] = MOV input: [v94|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v95|DWORD[_], y: v95|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v317 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a832 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a832  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
result [v95|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a831 
=== Succesors ===
=== Usages ===
a832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a832 <|@
result v96|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
a536 v537 
=== Predecessor ===
v316 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v870 lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a832 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a832  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.09998047256395237
stamp: void
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
a832 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v326 #falseSuccessor: v325  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[_] = MOV input: [v95|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v96|DWORD[_], y: v96|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i329 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i329  <|@  <|@
f <@~|@floating>@ <|@
tid a536 <|@
result v97|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a832 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a832  <|@  <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<LList$Element;, resolved>]
stamp: void
targetMethod: HotSpotMethod<List$Element.length()>
=== Inputs ===
arguments: a536 
=== Succesors ===
=== Usages ===
i329 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a536  <|@  <|@
tid ?357 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?352 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?352 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?357 
values: i280 
=== Succesors ===
=== Usages ===
?347 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?357 values: i280  <|@  <|@
tid ?347 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?352 
values: i280 
=== Succesors ===
=== Usages ===
?342 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?352 values: i280  <|@  <|@
tid ?342 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?347 
values: i280 
=== Succesors ===
=== Usages ===
?337 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?347 values: i280  <|@  <|@
tid ?337 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?342 
values: i280 
=== Succesors ===
=== Usages ===
?332 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?342 values: i280  <|@  <|@
tid ?332 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: i280 
=== Succesors ===
=== Usages ===
?710 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: i280  <|@  <|@
tid ?710 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?332 
values: i280 
=== Succesors ===
=== Usages ===
i329 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?332 values: i280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i329 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 14
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
polymorphic: false
stamp: i32
targetMethod: Direct#List$Element.length
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v540 
stateDuring: ?710 
=== Succesors ===
next: v336 
=== Usages ===
i331 
=== Predecessor ===
v325 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v540 stateDuring: ?710 #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: i32
=== Inputs ===
x: i329 
y: i280 
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i329 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
i329 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i335 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v333 
values: i280 i331 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v333 values: i280 i331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v334 v336 
=== Succesors ===
next: v341 
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v334 v336 #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: i32
=== Inputs ===
x: i335 
y: i280 
=== Succesors ===
=== Usages ===
i340 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i335 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v333 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC value: v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i340 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v338 
values: i280 i320 
=== Succesors ===
=== Usages ===
i311 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v338 values: i280 i320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v339 v341 
=== Succesors ===
next: v346 
=== Usages ===
i340 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v339 v341 #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: i32
=== Inputs ===
x: i340 
y: i280 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i340 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
v338 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = INC value: v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i345 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v343 
values: i280 i311 
=== Succesors ===
=== Usages ===
i302 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v343 values: i280 i311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v344 v346 
=== Succesors ===
next: v351 
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v344 v346 #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: i32
=== Inputs ===
x: i345 
y: i280 
=== Succesors ===
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i345 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC value: v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v105|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i350 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v348 
values: i280 i302 
=== Succesors ===
=== Usages ===
i293 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v348 values: i280 i302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v349 v351 
=== Succesors ===
next: v356 
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v349 v351 #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid i293 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List.benchmark() [bci: 24]
stamp: i32
=== Inputs ===
x: i350 
y: i280 
=== Succesors ===
=== Usages ===
i355 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i350 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i355 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v353 
values: i280 i293 
=== Succesors ===
=== Usages ===
i283 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v353 values: i280 i293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v354 v356 
=== Succesors ===
next: v361 
=== Usages ===
i355 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v354 v356 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid i283 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List.benchmark() [bci: 24]
stamp: i32
=== Inputs ===
x: i355 
y: i280 
=== Succesors ===
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i355 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v353 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC value: v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v109|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i360 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v358 
values: i280 i283 
=== Succesors ===
=== Usages ===
?20 v683 i659 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v358 values: i280 i283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v359 v361 
=== Succesors ===
next: v686 
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v359 v361 #next: v686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
locations: [INIT_LOCATION, Integer.value, Integer$IntegerCache.cache, Array: Object]
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: 128
stableDimension: 0
stamp: i32 [128]
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i659 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: i32
=== Inputs ===
x: i360 
y: i655 
=== Succesors ===
=== Usages ===
v667 j674 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i360 y: i655  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
result int[256|0x100] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: 256
stableDimension: 0
stamp: i32 [256]
stampKind: i32
value: int[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i659 
y: i666 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i659 y: i666  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v667 
=== Succesors ===
trueSuccessor: v657 
falseSuccessor: v656 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v667 #trueSuccessor: v657 #falseSuccessor: v656  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = LEA address: [v110|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v111|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a833 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a833  <|@  <|@
f <@~|@floating>@ <|@
tid a658 <|@
result v112|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: Instance<java.lang.Integer[]>
stableDimension: 1
stamp: a!# java.lang.Integer[]
stampKind: a java.lang.Object
value: Object[Instance<java.lang.Integer[]>]
=== Inputs ===
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j674 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i659 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i659  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
result [v112|QWORD[.] + v111|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a658 
index: j674 
=== Succesors ===
=== Usages ===
a833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a658 index: j674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a833 <|@
result v113|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Integer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: n# java.lang.Integer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
lastLocationAccess: - 
=== Succesors ===
next: v660 
=== Usages ===
a673 
=== Predecessor ===
v657 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v871 lastLocationAccess: - #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid a673 <|@
result v114|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
op: Uncompress
stamp: a# java.lang.Integer
=== Inputs ===
value: a833 
=== Succesors ===
=== Usages ===
a663 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a833  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
a833 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOV input: [v112|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v798  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j753 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j753 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j780 
=== Usages ===
v873 v874 
=== Predecessor ===
v798 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j780  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j753 
index: - 
=== Succesors ===
=== Usages ===
j780 v782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j753 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j780 <|@
result v115|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v873 
lastLocationAccess: - 
=== Succesors ===
next: j781 
=== Usages ===
j760 v875 v876 a771 v877 v878 
=== Predecessor ===
j753 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v873 lastLocationAccess: - #next: j781  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j753 
index: - 
=== Succesors ===
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j753 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j781 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
lastLocationAccess: - 
=== Succesors ===
next: v759 
=== Usages ===
v761 
=== Predecessor ===
j780 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v874 lastLocationAccess: - #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid j401 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.benchmark() [bci: 19]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j760 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j760 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: i64
=== Inputs ===
x: j780 
y: j401 
=== Succesors ===
=== Usages ===
v761 v782 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j780 y: j401  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j781 
y: j760 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j781 y: j760  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v761 
=== Succesors ===
trueSuccessor: v762 
falseSuccessor: v763 
=== Usages ===
=== Predecessor ===
j781 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v761 #trueSuccessor: v762 #falseSuccessor: v763  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA address: [v115|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v116|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a764 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a764  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<List.benchmark()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at List.benchmark() [bci: 24]
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i360 
=== Succesors ===
=== Usages ===
v840 a764 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i360  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: meta{HotSpotType<Ljava/lang/Integer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Integer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a764 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a764 <|@
result v118|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?20 
arguments: v752 
=== Succesors ===
next: v840 
=== Usages ===
v840 a778 
=== Predecessor ===
v762 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?20 arguments: v752 #next: v840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-203377|0xfffffffffffce58f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?20 
object: a764 
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
a764 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?20 object: a764 #next: v766  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
v840 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [v118|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v118|QWORD[.]] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v782 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v873 
lastLocationAccess: - 
value: j760 
stateAfter: - 
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v873 lastLocationAccess: - value: j760 stateAfter: - #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
result [v115|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
address: v877 
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v877 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
result [v115|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v875 
lastLocationAccess: - 
value: j768 
stateAfter: - 
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v875 lastLocationAccess: - value: j768 stateAfter: - #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
result [v115|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
result meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140232611594240 shift: 0)
stampKind: Klass*(compressed base: 140232611594240 shift: 0)
value: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v878 
lastLocationAccess: - 
value: v800 
stateAfter: - 
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v878 lastLocationAccess: - value: v800 stateAfter: - #next: v788  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
result [v115|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v876 
lastLocationAccess: - 
value: i758 
stateAfter: - 
=== Succesors ===
next: a771 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v876 lastLocationAccess: - value: i758 stateAfter: - #next: a771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a771 <|@
result v120|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j780 
=== Succesors ===
next: v772 
=== Usages ===
a778 
=== Predecessor ===
v788 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j780 #next: v772  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
a771 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v115|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v120|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a778 <|@
result v121|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v767 
values: a764 a771 
=== Succesors ===
=== Usages ===
v872 a684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v767 values: a764 a771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v766 v772 
=== Succesors ===
next: v683 
=== Usages ===
a778 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v766 v772 #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
result [v121|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a778 
index: - 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v872 
lastLocationAccess: - 
value: i360 
stateAfter: - 
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v872 lastLocationAccess: - value: i360 stateAfter: - #next: v685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a684 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a684 <|@
result v121|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: a!# java.lang.Integer
=== Inputs ===
object: a778 
=== Succesors ===
next: v662 
=== Usages ===
a663 
=== Predecessor ===
v685 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a778 #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
a684 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[.] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a663 <|@
result v122|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: a# java.lang.Integer
valueDescription: a java.lang.Object
=== Inputs ===
merge: v661 
values: a673 a684 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v661 values: a673 a684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.BoxingSnippets.intValueOf(int, SnippetCounter) [bci: 0]
at java.lang.Integer.valueOf(int) [bci: -1]
at List.benchmark() [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v660 v662 
=== Succesors ===
next: v22 
=== Usages ===
a663 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v660 v662 #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.benchmark() [bci: 30]
stamp: void
=== Inputs ===
memoryMap: - 
result: a663 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a663  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 4]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 10]
stack: v0|QWORD[.] v1|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 16]
stack: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction v91|DWORD[_] = MOV input: [v90|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v91|DWORD[_], y: v91|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV input: [v91|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[_] = MOV input: [v92|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v93|DWORD[_], y: v93|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[_] = MOV input: [v93|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[_] = MOV input: [v94|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v95|DWORD[_], y: v95|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[_] = MOV input: [v95|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v96|DWORD[_], y: v96|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC value: v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = INC value: v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC value: v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v105|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC value: v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v109|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = LEA address: [v110|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v111|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA address: [v115|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v116|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v115|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v120|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[.] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOV input: [v112|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [v118|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v118|QWORD[.]] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 4]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 10]
stack: v0|QWORD[.] v1|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 16]
stack: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction v91|DWORD[_] = MOV input: [v90|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v91|DWORD[_], y: v91|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV input: [v91|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[_] = MOV input: [v92|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v93|DWORD[_], y: v93|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[_] = MOV input: [v93|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[_] = MOV input: [v94|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v95|DWORD[_], y: v95|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[_] = MOV input: [v95|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v96|DWORD[_], y: v96|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC value: v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = INC value: v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC value: v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v105|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC value: v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v109|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = LEA address: [v110|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v111|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA address: [v115|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v116|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v115|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v120|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[.] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOV input: [v112|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [v118|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v118|QWORD[.]] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 4]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 10]
stack: v0|QWORD[.] v1|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 16]
stack: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction v91|DWORD[_] = MOV input: [v90|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v91|DWORD[_], y: v91|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV input: [v91|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[_] = MOV input: [v92|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v93|DWORD[_], y: v93|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[_] = MOV input: [v93|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[_] = MOV input: [v94|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v95|DWORD[_], y: v95|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[_] = MOV input: [v95|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v96|DWORD[_], y: v96|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC value: v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = INC value: v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC value: v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v105|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC value: v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v109|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = LEA address: [v110|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v111|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA address: [v115|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v116|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v115|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v120|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[.] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOV input: [v112|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [v118|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v118|QWORD[.]] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: v0|QWORD[.] v1|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction v91|DWORD[_] = MOV input: [v90|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v91|DWORD[_], y: v91|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV input: [v91|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[_] = MOV input: [v92|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v93|DWORD[_], y: v93|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[_] = MOV input: [v93|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[_] = MOV input: [v94|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v95|DWORD[_], y: v95|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[_] = MOV input: [v95|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v96|DWORD[_], y: v96|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC value: v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v101|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = INC value: v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC value: v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v105|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v107|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC value: v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v109|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = LEA address: [v110|DWORD + 128] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v111|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA address: [v115|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v116|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v115|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v120|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[.] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOV input: [v112|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [v118|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v118|QWORD[.]] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   14  <|@ instruction v1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: v0|QWORD[.] v1|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   22  <|@ instruction v2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   30  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   50  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   62  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   92  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  104  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  108  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  126  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  138  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  154  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  170  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  182  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  186  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  190  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  194  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  206  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  208  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  210  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  226  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  238  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  242  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  254  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  270  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  282  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  286  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  290  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  294  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  306  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  324  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  336  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  352  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  368  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  380  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  384  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  388  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  400  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  422  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  434  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  438  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  450  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  466  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  478  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction v91|DWORD[_] = MOV input: [v90|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: v91|DWORD[_], y: v91|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v92|DWORD[_] = MOV input: [v91|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction v93|DWORD[_] = MOV input: [v92|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: v93|DWORD[_], y: v93|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction v94|DWORD[_] = MOV input: [v93|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction v95|DWORD[_] = MOV input: [v94|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: v95|DWORD[_], y: v95|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction v96|DWORD[_] = MOV input: [v95|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v96|DWORD[_], y: v96|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  526  <|@ instruction v98|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  556  <|@ instruction [v100|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction v101|DWORD = INC value: v100|DWORD size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [v101|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  562  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction v103|DWORD = INC value: v102|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  568  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  570  <|@ instruction v105|DWORD = INC value: v104|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [v105|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  574  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  576  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [v107|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  580  <|@ instruction [v108|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction v109|DWORD = INC value: v108|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [v109|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  586  <|@ instruction [v110|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  588  <|@ instruction v111|DWORD = LEA address: [v110|DWORD + 128] size: DWORD <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH x: v111|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction v115|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  596  <|@ instruction v116|QWORD = LEA address: [v115|QWORD + 16] size: QWORD <|@ <|@
      nr  598  <|@ instruction CMPBRANCH (x: v116|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOV (x: [r15|QWORD + 440], y: v116|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction AMD64PREFETCH ~address: [v115|QWORD + 208] instr: 3 <|@ <|@
      nr  606  <|@ instruction MOV x: [v115|QWORD] y: 1 size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  610  <|@ instruction MOV x: [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  612  <|@ instruction v120|QWORD[.] = MOVE input: v115|QWORD moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [v120|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  616  <|@ instruction [v121|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction MOV (x: [v121|QWORD[.] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  626  <|@ instruction v113|DWORD[_] = MOV input: [v112|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  628  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  632  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v117|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  646  <|@ instruction v118|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [v118|QWORD[.]] state [bci:27] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [v118|QWORD[.]] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   14  <|@ instruction v1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: v0|QWORD[.] v1|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   22  <|@ instruction v2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   30  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   50  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   62  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   92  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  104  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  108  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  126  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  138  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  154  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  170  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  182  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  186  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  190  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  194  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  206  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  208  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  210  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  226  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  238  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  242  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  254  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  270  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  282  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  286  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  290  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  294  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  306  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  324  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  336  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  352  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  368  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  380  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  384  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  388  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  400  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  422  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  434  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  438  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  450  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  466  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  478  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction v91|DWORD[_] = MOV input: [v90|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: v91|DWORD[_], y: v91|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v92|DWORD[_] = MOV input: [v91|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction v93|DWORD[_] = MOV input: [v92|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: v93|DWORD[_], y: v93|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction v94|DWORD[_] = MOV input: [v93|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction v95|DWORD[_] = MOV input: [v94|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: v95|DWORD[_], y: v95|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction v96|DWORD[_] = MOV input: [v95|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v96|DWORD[_], y: v96|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  526  <|@ instruction v98|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  556  <|@ instruction [v100|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction v101|DWORD = INC value: v100|DWORD size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [v101|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  562  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction v103|DWORD = INC value: v102|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  568  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  570  <|@ instruction v105|DWORD = INC value: v104|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [v105|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  574  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  576  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [v107|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  580  <|@ instruction [v108|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction v109|DWORD = INC value: v108|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [v109|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  586  <|@ instruction [v110|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  588  <|@ instruction v111|DWORD = LEA address: [v110|DWORD + 128] size: DWORD <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH x: v111|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction v115|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  596  <|@ instruction v116|QWORD = LEA address: [v115|QWORD + 16] size: QWORD <|@ <|@
      nr  598  <|@ instruction CMPBRANCH (x: v116|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOV (x: [r15|QWORD + 440], y: v116|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction AMD64PREFETCH ~address: [v115|QWORD + 208] instr: 3 <|@ <|@
      nr  606  <|@ instruction MOV x: [v115|QWORD] y: 1 size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  610  <|@ instruction MOV x: [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  612  <|@ instruction v120|QWORD[.] = MOVE input: v115|QWORD moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [v120|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  616  <|@ instruction [v121|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction MOV (x: [v121|QWORD[.] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  626  <|@ instruction v113|DWORD[_] = MOV input: [v112|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  628  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  632  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v117|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  646  <|@ instruction v118|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [v118|QWORD[.]] state [bci:27] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [v118|QWORD[.]] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v122|q [0, 1[[12, 14[[20, 22[[28, 30[[136, 138[[152, 154[[168, 170[[180, 182[[236, 238[[252, 254[[268, 270[[280, 282[[334, 336[[350, 352[[366, 368[[378, 380[[432, 434[[448, 450[[464, 466[[476, 478[[524, 526[[634, 636[[644, 646[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 1[[12, 13[[20, 21[[28, 29[[132, 137[[148, 153[[164, 169[[176, 181[[232, 237[[248, 253[[264, 269[[276, 281[[330, 335[[346, 351[[362, 367[[374, 379[[428, 433[[444, 449[[460, 465[[472, 477[[524, 525[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v23|q [0, 1[[10, 13[[18, 21[[26, 29[[130, 137[[146, 153[[162, 169[[174, 181[[230, 237[[246, 253[[262, 269[[274, 281[[328, 335[[344, 351[[360, 367[[372, 379[[426, 433[[442, 449[[458, 465[[470, 477[[524, 525[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 6[[8, 13[[16, 21[[24, 29[[128, 137[[144, 153[[160, 169[[172, 181[[228, 237[[244, 253[[260, 269[[272, 281[[326, 335[[342, 351[[358, 367[[370, 379[[424, 433[[440, 449[[456, 465[[468, 477[[522, 525[[642, 644[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 1[[12, 13[[20, 21[[28, 29[[134, 137[[150, 153[[166, 169[[178, 181[[234, 237[[250, 253[[266, 269[[278, 281[[332, 335[[348, 351[[364, 367[[376, 379[[430, 433[[446, 449[[462, 465[[474, 477[[524, 525[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 72[[76, 80[[84, 410[[414, 468[6 MustHaveRegister 8 ShouldHaveRegister 16 ShouldHaveRegister 24 ShouldHaveRegister 128 ShouldHaveRegister 144 ShouldHaveRegister 160 ShouldHaveRegister 172 ShouldHaveRegister 228 ShouldHaveRegister 244 ShouldHaveRegister 260 ShouldHaveRegister 272 ShouldHaveRegister 326 ShouldHaveRegister 342 ShouldHaveRegister 358 ShouldHaveRegister 370 ShouldHaveRegister 424 ShouldHaveRegister 440 ShouldHaveRegister 456 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rax|q [14, 72[[76, 80[[84, 316[[320, 364[14 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 218 ShouldHaveRegister 234 ShouldHaveRegister 248 ShouldHaveRegister 256 MustHaveRegister 292 ShouldHaveRegister 330 ShouldHaveRegister 338 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rax|q [22, 72[[76, 80[[84, 319[[320, 354[22 MustHaveRegister 40 MustHaveRegister 44 MustHaveRegister 90 ShouldHaveRegister 122 MustHaveRegister 132 ShouldHaveRegister 140 MustHaveRegister 166 ShouldHaveRegister 188 MustHaveRegister 318 ShouldHaveRegister 332 ShouldHaveRegister 346 ShouldHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q rax|q [30, 75[[76, 83[[84, 288[30 MustHaveRegister 74 ShouldHaveRegister 82 ShouldHaveRegister 116 ShouldHaveRegister 124 MustHaveRegister 134 ShouldHaveRegister 148 ShouldHaveRegister 156 MustHaveRegister 192 ShouldHaveRegister 224 MustHaveRegister 232 ShouldHaveRegister 240 MustHaveRegister 266 ShouldHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [36, 72[[76, 80[[84, 114[[118, 120[36 MustHaveRegister 38 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v4|d [38, 72[[76, 80[[84, 114[[118, 164[38 MustHaveRegister 48 ShouldHaveRegister 90 ShouldHaveRegister 150 ShouldHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v6|d [46, 49[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v13|q [50, 64[52 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v14|q [50, 62[56 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [60, 61[60 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[v11|d]" v11|d -1 [62, 68[62 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|d [66, 71[66 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v11|d [68, 71[68 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v21|q [92, 104[98 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v20|q [92, 106[94 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[v18|d]" v18|d -1 [104, 110[104 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [106, 108[106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v19|d [108, 113[108 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v18|d [110, 113[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [120, 126[120 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v22|d [126, 130[126 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q rax|q [138, 174[138 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v25|d [142, 146[142 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q rax|q [154, 176[154 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v28|d [158, 162[158 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q rax|q [170, 178[170 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q rax|q [182, 185[182 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v31|q [186, 410[[414, 460[386 ShouldHaveRegister 416 MustHaveRegister 446 ShouldHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [188, 216[[220, 222[188 MustHaveRegister 190 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v33|d [190, 216[[220, 264[190 MustHaveRegister 192 ShouldHaveRegister 250 ShouldHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v41|q [194, 206[200 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v40|q [194, 208[196 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v38|d DWORD "[v38|d]" v38|d -1 [206, 212[206 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [208, 210[208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v39|d [210, 215[210 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v38|d [212, 215[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [222, 226[222 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v42|d [226, 230[226 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q rax|q [238, 274[238 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v45|d [242, 246[242 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q rax|q [254, 276[254 MustHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v48|d [258, 262[258 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q rax|q [270, 278[270 MustHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q rax|q [282, 285[282 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v51|q [286, 410[[414, 462[386 ShouldHaveRegister 418 MustHaveRegister 428 ShouldHaveRegister 436 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d -1 [288, 316[[320, 322[288 MustHaveRegister 290 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v53|d [290, 316[[320, 362[290 MustHaveRegister 292 ShouldHaveRegister 348 ShouldHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v61|q [294, 306[300 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v60|q [294, 308[296 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [304, 305[304 MustHaveRegister  "NoDefinitionFound"
  v58|d DWORD "[v58|d]" v58|d -1 [306, 312[306 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d -1 [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v59|d [310, 315[310 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q v58|d [312, 315[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q v62|d [324, 328[324 MustHaveRegister 328 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q rax|q [336, 372[336 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q v65|d [340, 344[340 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q rax|q [352, 374[352 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d -1 [354, 356[354 MustHaveRegister 356 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q v68|d [356, 360[356 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q rax|q [368, 376[368 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q rax|q [380, 383[380 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q v2|q [384, 413[[414, 452[412 ShouldHaveRegister 420 MustHaveRegister 430 ShouldHaveRegister 444 ShouldHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q v79|q [388, 400[394 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q v78|q [388, 402[390 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q -1 [398, 399[398 MustHaveRegister  "NoDefinitionFound"
  v76|d DWORD "[v76|d]" v76|d -1 [400, 406[400 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[v77|d]" v77|d -1 [402, 404[402 MustHaveRegister 404 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q v77|d [404, 409[404 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q v76|d [406, 409[406 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[v80|d]" v80|d -1 [416, 422[416 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q v80|d [422, 426[422 MustHaveRegister 426 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q rax|q [434, 470[434 MustHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[v83|d]" v83|d -1 [436, 438[436 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q v83|d [438, 442[438 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q rax|q [450, 472[450 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d -1 [452, 454[452 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q v86|d [454, 458[454 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[v88|q]" v88|q rax|q [466, 474[466 MustHaveRegister 474 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[v89|q]" v89|q rax|q [478, 481[478 MustHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q v3|q [482, 484[484 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[v91|d]" v91|d -1 [484, 490[484 MustHaveRegister 486 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[v92|d]" v92|d -1 [490, 496[490 MustHaveRegister 492 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[v93|d]" v93|d -1 [496, 502[496 MustHaveRegister 498 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[v94|d]" v94|d -1 [502, 508[502 MustHaveRegister 504 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[v95|d]" v95|d -1 [508, 514[508 MustHaveRegister 510 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v96|d DWORD "[v96|d]" v96|d -1 [514, 520[514 MustHaveRegister 516 MustHaveRegister 520 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[v97|q]" v97|q v96|d [520, 522[520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[v98|d]" v98|d rax|q [526, 528[526 MustHaveRegister 528 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[v99|d]" v99|d v98|d [528, 531[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[v100|d]" v100|d v99|d [556, 558[558 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[v101|d]" v101|d v100|d [558, 561[558 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v102|d DWORD "[v102|d]" v102|d v101|d [562, 564[564 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[v103|d]" v103|d v102|d [564, 567[564 MustHaveRegister 566 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[v104|d]" v104|d v103|d [568, 570[570 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[v105|d]" v105|d v104|d [570, 573[570 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d v105|d [574, 576[576 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[v107|d]" v107|d v106|d [576, 579[576 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[v108|d]" v108|d v107|d [580, 582[582 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[v109|d]" v109|d v108|d [582, 585[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[v110|d]" v110|d v109|d [586, 618[[638, 652[588 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v111|d DWORD "[v111|d]" v111|d -1 [588, 592[[622, 626[588 MustHaveRegister 590 ShouldHaveRegister 626 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[v112|q]" v112|q -1 [624, 626[624 MustHaveRegister 626 MustHaveRegister  "NoSpillStore"
  v113|d DWORD "[v113|d]" v113|d -1 [626, 628[626 MustHaveRegister 628 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[v114|q]" v114|q v113|d [628, 631[628 MustHaveRegister 630 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[v115|q]" v115|q -1 [594, 612[594 MustHaveRegister 596 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister 608 MustHaveRegister 610 MustHaveRegister 612 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[v116|q]" v116|q -1 [596, 602[596 MustHaveRegister 598 MustHaveRegister 602 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[v117|q]" v117|q -1 [640, 642[640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[v118|q]" v118|q rax|q [646, 651[646 MustHaveRegister 648 MustHaveRegister 650 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[v120|q]" v120|q v115|q [612, 615[612 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[v121|q]" v121|q v120|q [616, 621[618 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[v122|q]" v122|q v114|q [632, 634[634 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v122|q [0, 1[[12, 14[[20, 22[[28, 30[[136, 138[[152, 154[[168, 170[[180, 182[[236, 238[[252, 254[[268, 270[[280, 282[[334, 336[[350, 352[[366, 368[[378, 380[[432, 434[[448, 450[[464, 466[[476, 478[[524, 526[[634, 636[[644, 646[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 1[[12, 13[[20, 21[[28, 29[[132, 137[[148, 153[[164, 169[[176, 181[[232, 237[[248, 253[[264, 269[[276, 281[[330, 335[[346, 351[[362, 367[[374, 379[[428, 433[[444, 449[[460, 465[[472, 477[[524, 525[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v23|q [0, 1[[10, 13[[18, 21[[26, 29[[130, 137[[146, 153[[162, 169[[174, 181[[230, 237[[246, 253[[262, 269[[274, 281[[328, 335[[344, 351[[360, 367[[372, 379[[426, 433[[442, 449[[458, 465[[470, 477[[524, 525[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 6[[8, 13[[16, 21[[24, 29[[128, 137[[144, 153[[160, 169[[172, 181[[228, 237[[244, 253[[260, 269[[272, 281[[326, 335[[342, 351[[358, 367[[370, 379[[424, 433[[440, 449[[456, 465[[468, 477[[522, 525[[642, 644[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 1[[12, 13[[20, 21[[28, 29[[134, 137[[150, 153[[166, 169[[178, 181[[234, 237[[250, 253[[266, 269[[278, 281[[332, 335[[348, 351[[364, 367[[376, 379[[430, 433[[446, 449[[462, 465[[474, 477[[524, 525[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 7[6 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rax|q]" v1|q rax|q [14, 19[14 MustHaveRegister  "SpillInDominator"
  v2|q QWORD "[rax|q]" v2|q rax|q [22, 27[22 MustHaveRegister  "SpillInDominator"
  v3|q QWORD "[rax|q]" v3|q rax|q [30, 75[[76, 83[[84, 135[30 MustHaveRegister 74 ShouldHaveRegister 82 ShouldHaveRegister 116 ShouldHaveRegister 124 MustHaveRegister 134 ShouldHaveRegister  "SpillInDominator"
  v4|d DWORD "[rsi|d]" v4|d -1 [36, 72[[76, 80[[84, 114[[118, 120[36 MustHaveRegister 38 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q v4|d [38, 72[[76, 80[[84, 114[38 MustHaveRegister 48 ShouldHaveRegister 90 ShouldHaveRegister  "OneSpillStore"
  v6|d DWORD "[rdx|d]" v6|d -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdx|q]" v7|q v6|d [46, 49[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdx|q]" v8|q v13|q [50, 64[52 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q v14|q [50, 62[56 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[r8|q]" v10|q -1 [60, 61[60 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[rcx|d]" v11|d -1 [62, 68[62 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rdx|d]" v12|d -1 [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v12|d [66, 71[66 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q v11|d [68, 71[68 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdx|q]" v15|q v21|q [92, 104[98 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q v20|q [92, 106[94 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r8|q]" v17|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[rdx|d]" v18|d -1 [104, 110[104 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rcx|d]" v19|d -1 [106, 108[106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rcx|q]" v20|q v19|d [108, 113[108 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q v18|d [110, 113[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rsi|d]" v22|d -1 [120, 126[120 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q v22|d [126, 130[126 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q rax|q [138, 151[138 MustHaveRegister  "OneSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v25|d [142, 146[142 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q rax|q [154, 167[154 MustHaveRegister  "OneSpillStore"
  v28|d DWORD "[rsi|d]" v28|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdx|q]" v29|q v28|d [158, 162[158 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q rax|q [170, 178[170 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rax|q]" v31|q rax|q [182, 185[182 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[vstack:9|q]" v32|q v31|q [186, 220[ "SpillInDominator"
  v33|d DWORD "[rsi|d]" v33|d -1 [188, 216[[220, 222[188 MustHaveRegister 190 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r11|q]" v34|q v33|d [190, 216[190 MustHaveRegister 192 ShouldHaveRegister  "OneSpillStore"
  v35|q QWORD "[rdx|q]" v35|q v41|q [194, 206[200 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q v40|q [194, 208[196 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r8|q]" v37|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v38|d DWORD "[rdx|d]" v38|d -1 [206, 212[206 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rcx|d]" v39|d -1 [208, 210[208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v39|d [210, 215[210 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q v38|d [212, 215[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [222, 226[222 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q v42|d [226, 230[226 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [238, 251[238 MustHaveRegister  "OneSpillStore"
  v45|d DWORD "[rsi|d]" v45|d -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdx|q]" v46|q v45|d [242, 246[242 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q rax|q [254, 267[254 MustHaveRegister  "OneSpillStore"
  v48|d DWORD "[rsi|d]" v48|d -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rdx|q]" v49|q v48|d [258, 262[258 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q rax|q [270, 278[270 MustHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q rax|q [282, 285[282 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[vstack:13|q]" v52|q v51|q [286, 320[ "SpillInDominator"
  v53|d DWORD "[rsi|d]" v53|d -1 [288, 316[[320, 322[288 MustHaveRegister 290 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r11|q]" v54|q v53|d [290, 316[290 MustHaveRegister 292 ShouldHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdx|q]" v55|q v61|q [294, 306[300 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rcx|q]" v56|q v60|q [294, 308[296 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r8|q]" v57|q -1 [304, 305[304 MustHaveRegister  "NoDefinitionFound"
  v58|d DWORD "[rdx|d]" v58|d -1 [306, 312[306 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rcx|d]" v59|d -1 [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rcx|q]" v60|q v59|d [310, 315[310 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdx|q]" v61|q v58|d [312, 315[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rsi|d]" v62|d -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q v62|d [324, 328[324 MustHaveRegister 328 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rax|q]" v64|q rax|q [336, 349[336 MustHaveRegister  "OneSpillStore"
  v65|d DWORD "[rsi|d]" v65|d -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rdx|q]" v66|q v65|d [340, 344[340 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q rax|q [352, 365[352 MustHaveRegister  "OneSpillStore"
  v68|d DWORD "[rsi|d]" v68|d -1 [354, 356[354 MustHaveRegister 356 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rdx|q]" v69|q v68|d [356, 360[356 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rax|q]" v70|q rax|q [368, 376[368 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q rax|q [380, 383[380 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rax|q]" v72|q v2|q [384, 413[[414, 431[412 ShouldHaveRegister 420 MustHaveRegister 430 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v79|q [388, 400[394 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rdx|q]" v74|q v78|q [388, 402[390 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rcx|q]" v75|q -1 [398, 399[398 MustHaveRegister  "NoDefinitionFound"
  v76|d DWORD "[rsi|d]" v76|d -1 [400, 406[400 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[rdx|d]" v77|d -1 [402, 404[402 MustHaveRegister 404 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdx|q]" v78|q v77|d [404, 409[404 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q v76|d [406, 409[406 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rdx|d]" v80|d -1 [416, 422[416 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rdx|q]" v81|q v80|d [422, 426[422 MustHaveRegister 426 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rax|q]" v82|q rax|q [434, 447[434 MustHaveRegister  "OneSpillStore"
  v83|d DWORD "[rsi|d]" v83|d -1 [436, 438[436 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdx|q]" v84|q v83|d [438, 442[438 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rax|q]" v85|q rax|q [450, 463[450 MustHaveRegister  "OneSpillStore"
  v86|d DWORD "[rsi|d]" v86|d -1 [452, 454[452 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rdx|q]" v87|q v86|d [454, 458[454 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[rax|q]" v88|q rax|q [466, 474[466 MustHaveRegister 474 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rax|q]" v89|q rax|q [478, 481[478 MustHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rax|q]" v90|q v3|q [482, 484[484 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[rsi|d]" v91|d -1 [484, 490[484 MustHaveRegister 486 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[rsi|d]" v92|d -1 [490, 496[490 MustHaveRegister 492 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[rsi|d]" v93|d -1 [496, 502[496 MustHaveRegister 498 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[rsi|d]" v94|d -1 [502, 508[502 MustHaveRegister 504 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[rsi|d]" v95|d -1 [508, 514[508 MustHaveRegister 510 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v96|d DWORD "[rsi|d]" v96|d -1 [514, 520[514 MustHaveRegister 516 MustHaveRegister 520 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rsi|q]" v97|q v96|d [520, 522[520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d rax|q [526, 528[526 MustHaveRegister 528 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rax|d]" v99|d v98|d [528, 531[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[rax|d]" v100|d v99|d [556, 558[558 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[rax|d]" v101|d v100|d [558, 561[558 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v102|d DWORD "[rax|d]" v102|d v101|d [562, 564[564 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[rax|d]" v103|d v102|d [564, 567[564 MustHaveRegister 566 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[rax|d]" v104|d v103|d [568, 570[570 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[rax|d]" v105|d v104|d [570, 573[570 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[rax|d]" v106|d v105|d [574, 576[576 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[rax|d]" v107|d v106|d [576, 579[576 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[rax|d]" v108|d v107|d [580, 582[582 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rax|d]" v109|d v108|d [582, 585[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[r10|d]" v110|d v109|d [586, 618[[638, 652[588 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v111|d DWORD "[rax|d]" v111|d -1 [588, 592[[622, 626[588 MustHaveRegister 590 ShouldHaveRegister 626 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rsi|q]" v112|q -1 [624, 626[624 MustHaveRegister 626 MustHaveRegister  "NoSpillStore"
  v113|d DWORD "[rax|d]" v113|d -1 [626, 628[626 MustHaveRegister 628 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[rax|q]" v114|q v113|d [628, 631[628 MustHaveRegister 630 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[rax|q]" v115|q -1 [594, 612[594 MustHaveRegister 596 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister 608 MustHaveRegister 610 MustHaveRegister 612 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[rsi|q]" v116|q -1 [596, 602[596 MustHaveRegister 598 MustHaveRegister 602 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rsi|q]" v117|q -1 [640, 642[640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rax|q]" v118|q rax|q [646, 651[646 MustHaveRegister 648 MustHaveRegister 650 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[rax|q]" v120|q v115|q [612, 615[612 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[rax|q]" v121|q v120|q [616, 621[618 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[rax|q]" v122|q v114|q [632, 634[634 ShouldHaveRegister  "NoSpillStore"
  v123|q QWORD "[r10|q]" v0|q v0|q [7, 11[8 ShouldHaveRegister  "SpillInDominator"
  v124|q QWORD "[vstack:0|q]" v0|q v0|q [11, 72[[76, 80[[84, 410[16 ShouldHaveRegister 24 ShouldHaveRegister 128 ShouldHaveRegister 144 ShouldHaveRegister 160 ShouldHaveRegister 172 ShouldHaveRegister 228 ShouldHaveRegister 244 ShouldHaveRegister 260 ShouldHaveRegister 272 ShouldHaveRegister 326 ShouldHaveRegister 342 ShouldHaveRegister 358 ShouldHaveRegister 370 ShouldHaveRegister  "SpillInDominator"
  v125|q QWORD "[rsi|q]" v0|q v0|q [414, 423[ "SpillInDominator"
  v126|q QWORD "[vstack:1|q]" v1|q v1|q [19, 31[ "SpillInDominator"
  v127|q QWORD "[r10|q]" v1|q v1|q [31, 72[[76, 80[[84, 118[32 MustHaveRegister 36 MustHaveRegister  "SpillInDominator"
  v128|q QWORD "[vstack:2|q]" v2|q v2|q [27, 34[ "SpillInDominator"
  v129|q QWORD "[r11|q]" v2|q v2|q [34, 72[[76, 80[[84, 135[40 MustHaveRegister 44 MustHaveRegister 90 ShouldHaveRegister 122 MustHaveRegister 132 ShouldHaveRegister  "SpillInDominator"
  v130|q QWORD "[vstack:3|q]" v3|q v3|q [135, 155[148 ShouldHaveRegister  "SpillInDominator"
  v131|q QWORD "[vstack:1|q]" v1|q v1|q [118, 135[ "SpillInDominator"
  v132|q QWORD "[vstack:2|q]" v2|q v2|q [135, 139[ "SpillInDominator"
  v133|q QWORD "[vstack:4|q]" v5|q v5|q [118, 135[ "OneSpillStore"
  v134|q QWORD "[vstack:4|q]" v5|q v5|q [135, 164[150 ShouldHaveRegister 164 ShouldHaveRegister  "OneSpillStore"
  v135|q QWORD "[vstack:1|q]" v1|q v1|q [135, 220[218 ShouldHaveRegister  "SpillInDominator"
  v136|q QWORD "[r10|q]" v2|q v2|q [139, 151[140 MustHaveRegister  "SpillInDominator"
  v137|q QWORD "[r10|q]" v3|q v3|q [155, 167[156 MustHaveRegister  "SpillInDominator"
  v138|q QWORD "[r10|q]" v1|q v1|q [220, 235[234 ShouldHaveRegister  "SpillInDominator"
  v139|q QWORD "[vstack:6|q]" v24|q v24|q [151, 174[174 ShouldHaveRegister  "OneSpillStore"
  v140|q QWORD "[vstack:2|q]" v2|q v2|q [151, 186[166 ShouldHaveRegister  "SpillInDominator"
  v141|q QWORD "[rax|q]" v2|q v2|q [186, 220[188 MustHaveRegister  "SpillInDominator"
  v142|q QWORD "[vstack:7|q]" v27|q v27|q [167, 176[176 ShouldHaveRegister  "OneSpillStore"
  v143|q QWORD "[vstack:3|q]" v3|q v3|q [167, 220[192 ShouldHaveRegister  "SpillInDominator"
  v144|q QWORD "[rax|q]" v3|q v3|q [220, 235[224 MustHaveRegister 232 ShouldHaveRegister  "SpillInDominator"
  v145|q QWORD "[vstack:2|q]" v2|q v2|q [220, 235[ "SpillInDominator"
  v146|q QWORD "[vstack:9|q]" v32|q v32|q [220, 235[ "SpillInDominator"
  v147|q QWORD "[vstack:8|q]" v34|q v34|q [220, 235[ "OneSpillStore"
  v148|q QWORD "[vstack:3|q]" v3|q v3|q [235, 239[ "SpillInDominator"
  v149|q QWORD "[vstack:1|q]" v1|q v1|q [235, 255[248 ShouldHaveRegister  "SpillInDominator"
  v150|q QWORD "[vstack:8|q]" v34|q v34|q [235, 264[250 ShouldHaveRegister 264 ShouldHaveRegister  "OneSpillStore"
  v151|q QWORD "[vstack:2|q]" v2|q v2|q [235, 319[318 ShouldHaveRegister  "SpillInDominator"
  v152|q QWORD "[vstack:9|q]" v32|q v32|q [235, 410[386 ShouldHaveRegister  "SpillInDominator"
  v153|q QWORD "[r10|q]" v3|q v3|q [239, 251[240 MustHaveRegister  "SpillInDominator"
  v154|q QWORD "[r10|q]" v1|q v1|q [255, 267[256 MustHaveRegister  "SpillInDominator"
  v155|q QWORD "[r10|q]" v2|q v2|q [320, 333[332 ShouldHaveRegister  "SpillInDominator"
  v156|q QWORD "[r10|q]" v32|q v32|q [414, 431[416 MustHaveRegister  "SpillInDominator"
  v157|q QWORD "[vstack:10|q]" v44|q v44|q [251, 274[274 ShouldHaveRegister  "OneSpillStore"
  v158|q QWORD "[vstack:3|q]" v3|q v3|q [251, 286[266 ShouldHaveRegister  "SpillInDominator"
  v159|q QWORD "[rax|q]" v3|q v3|q [286, 288[288 MustHaveRegister  "SpillInDominator"
  v160|q QWORD "[vstack:11|q]" v47|q v47|q [267, 276[276 ShouldHaveRegister  "OneSpillStore"
  v161|q QWORD "[vstack:1|q]" v1|q v1|q [267, 316[292 ShouldHaveRegister  "SpillInDominator"
  v162|q QWORD "[rax|q]" v1|q v1|q [320, 333[330 ShouldHaveRegister  "SpillInDominator"
  v163|q QWORD "[vstack:13|q]" v52|q v52|q [320, 333[ "SpillInDominator"
  v164|q QWORD "[vstack:12|q]" v54|q v54|q [320, 333[ "OneSpillStore"
  v165|q QWORD "[vstack:1|q]" v1|q v1|q [333, 337[ "SpillInDominator"
  v166|q QWORD "[vstack:2|q]" v2|q v2|q [333, 353[346 ShouldHaveRegister  "SpillInDominator"
  v167|q QWORD "[vstack:12|q]" v54|q v54|q [333, 362[348 ShouldHaveRegister 362 ShouldHaveRegister  "OneSpillStore"
  v168|q QWORD "[vstack:13|q]" v52|q v52|q [333, 410[386 ShouldHaveRegister  "SpillInDominator"
  v169|q QWORD "[r10|q]" v1|q v1|q [337, 349[338 MustHaveRegister  "SpillInDominator"
  v170|q QWORD "[rsi|q]" v2|q v2|q [353, 354[354 MustHaveRegister  "SpillInDominator"
  v171|q QWORD "[r11|q]" v52|q v52|q [414, 431[418 MustHaveRegister 428 ShouldHaveRegister  "SpillInDominator"
  v172|q QWORD "[vstack:14|q]" v64|q v64|q [349, 372[372 ShouldHaveRegister  "OneSpillStore"
  v173|q QWORD "[vstack:1|q]" v1|q v1|q [349, 364[364 ShouldHaveRegister  "SpillInDominator"
  v174|q QWORD "[vstack:15|q]" v67|q v67|q [365, 374[374 ShouldHaveRegister  "OneSpillStore"
  v175|q QWORD "[vstack:16|q]" v72|q v72|q [431, 451[444 ShouldHaveRegister  "OneSpillStore"
  v176|q QWORD "[vstack:9|q]" v32|q v32|q [431, 460[446 ShouldHaveRegister 460 ShouldHaveRegister  "SpillInDominator"
  v177|q QWORD "[vstack:13|q]" v52|q v52|q [431, 435[ "SpillInDominator"
  v178|q QWORD "[r9|q]" v0|q v0|q [423, 431[424 ShouldHaveRegister  "SpillInDominator"
  v179|q QWORD "[vstack:0|q]" v0|q v0|q [431, 468[440 ShouldHaveRegister 456 ShouldHaveRegister 468 ShouldHaveRegister  "SpillInDominator"
  v180|q QWORD "[r11|q]" v52|q v52|q [435, 447[436 MustHaveRegister  "SpillInDominator"
  v181|q QWORD "[rsi|q]" v72|q v72|q [451, 452[452 MustHaveRegister  "OneSpillStore"
  v182|q QWORD "[vstack:17|q]" v82|q v82|q [447, 470[470 ShouldHaveRegister  "OneSpillStore"
  v183|q QWORD "[vstack:13|q]" v52|q v52|q [447, 462[462 ShouldHaveRegister  "SpillInDominator"
  v184|q QWORD "[vstack:18|q]" v85|q v85|q [463, 472[472 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   14  <|@ instruction v1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: v0|QWORD[.] v1|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   22  <|@ instruction v2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   30  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v126|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   50  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   62  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   92  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  104  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  108  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  126  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = STACKMOVE (input: v131|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = STACKMOVE (input: v133|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  138  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  154  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  170  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  182  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  186  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  190  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  194  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  206  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  208  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  210  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  226  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = STACKMOVE (input: v145|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = STACKMOVE (input: v147|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  238  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE input: v148|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  242  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = MOVE input: v153|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  254  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  270  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  282  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  286  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  290  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  294  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  306  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  324  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = STACKMOVE (input: v163|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = STACKMOVE (input: v164|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE input: v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  336  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE input: v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE input: v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  352  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  368  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  380  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  384  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  388  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  400  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  422  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE input: v156|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = MOVE input: v178|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = MOVE input: v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  434  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE input: v177|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  438  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = MOVE input: v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  450  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v184|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  466  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  478  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction v91|DWORD[_] = MOV input: [v90|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: v91|DWORD[_], y: v91|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v92|DWORD[_] = MOV input: [v91|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction v93|DWORD[_] = MOV input: [v92|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: v93|DWORD[_], y: v93|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction v94|DWORD[_] = MOV input: [v93|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction v95|DWORD[_] = MOV input: [v94|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: v95|DWORD[_], y: v95|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction v96|DWORD[_] = MOV input: [v95|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v96|DWORD[_], y: v96|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  526  <|@ instruction v98|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  556  <|@ instruction [v100|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction v101|DWORD = INC value: v100|DWORD size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [v101|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  562  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction v103|DWORD = INC value: v102|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  568  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  570  <|@ instruction v105|DWORD = INC value: v104|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [v105|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  574  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  576  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [v107|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  580  <|@ instruction [v108|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction v109|DWORD = INC value: v108|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [v109|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  586  <|@ instruction [v110|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  588  <|@ instruction v111|DWORD = LEA address: [v110|DWORD + 128] size: DWORD <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH x: v111|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction v115|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  596  <|@ instruction v116|QWORD = LEA address: [v115|QWORD + 16] size: QWORD <|@ <|@
      nr  598  <|@ instruction CMPBRANCH (x: v116|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOV (x: [r15|QWORD + 440], y: v116|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction AMD64PREFETCH ~address: [v115|QWORD + 208] instr: 3 <|@ <|@
      nr  606  <|@ instruction MOV x: [v115|QWORD] y: 1 size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  610  <|@ instruction MOV x: [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  612  <|@ instruction v120|QWORD[.] = MOVE input: v115|QWORD moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [v120|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  616  <|@ instruction [v121|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction MOV (x: [v121|QWORD[.] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  626  <|@ instruction v113|DWORD[_] = MOV input: [v112|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  628  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  632  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v117|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  646  <|@ instruction v118|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [v118|QWORD[.]] state [bci:27] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [v118|QWORD[.]] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v122|q [0, 1[[12, 14[[20, 22[[28, 30[[136, 138[[152, 154[[168, 170[[180, 182[[236, 238[[252, 254[[268, 270[[280, 282[[334, 336[[350, 352[[366, 368[[378, 380[[432, 434[[448, 450[[464, 466[[476, 478[[524, 526[[634, 636[[644, 646[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 1[[12, 13[[20, 21[[28, 29[[132, 137[[148, 153[[164, 169[[176, 181[[232, 237[[248, 253[[264, 269[[276, 281[[330, 335[[346, 351[[362, 367[[374, 379[[428, 433[[444, 449[[460, 465[[472, 477[[524, 525[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v23|q [0, 1[[10, 13[[18, 21[[26, 29[[130, 137[[146, 153[[162, 169[[174, 181[[230, 237[[246, 253[[262, 269[[274, 281[[328, 335[[344, 351[[360, 367[[372, 379[[426, 433[[442, 449[[458, 465[[470, 477[[524, 525[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 6[[8, 13[[16, 21[[24, 29[[128, 137[[144, 153[[160, 169[[172, 181[[228, 237[[244, 253[[260, 269[[272, 281[[326, 335[[342, 351[[358, 367[[370, 379[[424, 433[[440, 449[[456, 465[[468, 477[[522, 525[[642, 644[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 1[[12, 13[[20, 21[[28, 29[[134, 137[[150, 153[[166, 169[[178, 181[[234, 237[[250, 253[[266, 269[[278, 281[[332, 335[[348, 351[[364, 367[[376, 379[[430, 433[[446, 449[[462, 465[[474, 477[[524, 525[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 7[6 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rax|q]" v1|q rax|q [14, 19[14 MustHaveRegister  "StoreAtDefinition"
  v2|q QWORD "[rax|q]" v2|q rax|q [22, 27[22 MustHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[rax|q]" v3|q rax|q [30, 75[[76, 83[[84, 135[30 MustHaveRegister 74 ShouldHaveRegister 82 ShouldHaveRegister 116 ShouldHaveRegister 124 MustHaveRegister 134 ShouldHaveRegister  "SpillInDominator"
  v4|d DWORD "[rsi|d]" v4|d -1 [36, 72[[76, 80[[84, 114[[118, 120[36 MustHaveRegister 38 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q v4|d [38, 72[[76, 80[[84, 114[38 MustHaveRegister 48 ShouldHaveRegister 90 ShouldHaveRegister  "OneSpillStore"
  v6|d DWORD "[rdx|d]" v6|d -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdx|q]" v7|q v6|d [46, 49[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdx|q]" v8|q v13|q [50, 64[52 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q v14|q [50, 62[56 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[r8|q]" v10|q -1 [60, 61[60 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[rcx|d]" v11|d -1 [62, 68[62 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rdx|d]" v12|d -1 [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v12|d [66, 71[66 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q v11|d [68, 71[68 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdx|q]" v15|q v21|q [92, 104[98 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q v20|q [92, 106[94 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r8|q]" v17|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[rdx|d]" v18|d -1 [104, 110[104 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rcx|d]" v19|d -1 [106, 108[106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rcx|q]" v20|q v19|d [108, 113[108 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q v18|d [110, 113[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rsi|d]" v22|d -1 [120, 126[120 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q v22|d [126, 130[126 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q rax|q [138, 151[138 MustHaveRegister  "OneSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v25|d [142, 146[142 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q rax|q [154, 167[154 MustHaveRegister  "OneSpillStore"
  v28|d DWORD "[rsi|d]" v28|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdx|q]" v29|q v28|d [158, 162[158 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q rax|q [170, 178[170 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rax|q]" v31|q rax|q [182, 185[182 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[vstack:9|q]" v32|q v31|q [186, 220[ "StoreAtDefinition"
  v33|d DWORD "[rsi|d]" v33|d -1 [188, 216[[220, 222[188 MustHaveRegister 190 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r11|q]" v34|q v33|d [190, 216[190 MustHaveRegister 192 ShouldHaveRegister  "OneSpillStore"
  v35|q QWORD "[rdx|q]" v35|q v41|q [194, 206[200 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q v40|q [194, 208[196 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r8|q]" v37|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v38|d DWORD "[rdx|d]" v38|d -1 [206, 212[206 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rcx|d]" v39|d -1 [208, 210[208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v39|d [210, 215[210 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q v38|d [212, 215[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [222, 226[222 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q v42|d [226, 230[226 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [238, 251[238 MustHaveRegister  "OneSpillStore"
  v45|d DWORD "[rsi|d]" v45|d -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdx|q]" v46|q v45|d [242, 246[242 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q rax|q [254, 267[254 MustHaveRegister  "OneSpillStore"
  v48|d DWORD "[rsi|d]" v48|d -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rdx|q]" v49|q v48|d [258, 262[258 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q rax|q [270, 278[270 MustHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q rax|q [282, 285[282 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[vstack:13|q]" v52|q v51|q [286, 320[ "StoreAtDefinition"
  v53|d DWORD "[rsi|d]" v53|d -1 [288, 316[[320, 322[288 MustHaveRegister 290 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r11|q]" v54|q v53|d [290, 316[290 MustHaveRegister 292 ShouldHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdx|q]" v55|q v61|q [294, 306[300 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rcx|q]" v56|q v60|q [294, 308[296 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r8|q]" v57|q -1 [304, 305[304 MustHaveRegister  "NoDefinitionFound"
  v58|d DWORD "[rdx|d]" v58|d -1 [306, 312[306 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rcx|d]" v59|d -1 [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rcx|q]" v60|q v59|d [310, 315[310 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdx|q]" v61|q v58|d [312, 315[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rsi|d]" v62|d -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q v62|d [324, 328[324 MustHaveRegister 328 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rax|q]" v64|q rax|q [336, 349[336 MustHaveRegister  "OneSpillStore"
  v65|d DWORD "[rsi|d]" v65|d -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rdx|q]" v66|q v65|d [340, 344[340 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q rax|q [352, 365[352 MustHaveRegister  "OneSpillStore"
  v68|d DWORD "[rsi|d]" v68|d -1 [354, 356[354 MustHaveRegister 356 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rdx|q]" v69|q v68|d [356, 360[356 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rax|q]" v70|q rax|q [368, 376[368 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q rax|q [380, 383[380 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rax|q]" v72|q v2|q [384, 413[[414, 431[412 ShouldHaveRegister 420 MustHaveRegister 430 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v79|q [388, 400[394 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rdx|q]" v74|q v78|q [388, 402[390 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rcx|q]" v75|q -1 [398, 399[398 MustHaveRegister  "NoDefinitionFound"
  v76|d DWORD "[rsi|d]" v76|d -1 [400, 406[400 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[rdx|d]" v77|d -1 [402, 404[402 MustHaveRegister 404 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdx|q]" v78|q v77|d [404, 409[404 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q v76|d [406, 409[406 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rdx|d]" v80|d -1 [416, 422[416 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rdx|q]" v81|q v80|d [422, 426[422 MustHaveRegister 426 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rax|q]" v82|q rax|q [434, 447[434 MustHaveRegister  "OneSpillStore"
  v83|d DWORD "[rsi|d]" v83|d -1 [436, 438[436 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdx|q]" v84|q v83|d [438, 442[438 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rax|q]" v85|q rax|q [450, 463[450 MustHaveRegister  "OneSpillStore"
  v86|d DWORD "[rsi|d]" v86|d -1 [452, 454[452 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rdx|q]" v87|q v86|d [454, 458[454 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[rax|q]" v88|q rax|q [466, 474[466 MustHaveRegister 474 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rax|q]" v89|q rax|q [478, 481[478 MustHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rax|q]" v90|q v3|q [482, 484[484 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[rsi|d]" v91|d -1 [484, 490[484 MustHaveRegister 486 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[rsi|d]" v92|d -1 [490, 496[490 MustHaveRegister 492 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[rsi|d]" v93|d -1 [496, 502[496 MustHaveRegister 498 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[rsi|d]" v94|d -1 [502, 508[502 MustHaveRegister 504 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[rsi|d]" v95|d -1 [508, 514[508 MustHaveRegister 510 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v96|d DWORD "[rsi|d]" v96|d -1 [514, 520[514 MustHaveRegister 516 MustHaveRegister 520 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rsi|q]" v97|q v96|d [520, 522[520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d rax|q [526, 528[526 MustHaveRegister 528 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rax|d]" v99|d v98|d [528, 531[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[rax|d]" v100|d v99|d [556, 558[558 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[rax|d]" v101|d v100|d [558, 561[558 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v102|d DWORD "[rax|d]" v102|d v101|d [562, 564[564 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[rax|d]" v103|d v102|d [564, 567[564 MustHaveRegister 566 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[rax|d]" v104|d v103|d [568, 570[570 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[rax|d]" v105|d v104|d [570, 573[570 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[rax|d]" v106|d v105|d [574, 576[576 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[rax|d]" v107|d v106|d [576, 579[576 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[rax|d]" v108|d v107|d [580, 582[582 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rax|d]" v109|d v108|d [582, 585[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[r10|d]" v110|d v109|d [586, 618[[638, 652[588 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v111|d DWORD "[rax|d]" v111|d -1 [588, 592[[622, 626[588 MustHaveRegister 590 ShouldHaveRegister 626 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rsi|q]" v112|q -1 [624, 626[624 MustHaveRegister 626 MustHaveRegister  "NoSpillStore"
  v113|d DWORD "[rax|d]" v113|d -1 [626, 628[626 MustHaveRegister 628 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[rax|q]" v114|q v113|d [628, 631[628 MustHaveRegister 630 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[rax|q]" v115|q -1 [594, 612[594 MustHaveRegister 596 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister 608 MustHaveRegister 610 MustHaveRegister 612 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[rsi|q]" v116|q -1 [596, 602[596 MustHaveRegister 598 MustHaveRegister 602 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rsi|q]" v117|q -1 [640, 642[640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rax|q]" v118|q rax|q [646, 651[646 MustHaveRegister 648 MustHaveRegister 650 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[rax|q]" v120|q v115|q [612, 615[612 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[rax|q]" v121|q v120|q [616, 621[618 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[rax|q]" v122|q v114|q [632, 634[634 ShouldHaveRegister  "NoSpillStore"
  v123|q QWORD "[r10|q]" v0|q v0|q [7, 11[8 ShouldHaveRegister  "StoreAtDefinition"
  v124|q QWORD "[vstack:0|q]" v0|q v0|q [11, 72[[76, 80[[84, 410[16 ShouldHaveRegister 24 ShouldHaveRegister 128 ShouldHaveRegister 144 ShouldHaveRegister 160 ShouldHaveRegister 172 ShouldHaveRegister 228 ShouldHaveRegister 244 ShouldHaveRegister 260 ShouldHaveRegister 272 ShouldHaveRegister 326 ShouldHaveRegister 342 ShouldHaveRegister 358 ShouldHaveRegister 370 ShouldHaveRegister  "StoreAtDefinition"
  v125|q QWORD "[rsi|q]" v0|q v0|q [414, 423[ "StoreAtDefinition"
  v126|q QWORD "[vstack:1|q]" v1|q v1|q [19, 31[ "StoreAtDefinition"
  v127|q QWORD "[r10|q]" v1|q v1|q [31, 72[[76, 80[[84, 118[32 MustHaveRegister 36 MustHaveRegister  "StoreAtDefinition"
  v128|q QWORD "[vstack:2|q]" v2|q v2|q [27, 34[ "StoreAtDefinition"
  v129|q QWORD "[r11|q]" v2|q v2|q [34, 72[[76, 80[[84, 135[40 MustHaveRegister 44 MustHaveRegister 90 ShouldHaveRegister 122 MustHaveRegister 132 ShouldHaveRegister  "StoreAtDefinition"
  v130|q QWORD "[vstack:3|q]" v3|q v3|q [135, 155[148 ShouldHaveRegister  "SpillInDominator"
  v131|q QWORD "[vstack:1|q]" v1|q v1|q [118, 135[ "StoreAtDefinition"
  v132|q QWORD "[vstack:2|q]" v2|q v2|q [135, 139[ "StoreAtDefinition"
  v133|q QWORD "[vstack:4|q]" v5|q v5|q [118, 135[ "OneSpillStore"
  v134|q QWORD "[vstack:4|q]" v5|q v5|q [135, 164[150 ShouldHaveRegister 164 ShouldHaveRegister  "OneSpillStore"
  v135|q QWORD "[vstack:1|q]" v1|q v1|q [135, 220[218 ShouldHaveRegister  "StoreAtDefinition"
  v136|q QWORD "[r10|q]" v2|q v2|q [139, 151[140 MustHaveRegister  "StoreAtDefinition"
  v137|q QWORD "[r10|q]" v3|q v3|q [155, 167[156 MustHaveRegister  "SpillInDominator"
  v138|q QWORD "[r10|q]" v1|q v1|q [220, 235[234 ShouldHaveRegister  "StoreAtDefinition"
  v139|q QWORD "[vstack:6|q]" v24|q v24|q [151, 174[174 ShouldHaveRegister  "OneSpillStore"
  v140|q QWORD "[vstack:2|q]" v2|q v2|q [151, 186[166 ShouldHaveRegister  "StoreAtDefinition"
  v141|q QWORD "[rax|q]" v2|q v2|q [186, 220[188 MustHaveRegister  "StoreAtDefinition"
  v142|q QWORD "[vstack:7|q]" v27|q v27|q [167, 176[176 ShouldHaveRegister  "OneSpillStore"
  v143|q QWORD "[vstack:3|q]" v3|q v3|q [167, 220[192 ShouldHaveRegister  "SpillInDominator"
  v144|q QWORD "[rax|q]" v3|q v3|q [220, 235[224 MustHaveRegister 232 ShouldHaveRegister  "SpillInDominator"
  v145|q QWORD "[vstack:2|q]" v2|q v2|q [220, 235[ "StoreAtDefinition"
  v146|q QWORD "[vstack:9|q]" v32|q v32|q [220, 235[ "StoreAtDefinition"
  v147|q QWORD "[vstack:8|q]" v34|q v34|q [220, 235[ "OneSpillStore"
  v148|q QWORD "[vstack:3|q]" v3|q v3|q [235, 239[ "SpillInDominator"
  v149|q QWORD "[vstack:1|q]" v1|q v1|q [235, 255[248 ShouldHaveRegister  "StoreAtDefinition"
  v150|q QWORD "[vstack:8|q]" v34|q v34|q [235, 264[250 ShouldHaveRegister 264 ShouldHaveRegister  "OneSpillStore"
  v151|q QWORD "[vstack:2|q]" v2|q v2|q [235, 319[318 ShouldHaveRegister  "StoreAtDefinition"
  v152|q QWORD "[vstack:9|q]" v32|q v32|q [235, 410[386 ShouldHaveRegister  "StoreAtDefinition"
  v153|q QWORD "[r10|q]" v3|q v3|q [239, 251[240 MustHaveRegister  "SpillInDominator"
  v154|q QWORD "[r10|q]" v1|q v1|q [255, 267[256 MustHaveRegister  "StoreAtDefinition"
  v155|q QWORD "[r10|q]" v2|q v2|q [320, 333[332 ShouldHaveRegister  "StoreAtDefinition"
  v156|q QWORD "[r10|q]" v32|q v32|q [414, 431[416 MustHaveRegister  "StoreAtDefinition"
  v157|q QWORD "[vstack:10|q]" v44|q v44|q [251, 274[274 ShouldHaveRegister  "OneSpillStore"
  v158|q QWORD "[vstack:3|q]" v3|q v3|q [251, 286[266 ShouldHaveRegister  "SpillInDominator"
  v159|q QWORD "[rax|q]" v3|q v3|q [286, 288[288 MustHaveRegister  "SpillInDominator"
  v160|q QWORD "[vstack:11|q]" v47|q v47|q [267, 276[276 ShouldHaveRegister  "OneSpillStore"
  v161|q QWORD "[vstack:1|q]" v1|q v1|q [267, 316[292 ShouldHaveRegister  "StoreAtDefinition"
  v162|q QWORD "[rax|q]" v1|q v1|q [320, 333[330 ShouldHaveRegister  "StoreAtDefinition"
  v163|q QWORD "[vstack:13|q]" v52|q v52|q [320, 333[ "StoreAtDefinition"
  v164|q QWORD "[vstack:12|q]" v54|q v54|q [320, 333[ "OneSpillStore"
  v165|q QWORD "[vstack:1|q]" v1|q v1|q [333, 337[ "StoreAtDefinition"
  v166|q QWORD "[vstack:2|q]" v2|q v2|q [333, 353[346 ShouldHaveRegister  "StoreAtDefinition"
  v167|q QWORD "[vstack:12|q]" v54|q v54|q [333, 362[348 ShouldHaveRegister 362 ShouldHaveRegister  "OneSpillStore"
  v168|q QWORD "[vstack:13|q]" v52|q v52|q [333, 410[386 ShouldHaveRegister  "StoreAtDefinition"
  v169|q QWORD "[r10|q]" v1|q v1|q [337, 349[338 MustHaveRegister  "StoreAtDefinition"
  v170|q QWORD "[rsi|q]" v2|q v2|q [353, 354[354 MustHaveRegister  "StoreAtDefinition"
  v171|q QWORD "[r11|q]" v52|q v52|q [414, 431[418 MustHaveRegister 428 ShouldHaveRegister  "StoreAtDefinition"
  v172|q QWORD "[vstack:14|q]" v64|q v64|q [349, 372[372 ShouldHaveRegister  "OneSpillStore"
  v173|q QWORD "[vstack:1|q]" v1|q v1|q [349, 364[364 ShouldHaveRegister  "StoreAtDefinition"
  v174|q QWORD "[vstack:15|q]" v67|q v67|q [365, 374[374 ShouldHaveRegister  "OneSpillStore"
  v175|q QWORD "[vstack:16|q]" v72|q v72|q [431, 451[444 ShouldHaveRegister  "OneSpillStore"
  v176|q QWORD "[vstack:9|q]" v32|q v32|q [431, 460[446 ShouldHaveRegister 460 ShouldHaveRegister  "StoreAtDefinition"
  v177|q QWORD "[vstack:13|q]" v52|q v52|q [431, 435[ "StoreAtDefinition"
  v178|q QWORD "[r9|q]" v0|q v0|q [423, 431[424 ShouldHaveRegister  "StoreAtDefinition"
  v179|q QWORD "[vstack:0|q]" v0|q v0|q [431, 468[440 ShouldHaveRegister 456 ShouldHaveRegister 468 ShouldHaveRegister  "StoreAtDefinition"
  v180|q QWORD "[r11|q]" v52|q v52|q [435, 447[436 MustHaveRegister  "StoreAtDefinition"
  v181|q QWORD "[rsi|q]" v72|q v72|q [451, 452[452 MustHaveRegister  "OneSpillStore"
  v182|q QWORD "[vstack:17|q]" v82|q v82|q [447, 470[470 ShouldHaveRegister  "OneSpillStore"
  v183|q QWORD "[vstack:13|q]" v52|q v52|q [447, 462[462 ShouldHaveRegister  "StoreAtDefinition"
  v184|q QWORD "[vstack:18|q]" v85|q v85|q [463, 472[472 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   14  <|@ instruction v1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: v0|QWORD[.] v1|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   22  <|@ instruction v2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   30  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v126|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   50  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   62  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   92  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  104  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  108  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  126  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = STACKMOVE (input: v131|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = STACKMOVE (input: v133|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  138  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  154  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  170  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  182  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  186  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  190  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  194  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  206  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  208  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  210  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  226  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = STACKMOVE (input: v145|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = STACKMOVE (input: v147|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  238  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE input: v148|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  242  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = MOVE input: v153|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  254  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  270  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  282  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  286  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  290  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  294  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  306  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  324  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = STACKMOVE (input: v163|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = STACKMOVE (input: v164|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE input: v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  336  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE input: v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE input: v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  352  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  368  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  380  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  384  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  388  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  400  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  422  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE input: v156|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = MOVE input: v178|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = MOVE input: v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  434  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE input: v177|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  438  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = MOVE input: v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  450  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v184|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  466  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  478  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction v91|DWORD[_] = MOV input: [v90|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: v91|DWORD[_], y: v91|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v92|DWORD[_] = MOV input: [v91|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction v93|DWORD[_] = MOV input: [v92|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: v93|DWORD[_], y: v93|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction v94|DWORD[_] = MOV input: [v93|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction v95|DWORD[_] = MOV input: [v94|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: v95|DWORD[_], y: v95|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction v96|DWORD[_] = MOV input: [v95|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v96|DWORD[_], y: v96|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  526  <|@ instruction v98|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  556  <|@ instruction [v100|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction v101|DWORD = INC value: v100|DWORD size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [v101|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  562  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction v103|DWORD = INC value: v102|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  568  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  570  <|@ instruction v105|DWORD = INC value: v104|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [v105|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  574  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  576  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [v107|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  580  <|@ instruction [v108|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction v109|DWORD = INC value: v108|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [v109|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  586  <|@ instruction [v110|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  588  <|@ instruction v111|DWORD = LEA address: [v110|DWORD + 128] size: DWORD <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH x: v111|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction v115|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  596  <|@ instruction v116|QWORD = LEA address: [v115|QWORD + 16] size: QWORD <|@ <|@
      nr  598  <|@ instruction CMPBRANCH (x: v116|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOV (x: [r15|QWORD + 440], y: v116|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction AMD64PREFETCH ~address: [v115|QWORD + 208] instr: 3 <|@ <|@
      nr  606  <|@ instruction MOV x: [v115|QWORD] y: 1 size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  610  <|@ instruction MOV x: [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  612  <|@ instruction v120|QWORD[.] = MOVE input: v115|QWORD moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [v120|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  616  <|@ instruction [v121|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction MOV (x: [v121|QWORD[.] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [v121|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  626  <|@ instruction v113|DWORD[_] = MOV input: [v112|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  628  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [v114|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  632  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v117|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  646  <|@ instruction v118|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [v118|QWORD[.]] state [bci:27] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [v118|QWORD[.]] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v122|q [0, 1[[12, 14[[20, 22[[28, 30[[136, 138[[152, 154[[168, 170[[180, 182[[236, 238[[252, 254[[268, 270[[280, 282[[334, 336[[350, 352[[366, 368[[378, 380[[432, 434[[448, 450[[464, 466[[476, 478[[524, 526[[634, 636[[644, 646[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 1[[12, 13[[20, 21[[28, 29[[132, 137[[148, 153[[164, 169[[176, 181[[232, 237[[248, 253[[264, 269[[276, 281[[330, 335[[346, 351[[362, 367[[374, 379[[428, 433[[444, 449[[460, 465[[472, 477[[524, 525[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v23|q [0, 1[[10, 13[[18, 21[[26, 29[[130, 137[[146, 153[[162, 169[[174, 181[[230, 237[[246, 253[[262, 269[[274, 281[[328, 335[[344, 351[[360, 367[[372, 379[[426, 433[[442, 449[[458, 465[[470, 477[[524, 525[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 6[[8, 13[[16, 21[[24, 29[[128, 137[[144, 153[[160, 169[[172, 181[[228, 237[[244, 253[[260, 269[[272, 281[[326, 335[[342, 351[[358, 367[[370, 379[[424, 433[[440, 449[[456, 465[[468, 477[[522, 525[[642, 644[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 1[[12, 13[[20, 21[[28, 29[[134, 137[[150, 153[[166, 169[[178, 181[[234, 237[[250, 253[[266, 269[[278, 281[[332, 335[[348, 351[[364, 367[[376, 379[[430, 433[[446, 449[[462, 465[[474, 477[[524, 525[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[12, 13[[20, 21[[28, 29[[136, 137[[152, 153[[168, 169[[180, 181[[236, 237[[252, 253[[268, 269[[280, 281[[334, 335[[350, 351[[366, 367[[378, 379[[432, 433[[448, 449[[464, 465[[476, 477[[524, 525[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 7[6 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rax|q]" v1|q rax|q [14, 19[14 MustHaveRegister  "StoreAtDefinition"
  v2|q QWORD "[rax|q]" v2|q rax|q [22, 27[22 MustHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[rax|q]" v3|q rax|q [30, 75[[76, 83[[84, 135[30 MustHaveRegister 74 ShouldHaveRegister 82 ShouldHaveRegister 116 ShouldHaveRegister 124 MustHaveRegister 134 ShouldHaveRegister  "SpillInDominator"
  v4|d DWORD "[rsi|d]" v4|d -1 [36, 72[[76, 80[[84, 114[[118, 120[36 MustHaveRegister 38 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q v4|d [38, 72[[76, 80[[84, 114[38 MustHaveRegister 48 ShouldHaveRegister 90 ShouldHaveRegister  "OneSpillStore"
  v6|d DWORD "[rdx|d]" v6|d -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdx|q]" v7|q v6|d [46, 49[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdx|q]" v8|q v13|q [50, 64[52 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q v14|q [50, 62[56 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[r8|q]" v10|q -1 [60, 61[60 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[rcx|d]" v11|d -1 [62, 68[62 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rdx|d]" v12|d -1 [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v12|d [66, 71[66 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q v11|d [68, 71[68 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdx|q]" v15|q v21|q [92, 104[98 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q v20|q [92, 106[94 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r8|q]" v17|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[rdx|d]" v18|d -1 [104, 110[104 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rcx|d]" v19|d -1 [106, 108[106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rcx|q]" v20|q v19|d [108, 113[108 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q v18|d [110, 113[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rsi|d]" v22|d -1 [120, 126[120 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q v22|d [126, 130[126 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q rax|q [138, 151[138 MustHaveRegister  "OneSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v25|d [142, 146[142 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q rax|q [154, 167[154 MustHaveRegister  "OneSpillStore"
  v28|d DWORD "[rsi|d]" v28|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdx|q]" v29|q v28|d [158, 162[158 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q rax|q [170, 178[170 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rax|q]" v31|q rax|q [182, 185[182 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[vstack:9|q]" v32|q v31|q [186, 220[ "StoreAtDefinition"
  v33|d DWORD "[rsi|d]" v33|d -1 [188, 216[[220, 222[188 MustHaveRegister 190 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r11|q]" v34|q v33|d [190, 216[190 MustHaveRegister 192 ShouldHaveRegister  "OneSpillStore"
  v35|q QWORD "[rdx|q]" v35|q v41|q [194, 206[200 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q v40|q [194, 208[196 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r8|q]" v37|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v38|d DWORD "[rdx|d]" v38|d -1 [206, 212[206 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rcx|d]" v39|d -1 [208, 210[208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v39|d [210, 215[210 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q v38|d [212, 215[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [222, 226[222 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q v42|d [226, 230[226 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [238, 251[238 MustHaveRegister  "OneSpillStore"
  v45|d DWORD "[rsi|d]" v45|d -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdx|q]" v46|q v45|d [242, 246[242 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q rax|q [254, 267[254 MustHaveRegister  "OneSpillStore"
  v48|d DWORD "[rsi|d]" v48|d -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rdx|q]" v49|q v48|d [258, 262[258 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q rax|q [270, 278[270 MustHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q rax|q [282, 285[282 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[vstack:13|q]" v52|q v51|q [286, 320[ "StoreAtDefinition"
  v53|d DWORD "[rsi|d]" v53|d -1 [288, 316[[320, 322[288 MustHaveRegister 290 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r11|q]" v54|q v53|d [290, 316[290 MustHaveRegister 292 ShouldHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdx|q]" v55|q v61|q [294, 306[300 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rcx|q]" v56|q v60|q [294, 308[296 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r8|q]" v57|q -1 [304, 305[304 MustHaveRegister  "NoDefinitionFound"
  v58|d DWORD "[rdx|d]" v58|d -1 [306, 312[306 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rcx|d]" v59|d -1 [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rcx|q]" v60|q v59|d [310, 315[310 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdx|q]" v61|q v58|d [312, 315[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rsi|d]" v62|d -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q v62|d [324, 328[324 MustHaveRegister 328 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rax|q]" v64|q rax|q [336, 349[336 MustHaveRegister  "OneSpillStore"
  v65|d DWORD "[rsi|d]" v65|d -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rdx|q]" v66|q v65|d [340, 344[340 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q rax|q [352, 365[352 MustHaveRegister  "OneSpillStore"
  v68|d DWORD "[rsi|d]" v68|d -1 [354, 356[354 MustHaveRegister 356 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rdx|q]" v69|q v68|d [356, 360[356 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rax|q]" v70|q rax|q [368, 376[368 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q rax|q [380, 383[380 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rax|q]" v72|q v2|q [384, 413[[414, 431[412 ShouldHaveRegister 420 MustHaveRegister 430 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v79|q [388, 400[394 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rdx|q]" v74|q v78|q [388, 402[390 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rcx|q]" v75|q -1 [398, 399[398 MustHaveRegister  "NoDefinitionFound"
  v76|d DWORD "[rsi|d]" v76|d -1 [400, 406[400 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[rdx|d]" v77|d -1 [402, 404[402 MustHaveRegister 404 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdx|q]" v78|q v77|d [404, 409[404 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q v76|d [406, 409[406 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rdx|d]" v80|d -1 [416, 422[416 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rdx|q]" v81|q v80|d [422, 426[422 MustHaveRegister 426 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rax|q]" v82|q rax|q [434, 447[434 MustHaveRegister  "OneSpillStore"
  v83|d DWORD "[rsi|d]" v83|d -1 [436, 438[436 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdx|q]" v84|q v83|d [438, 442[438 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rax|q]" v85|q rax|q [450, 463[450 MustHaveRegister  "OneSpillStore"
  v86|d DWORD "[rsi|d]" v86|d -1 [452, 454[452 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rdx|q]" v87|q v86|d [454, 458[454 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[rax|q]" v88|q rax|q [466, 474[466 MustHaveRegister 474 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rax|q]" v89|q rax|q [478, 481[478 MustHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rax|q]" v90|q v3|q [482, 484[484 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[rsi|d]" v91|d -1 [484, 490[484 MustHaveRegister 486 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[rsi|d]" v92|d -1 [490, 496[490 MustHaveRegister 492 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[rsi|d]" v93|d -1 [496, 502[496 MustHaveRegister 498 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[rsi|d]" v94|d -1 [502, 508[502 MustHaveRegister 504 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[rsi|d]" v95|d -1 [508, 514[508 MustHaveRegister 510 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v96|d DWORD "[rsi|d]" v96|d -1 [514, 520[514 MustHaveRegister 516 MustHaveRegister 520 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rsi|q]" v97|q v96|d [520, 522[520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d rax|q [526, 528[526 MustHaveRegister 528 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rax|d]" v99|d v98|d [528, 531[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[rax|d]" v100|d v99|d [556, 558[558 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[rax|d]" v101|d v100|d [558, 561[558 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v102|d DWORD "[rax|d]" v102|d v101|d [562, 564[564 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[rax|d]" v103|d v102|d [564, 567[564 MustHaveRegister 566 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[rax|d]" v104|d v103|d [568, 570[570 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[rax|d]" v105|d v104|d [570, 573[570 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[rax|d]" v106|d v105|d [574, 576[576 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[rax|d]" v107|d v106|d [576, 579[576 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[rax|d]" v108|d v107|d [580, 582[582 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rax|d]" v109|d v108|d [582, 585[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[r10|d]" v110|d v109|d [586, 618[[638, 652[588 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v111|d DWORD "[rax|d]" v111|d -1 [588, 592[[622, 626[588 MustHaveRegister 590 ShouldHaveRegister 626 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rsi|q]" v112|q -1 [624, 626[624 MustHaveRegister 626 MustHaveRegister  "NoSpillStore"
  v113|d DWORD "[rax|d]" v113|d -1 [626, 628[626 MustHaveRegister 628 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[rax|q]" v114|q v113|d [628, 631[628 MustHaveRegister 630 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[rax|q]" v115|q -1 [594, 612[594 MustHaveRegister 596 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister 608 MustHaveRegister 610 MustHaveRegister 612 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[rsi|q]" v116|q -1 [596, 602[596 MustHaveRegister 598 MustHaveRegister 602 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rsi|q]" v117|q -1 [640, 642[640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rax|q]" v118|q rax|q [646, 651[646 MustHaveRegister 648 MustHaveRegister 650 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[rax|q]" v120|q v115|q [612, 615[612 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[rax|q]" v121|q v120|q [616, 621[618 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[rax|q]" v122|q v114|q [632, 634[634 ShouldHaveRegister  "NoSpillStore"
  v123|q QWORD "[r10|q]" v0|q v0|q [7, 11[8 ShouldHaveRegister  "StoreAtDefinition"
  v124|q QWORD "[vstack:0|q]" v0|q v0|q [11, 72[[76, 80[[84, 410[16 ShouldHaveRegister 24 ShouldHaveRegister 128 ShouldHaveRegister 144 ShouldHaveRegister 160 ShouldHaveRegister 172 ShouldHaveRegister 228 ShouldHaveRegister 244 ShouldHaveRegister 260 ShouldHaveRegister 272 ShouldHaveRegister 326 ShouldHaveRegister 342 ShouldHaveRegister 358 ShouldHaveRegister 370 ShouldHaveRegister  "StoreAtDefinition"
  v125|q QWORD "[rsi|q]" v0|q v0|q [414, 423[ "StoreAtDefinition"
  v126|q QWORD "[vstack:1|q]" v1|q v1|q [19, 31[ "StoreAtDefinition"
  v127|q QWORD "[r10|q]" v1|q v1|q [31, 72[[76, 80[[84, 118[32 MustHaveRegister 36 MustHaveRegister  "StoreAtDefinition"
  v128|q QWORD "[vstack:2|q]" v2|q v2|q [27, 34[ "StoreAtDefinition"
  v129|q QWORD "[r11|q]" v2|q v2|q [34, 72[[76, 80[[84, 135[40 MustHaveRegister 44 MustHaveRegister 90 ShouldHaveRegister 122 MustHaveRegister 132 ShouldHaveRegister  "StoreAtDefinition"
  v130|q QWORD "[vstack:3|q]" v3|q v3|q [135, 155[148 ShouldHaveRegister  "SpillInDominator"
  v131|q QWORD "[vstack:1|q]" v1|q v1|q [118, 135[ "StoreAtDefinition"
  v132|q QWORD "[vstack:2|q]" v2|q v2|q [135, 139[ "StoreAtDefinition"
  v133|q QWORD "[vstack:4|q]" v5|q v5|q [118, 135[ "OneSpillStore"
  v134|q QWORD "[vstack:4|q]" v5|q v5|q [135, 164[150 ShouldHaveRegister 164 ShouldHaveRegister  "OneSpillStore"
  v135|q QWORD "[vstack:1|q]" v1|q v1|q [135, 220[218 ShouldHaveRegister  "StoreAtDefinition"
  v136|q QWORD "[r10|q]" v2|q v2|q [139, 151[140 MustHaveRegister  "StoreAtDefinition"
  v137|q QWORD "[r10|q]" v3|q v3|q [155, 167[156 MustHaveRegister  "SpillInDominator"
  v138|q QWORD "[r10|q]" v1|q v1|q [220, 235[234 ShouldHaveRegister  "StoreAtDefinition"
  v139|q QWORD "[vstack:6|q]" v24|q v24|q [151, 174[174 ShouldHaveRegister  "OneSpillStore"
  v140|q QWORD "[vstack:2|q]" v2|q v2|q [151, 186[166 ShouldHaveRegister  "StoreAtDefinition"
  v141|q QWORD "[rax|q]" v2|q v2|q [186, 220[188 MustHaveRegister  "StoreAtDefinition"
  v142|q QWORD "[vstack:7|q]" v27|q v27|q [167, 176[176 ShouldHaveRegister  "OneSpillStore"
  v143|q QWORD "[vstack:3|q]" v3|q v3|q [167, 220[192 ShouldHaveRegister  "SpillInDominator"
  v144|q QWORD "[rax|q]" v3|q v3|q [220, 235[224 MustHaveRegister 232 ShouldHaveRegister  "SpillInDominator"
  v145|q QWORD "[vstack:2|q]" v2|q v2|q [220, 235[ "StoreAtDefinition"
  v146|q QWORD "[vstack:9|q]" v32|q v32|q [220, 235[ "StoreAtDefinition"
  v147|q QWORD "[vstack:8|q]" v34|q v34|q [220, 235[ "OneSpillStore"
  v148|q QWORD "[vstack:3|q]" v3|q v3|q [235, 239[ "SpillInDominator"
  v149|q QWORD "[vstack:1|q]" v1|q v1|q [235, 255[248 ShouldHaveRegister  "StoreAtDefinition"
  v150|q QWORD "[vstack:8|q]" v34|q v34|q [235, 264[250 ShouldHaveRegister 264 ShouldHaveRegister  "OneSpillStore"
  v151|q QWORD "[vstack:2|q]" v2|q v2|q [235, 319[318 ShouldHaveRegister  "StoreAtDefinition"
  v152|q QWORD "[vstack:9|q]" v32|q v32|q [235, 410[386 ShouldHaveRegister  "StoreAtDefinition"
  v153|q QWORD "[r10|q]" v3|q v3|q [239, 251[240 MustHaveRegister  "SpillInDominator"
  v154|q QWORD "[r10|q]" v1|q v1|q [255, 267[256 MustHaveRegister  "StoreAtDefinition"
  v155|q QWORD "[r10|q]" v2|q v2|q [320, 333[332 ShouldHaveRegister  "StoreAtDefinition"
  v156|q QWORD "[r10|q]" v32|q v32|q [414, 431[416 MustHaveRegister  "StoreAtDefinition"
  v157|q QWORD "[vstack:10|q]" v44|q v44|q [251, 274[274 ShouldHaveRegister  "OneSpillStore"
  v158|q QWORD "[vstack:3|q]" v3|q v3|q [251, 286[266 ShouldHaveRegister  "SpillInDominator"
  v159|q QWORD "[rax|q]" v3|q v3|q [286, 288[288 MustHaveRegister  "SpillInDominator"
  v160|q QWORD "[vstack:11|q]" v47|q v47|q [267, 276[276 ShouldHaveRegister  "OneSpillStore"
  v161|q QWORD "[vstack:1|q]" v1|q v1|q [267, 316[292 ShouldHaveRegister  "StoreAtDefinition"
  v162|q QWORD "[rax|q]" v1|q v1|q [320, 333[330 ShouldHaveRegister  "StoreAtDefinition"
  v163|q QWORD "[vstack:13|q]" v52|q v52|q [320, 333[ "StoreAtDefinition"
  v164|q QWORD "[vstack:12|q]" v54|q v54|q [320, 333[ "OneSpillStore"
  v165|q QWORD "[vstack:1|q]" v1|q v1|q [333, 337[ "StoreAtDefinition"
  v166|q QWORD "[vstack:2|q]" v2|q v2|q [333, 353[346 ShouldHaveRegister  "StoreAtDefinition"
  v167|q QWORD "[vstack:12|q]" v54|q v54|q [333, 362[348 ShouldHaveRegister 362 ShouldHaveRegister  "OneSpillStore"
  v168|q QWORD "[vstack:13|q]" v52|q v52|q [333, 410[386 ShouldHaveRegister  "StoreAtDefinition"
  v169|q QWORD "[r10|q]" v1|q v1|q [337, 349[338 MustHaveRegister  "StoreAtDefinition"
  v170|q QWORD "[rsi|q]" v2|q v2|q [353, 354[354 MustHaveRegister  "StoreAtDefinition"
  v171|q QWORD "[r11|q]" v52|q v52|q [414, 431[418 MustHaveRegister 428 ShouldHaveRegister  "StoreAtDefinition"
  v172|q QWORD "[vstack:14|q]" v64|q v64|q [349, 372[372 ShouldHaveRegister  "OneSpillStore"
  v173|q QWORD "[vstack:1|q]" v1|q v1|q [349, 364[364 ShouldHaveRegister  "StoreAtDefinition"
  v174|q QWORD "[vstack:15|q]" v67|q v67|q [365, 374[374 ShouldHaveRegister  "OneSpillStore"
  v175|q QWORD "[vstack:16|q]" v72|q v72|q [431, 451[444 ShouldHaveRegister  "OneSpillStore"
  v176|q QWORD "[vstack:9|q]" v32|q v32|q [431, 460[446 ShouldHaveRegister 460 ShouldHaveRegister  "StoreAtDefinition"
  v177|q QWORD "[vstack:13|q]" v52|q v52|q [431, 435[ "StoreAtDefinition"
  v178|q QWORD "[r9|q]" v0|q v0|q [423, 431[424 ShouldHaveRegister  "StoreAtDefinition"
  v179|q QWORD "[vstack:0|q]" v0|q v0|q [431, 468[440 ShouldHaveRegister 456 ShouldHaveRegister 468 ShouldHaveRegister  "StoreAtDefinition"
  v180|q QWORD "[r11|q]" v52|q v52|q [435, 447[436 MustHaveRegister  "StoreAtDefinition"
  v181|q QWORD "[rsi|q]" v72|q v72|q [451, 452[452 MustHaveRegister  "OneSpillStore"
  v182|q QWORD "[vstack:17|q]" v82|q v82|q [447, 470[470 ShouldHaveRegister  "OneSpillStore"
  v183|q QWORD "[vstack:13|q]" v52|q v52|q [447, 462[462 ShouldHaveRegister  "StoreAtDefinition"
  v184|q QWORD "[vstack:18|q]" v85|q v85|q [463, 472[472 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   14  <|@ instruction v1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: v0|QWORD[.] v1|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   22  <|@ instruction v2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   30  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v126|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   50  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   62  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   92  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  104  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  108  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  126  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = STACKMOVE (input: v131|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = STACKMOVE (input: v133|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  138  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  154  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  170  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  182  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  186  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  190  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  194  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  206  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  208  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  210  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = STACKMOVE (input: v135|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  226  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = STACKMOVE (input: v145|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = STACKMOVE (input: v147|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  238  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE input: v148|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  242  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = MOVE input: v153|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  254  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  270  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  282  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v158|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  286  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  290  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  294  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  306  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  324  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = STACKMOVE (input: v163|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = STACKMOVE (input: v164|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE input: v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  336  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE input: v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE input: v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  352  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  368  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  380  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  384  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v168|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  388  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  400  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE input: v168|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  422  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE input: v156|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = MOVE input: v178|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = MOVE input: v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  434  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE input: v177|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  438  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = MOVE input: v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  450  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v184|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  466  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  478  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction v91|DWORD[_] = MOV input: [v90|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: v91|DWORD[_], y: v91|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v92|DWORD[_] = MOV input: [v91|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction v93|DWORD[_] = MOV input: [v92|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: v93|DWORD[_], y: v93|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction v94|DWORD[_] = MOV input: [v93|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction v95|DWORD[_] = MOV input: [v94|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: v95|DWORD[_], y: v95|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction v96|DWORD[_] = MOV input: [v95|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v96|DWORD[_], y: v96|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  526  <|@ instruction v98|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  556  <|@ instruction [v100|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction v101|DWORD = INC value: v100|DWORD size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  562  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction v103|DWORD = INC value: v102|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  568  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  570  <|@ instruction v105|DWORD = INC value: v104|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  574  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  576  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  580  <|@ instruction [v108|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction v109|DWORD = INC value: v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: v109|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  586  <|@ instruction [v110|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  588  <|@ instruction v111|DWORD = LEA address: [v110|DWORD + 128] size: DWORD <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH x: v111|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction v115|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  596  <|@ instruction v116|QWORD = LEA address: [v115|QWORD + 16] size: QWORD <|@ <|@
      nr  598  <|@ instruction CMPBRANCH (x: v116|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOV (x: [r15|QWORD + 440], y: v116|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction AMD64PREFETCH ~address: [v115|QWORD + 208] instr: 3 <|@ <|@
      nr  606  <|@ instruction MOV x: [v115|QWORD] y: 1 size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  610  <|@ instruction MOV x: [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  612  <|@ instruction v120|QWORD[.] = MOVE input: v115|QWORD moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  616  <|@ instruction [v121|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction MOV (x: [v121|QWORD[.] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  626  <|@ instruction v113|DWORD[_] = MOV input: [v112|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  628  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  632  <|@ instruction [v122|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v117|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  646  <|@ instruction v118|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [v118|QWORD[.]] state [bci:27] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   14  <|@ instruction v1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: v0|QWORD[.] v1|QWORD[.] 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   22  <|@ instruction v2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   30  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v126|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   62  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  104  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  108  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  126  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = STACKMOVE (input: v133|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  138  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  154  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  170  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  182  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  190  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  206  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  208  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  210  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = STACKMOVE (input: v135|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  226  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = STACKMOVE (input: v147|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  238  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE input: v148|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  242  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  254  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  270  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  282  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v158|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  290  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  306  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  324  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = STACKMOVE (input: v164|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  336  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE input: v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  352  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  368  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  380  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v168|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  400  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE input: v168|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  422  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  434  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE input: v177|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  438  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  450  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v184|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  466  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  478  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction v91|DWORD[_] = MOV input: [v90|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: v91|DWORD[_], y: v91|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v92|DWORD[_] = MOV input: [v91|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction v93|DWORD[_] = MOV input: [v92|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: v93|DWORD[_], y: v93|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction v94|DWORD[_] = MOV input: [v93|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction v95|DWORD[_] = MOV input: [v94|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: v95|DWORD[_], y: v95|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction v96|DWORD[_] = MOV input: [v95|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v96|DWORD[_], y: v96|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  526  <|@ instruction v98|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction v101|DWORD = INC value: v100|DWORD size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction v103|DWORD = INC value: v102|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  570  <|@ instruction v105|DWORD = INC value: v104|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  576  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction v109|DWORD = INC value: v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: v109|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  588  <|@ instruction v111|DWORD = LEA address: [v110|DWORD + 128] size: DWORD <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH x: v111|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction v115|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  596  <|@ instruction v116|QWORD = LEA address: [v115|QWORD + 16] size: QWORD <|@ <|@
      nr  598  <|@ instruction CMPBRANCH (x: v116|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOV (x: [r15|QWORD + 440], y: v116|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction AMD64PREFETCH ~address: [v115|QWORD + 208] instr: 3 <|@ <|@
      nr  606  <|@ instruction MOV x: [v115|QWORD] y: 1 size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  610  <|@ instruction MOV x: [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  612  <|@ instruction v120|QWORD[.] = MOVE input: v115|QWORD moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction MOV (x: [v121|QWORD[.] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v112|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  626  <|@ instruction v113|DWORD[_] = MOV input: [v112|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  628  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v117|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v117|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  646  <|@ instruction v118|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: v110|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [v118|QWORD[.]] state [bci:27] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: vstack:0|QWORD[.] vstack:1|QWORD[.] 
locals: vstack:0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  104  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:6|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:7|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] Object[null] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] r11|QWORD[.] vstack:3|QWORD[.] vstack:1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] rax|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  206  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|QWORD[.] = STACKMOVE (input: vstack:1|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:8|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] r10|QWORD[.] vstack:2|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:8|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] r10|QWORD[.] vstack:2|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:8|QWORD[.] vstack:3|QWORD[.] vstack:1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:10|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:8|QWORD[.] vstack:3|QWORD[.] vstack:1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:10|QWORD[.] vstack:11|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr   -1  <|@ instruction vstack:13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  290  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] r11|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  306  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:12|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:12|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:12|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction r8|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:14|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:12|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:14|QWORD[.] vstack:15|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] vstack:16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  438  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r8|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:17|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] vstack:16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:17|QWORD[.] vstack:18|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  528  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  576  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  588  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  598  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  606  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  610  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  612  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  626  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  628  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  636  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   20  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: vstack:0|QWORD[.] vstack:1|QWORD[.] 
locals: vstack:0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  104  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:6|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:7|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] Object[null] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] r11|QWORD[.] vstack:3|QWORD[.] vstack:1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] rax|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  206  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|QWORD[.] = STACKMOVE (input: vstack:1|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:8|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] r10|QWORD[.] vstack:2|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:8|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] r10|QWORD[.] vstack:2|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:8|QWORD[.] vstack:3|QWORD[.] vstack:1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:10|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:8|QWORD[.] vstack:3|QWORD[.] vstack:1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:10|QWORD[.] vstack:11|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr   -1  <|@ instruction vstack:13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  290  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  296  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] r11|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  306  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:12|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:12|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:12|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction r8|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:14|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:12|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:14|QWORD[.] vstack:15|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  400  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] vstack:16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  438  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r8|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:17|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] vstack:16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:17|QWORD[.] vstack:18|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  484  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  528  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  576  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  588  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  598  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  606  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  610  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  612  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  626  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  628  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  636  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   16  <|@ instruction vstack:1|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: vstack:0|QWORD[.] vstack:1|QWORD[.] 
locals: vstack:0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   24  <|@ instruction vstack:2|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction vstack:3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction vstack:9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction vstack:4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:6|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction vstack:7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:7|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  190  <|@ instruction vstack:9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] Object[null] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] r11|QWORD[.] vstack:3|QWORD[.] vstack:1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] rax|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  228  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction vstack:13|QWORD[.] = STACKMOVE (input: vstack:1|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax <|@ <|@
      nr  312  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction vstack:8|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:8|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] r10|QWORD[.] vstack:2|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:8|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] r10|QWORD[.] vstack:2|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:8|QWORD[.] vstack:3|QWORD[.] vstack:1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction vstack:10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:10|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:8|QWORD[.] vstack:3|QWORD[.] vstack:1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction vstack:11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:10|QWORD[.] vstack:11|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] vstack:3|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  302  <|@ instruction vstack:13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  320  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] r11|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  340  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction vstack:12|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:12|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:12|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction vstack:14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:14|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:12|QWORD[.] vstack:1|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction vstack:15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:14|QWORD[.] vstack:15|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction vstack:16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] vstack:16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction vstack:17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:0|QWORD[.] vstack:17|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] vstack:16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction vstack:18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:0|QWORD[.] vstack:17|QWORD[.] vstack:18|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  542  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  604  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  644  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  680  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  684  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  650  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [6, 510[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [16, 396[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [24, 416[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [98, 312[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [130, 172[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [0, 698[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [160, 182[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[vstack:7|q]" vstack:7|q -1 [176, 184[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[vstack:8|q]" vstack:8|q -1 [240, 284[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[vstack:9|q]" vstack:9|q -1 [190, 502[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [272, 294[ "NOT_SUPPORTED"
  vstack:11|q QWORD "[vstack:11|q]" vstack:11|q -1 [288, 296[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[vstack:12|q]" vstack:12|q -1 [352, 394[ "NOT_SUPPORTED"
  vstack:13|q QWORD "[vstack:13|q]" vstack:13|q vstack:1|q [302, 504[ "NOT_SUPPORTED"
  vstack:14|q QWORD "[vstack:14|q]" vstack:14|q -1 [382, 404[ "NOT_SUPPORTED"
  vstack:15|q QWORD "[vstack:15|q]" vstack:15|q -1 [398, 406[ "NOT_SUPPORTED"
  vstack:16|q QWORD "[vstack:16|q]" vstack:16|q -1 [474, 494[ "NOT_SUPPORTED"
  vstack:17|q QWORD "[vstack:17|q]" vstack:17|q -1 [490, 512[ "NOT_SUPPORTED"
  vstack:18|q QWORD "[vstack:18|q]" vstack:18|q -1 [506, 514[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:40|q]" vstack:0|q -1 [6, 510[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:48|q]" vstack:1|q -1 [16, 396[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:56|q]" vstack:2|q -1 [24, 416[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:64|q]" vstack:3|q -1 [98, 312[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:72|q]" vstack:4|q -1 [130, 172[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:32|q]" vstack:5|q -1 [0, 698[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:80|q]" vstack:6|q -1 [160, 182[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[stack:72|q]" vstack:7|q -1 [176, 184[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[stack:80|q]" vstack:8|q -1 [240, 284[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[stack:72|q]" vstack:9|q -1 [190, 502[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:88|q]" vstack:10|q -1 [272, 294[ "NOT_SUPPORTED"
  vstack:11|q QWORD "[stack:80|q]" vstack:11|q -1 [288, 296[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[stack:64|q]" vstack:12|q -1 [352, 394[ "NOT_SUPPORTED"
  vstack:13|q QWORD "[stack:80|q]" vstack:13|q vstack:1|q [302, 504[ "NOT_SUPPORTED"
  vstack:14|q QWORD "[stack:88|q]" vstack:14|q -1 [382, 404[ "NOT_SUPPORTED"
  vstack:15|q QWORD "[stack:48|q]" vstack:15|q -1 [398, 406[ "NOT_SUPPORTED"
  vstack:16|q QWORD "[stack:56|q]" vstack:16|q -1 [474, 494[ "NOT_SUPPORTED"
  vstack:17|q QWORD "[stack:48|q]" vstack:17|q -1 [490, 512[ "NOT_SUPPORTED"
  vstack:18|q QWORD "[stack:80|q]" vstack:18|q -1 [506, 514[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   16  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   24  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rax|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  228  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  312  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  302  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  320  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  340  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  542  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  604  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  644  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  680  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  684  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  650  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   16  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   24  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rax|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  228  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  312  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  302  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  320  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  340  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  542  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  604  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  644  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  680  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  684  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  650  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   16  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   24  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rax|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  228  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  302  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  320  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  340  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  542  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  604  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  644  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  680  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  684  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  650  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   16  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   24  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rax|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  228  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  302  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  320  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  340  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  542  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  604  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  644  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  680  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  684  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  650  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   16  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   24  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rax|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  228  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  302  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  320  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  340  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B33 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B9" "B33" "B1" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  542  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  604  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  644  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  680  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  684  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  650  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B34" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   16  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   24  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B34 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B10 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B34" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B34 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B10 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rax|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  228  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  302  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  320  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  340  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B34" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B5" "B29" "B0" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  542  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  604  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  644  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  680  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  684  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  650  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B34" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   16  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   24  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B34 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B10 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B10 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B34" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B34 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B5" "B29" "B0" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  542  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  604  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  644  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  680  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  684  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  650  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rax|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  228  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  320  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  340  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B34" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  302  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B34" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   16  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   24  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B34 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B10 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B10 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B34" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B34 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B5" "B29" "B0" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  542  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  604  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  644  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  680  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  684  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  650  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rax|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  228  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  320  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  340  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B34" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  302  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B34" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 4]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   16  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 10]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   24  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 16]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B34 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B10 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B10 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B34" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B34 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B5" "B29" "B0" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  542  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  604  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  644  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  680  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  684  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  650  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rax|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  228  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  320  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  340  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B34" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  248  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  302  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B34" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
List.benchmark() [bci: 4]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   16  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [stack:48, stack:56]
live-base-pointers: []
List.benchmark() [bci: 10]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   24  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [stack:40, stack:48, stack:56]
live-base-pointers: []
List.benchmark() [bci: 16]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B34 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B10 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B10 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B34" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B34 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B5" "B29" "B0" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ st <@st|@reference-map: []
live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  542  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ st <@st|@reference-map: []
live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  604  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  644  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  680  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  684  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  650  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [rax:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rax|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  228  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  320  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r11:0, stack:16, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  340  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B34" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  462  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: [stack:16, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: []
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  248  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  302  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [rax:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  136  <|@ st <@st|@reference-map: [rax:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  668  <|@ st <@st|@reference-map: []
live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B34" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD = MOVE input: int[15|0xf] <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
List.benchmark() [bci: 4]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4] <|@ <|@
      nr   16  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [stack:48, stack:56]
live-base-pointers: []
List.benchmark() [bci: 10]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10] <|@ <|@
      nr   24  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [stack:40, stack:48, stack:56]
live-base-pointers: []
List.benchmark() [bci: 16]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B34 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B10 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B10 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rcx|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B34" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B34 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B5" "B29" "B0" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ st <@st|@reference-map: []
live-base-pointers: []
List.benchmark() [bci: 22]
stack: Object[null] 
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606281874762050724
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  542  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605471367542564599
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4604741895217899192
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604085355880976157
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4603494457657215511
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4602962637717103654
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ st <@st|@reference-map: []
live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List.benchmark() [bci: 24]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24] <|@ <|@
      nr  604  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603494457657215510
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4604085355880976156
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B41" "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4604741895217899191
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B39" "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605471367542564598
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B37" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606281874762050723
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B35" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD <|@ <|@
      nr  644  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4602588747180099501
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3 <|@ <|@
      nr  680  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  684  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>] <|@ <|@
      nr  650  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B13" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r9|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19] <|@ <|@
      nr  118  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [rax:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19] <|@ <|@
      nr  208  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B19" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rax|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19] <|@ <|@
      nr  228  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19] <|@ <|@
      nr  320  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B25" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r11:0, stack:16, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r11|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19] <|@ <|@
      nr  340  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B24" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B31" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19] <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B34" "B30" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B52" 
    xhandlers
    flags 
    probability 4591868772966898400
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591148478419053929
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590500199260488186
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 4589916735358549208
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B48" 
    xhandlers
    flags 
    probability 4589391606453250096
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19] <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  462  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19] <|@ <|@
      nr  478  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19] <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: [stack:16, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: []
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19] <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19] <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19] <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19] <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19] <|@ <|@
      nr  248  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] r10|QWORD[.] stack:56|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19] <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19] <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19] <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19] <|@ <|@
      nr  302  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19] <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [rax:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  136  <|@ st <@st|@reference-map: [rax:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] rax|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19] <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19] <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19] <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.benchmark() [bci: 19]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19] <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4588669940077584136
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4572414629676717183
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>} <|@ <|@
      nr  668  <|@ st <@st|@reference-map: []
live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
List.benchmark() [bci: 27]
stack: r10|DWORD 
locals: - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: bipush        15
     4: invokevirtual #1          // makeList:(int)List$Element
     7: aload_0       
     8: bipush        10
    10: invokevirtual #1          // makeList:(int)List$Element
    13: aload_0       
    14: bipush        6
    16: invokevirtual #1          // makeList:(int)List$Element
    19: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    22: astore_1      
    23: aload_1       
    24: invokevirtual #3          // List$Element.length:()int
    27: invokestatic  #4          // java.lang.Integer.valueOf:(int)java.lang.Integer
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000738a7f00004d03d44d33e4493bc20f85e3ffffff89842400c0feff4883ec5841817f20000000000f857106000048896c245048897424384c8bd6ba0f000000666690e8000000000f1f8400000000004889442430488b742438ba0a000000e8000000000f1f8400000000004889442428488b742438ba06000000e8000000000f1f8400000000004c8b5424304d85d20f84680000004c8b5c2428418b7210448bce49c1e1034d85db0f844e010000418b531048c1e203488bca498bd1e9370000006666660f1f840000000000666666900f1f80000000004885c90f841c0100004d8b87580400004185008b49108b521048c1e20348c1e1034885d275da8b701085f60f84390200008b34f51000000085f60f84350200008b34f51000000085f60f84300200008b34f51000000085f60f842b0200008b34f51000000085f60f84260200008b34f51000000085f60f842305000048c1e603666690e8000000000f1f840000000000ffc0ffc0ffc0ffc0ffc0ffc0448bd0418d828000000081f8000100000f825f000000498b87b8010000488d7010666690493bb7c80100000f87dc0400004989b7b80100000f0d88d000000048c70001000000c74008addeaddec7400c000000004489500c488b6c24504883c458666690493ba7500400000f87ca040000c5f877c348beaddeaddeaddeadde8b44861048c1e003ebcf4889442420498bc9498bd3e92c0000006666660f1f8400000000004885d20f84910300004d8b87580400004185008b52108b491048c1e10348c1e2034885c975da4889442418498bc38b7010448bde49c1e303498bcb488b542420e93c0000006666660f1f840000000000666666900f1f840000000000666666904885d20f846c0200004d8b87580400004185008b52108b491048c1e10348c1e2034885c975da4889442440488b4424304889442410488b442440488b4424208b7010448bde49c1e303498bcb488b542430e92b00000066660f1f8400000000004885d20f84500100004d8b87580400004185008b52108b491048c1e10348c1e2034885c975da488b442428488b542418488b742410e926000000660f1f4400004885f60f8454000000498b8f5804000085018b76108b521048c1e20348c1e6034885d275dbe9bcfdffff41ba01000000e92afeffffb801000000e91bfeffffb801000000e90ffeffffb801000000e903feffffb801000000e9f7fdffff4c8b5c24104c8b542418488b742438418b5210418503850048c1e2034c8bce498bcb4c8bc04889442428e8000000000f1f8400000000004c8b5c2410418b73108bd648c1e203488b742438488b4c24284c8b4424184889442430e8000000000f1f840000000000488b7424288b76108bd648c1e203488b742438488b4c24184c8b442410488944241090e8000000000f1f840000000000488b742438488b542430488b4c24104c8bc090e8000000000f1f840000000000e9cdfcffff4c895c24204c8b542428488b4424308b34f5100000008bd648c1e203488b742438488bc84d8bc2666690e8000000000f1f8400000000004c8b542430418b72108bd648c1e203488b742438488b4c24284c8b4424204889442408e8000000000f1f840000000000488b7424288b76108bd648c1e203488b742438488b4c24204c8b442430488944243090e8000000000f1f840000000000488b742438488b542408488b4c24304c8bc090e8000000000f1f840000000000e916feffff4c895c24104c8b542430488b4424208b34f51000000085008bd648c1e203488b742438488bc84d8bc29090666690e8000000000f1f8400000000004c8b542420418b72108bd648c1e203488b742438488b4c24304c8b4424104889442408e8000000000f1f8400000000004c8b542430418b72108bd648c1e203488b742438488b4c24104c8b4424204889442410e8000000000f1f840000000000488b742438488b542408488b4c24104c8bc090e8000000000f1f8400000000004889442410e900fdffff4c894c24188b34f51000000041850385008bd648c1e203488b742438498bcb4c8bc066669090666690e8000000000f1f8400000000004c8b542428418b72108bd648c1e203488b742438488b4c24204c8b4424184889442410e8000000000f1f8400000000004c8b542420418b72108bd648c1e203488b742438488b4c24184c8b4424284889442418e8000000000f1f840000000000488b742438488b542410488b4c24184c8bc090e8000000000f1f8400000000004889442418488b442428e9cffbffffb801000000e9e9faffff48beaddeaddeaddeaddee8000000000f1f8400000000008500e929fbffff48896c2450e800000000e980f9fffff4488d0d22fbffff49898f68040000e936f9fffff441c78784040000f5f9fdff49c7879004000000000000e8000000000f1f84000000000041c78784040000f543feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f529feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f50afeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f505feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f500feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f51efeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f538feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f533feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f554feff49c78790040000000000000f1f4000e8000000000f1f84000000000041c78784040000f54ffeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f54afeff49c7879004000000000000e8000000000f1f84000000000041c787840400008fe5fcff49c7879004000000000000e8000000000f1f840000000000e800000000f40f1f4000e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD  <||@
  Comment 59 6 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 64 8 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 67 12 rdx|DWORD = MOVE input: int[15|0xf]  <||@
  Comment 72 14 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4]  <||@
  Comment 75 {HotSpotMethod<List.makeList(int)>}  <||@
  Comment 75 INVOKESPECIAL  <||@
  Comment 80 [stack:56]at List.benchmark() [bci: 4, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
     stack:   |stack:40|QWORD[.]  |    <||@
  Comment 88 16 stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 93 18 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 98 20 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 103 22 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10]  <||@
  Comment 103 {HotSpotMethod<List.makeList(int)>}  <||@
  Comment 103 INVOKESPECIAL  <||@
  Comment 108 [stack:48, stack:56]at List.benchmark() [bci: 10, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |-                 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 116 24 stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 121 26 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 126 28 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 131 30 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16]  <||@
  Comment 131 {HotSpotMethod<List.makeList(int)>}  <||@
  Comment 131 INVOKESPECIAL  <||@
  Comment 136 [stack:40, stack:48, stack:56]at List.benchmark() [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                 
     locals:  |-                  |-                  |                  
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 144 32 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 149 34 TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B34 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 158 block B2 null  <||@
  Comment 158 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 158 42 r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 163 44 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 167 46 r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 174 48 TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B10 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 183 block B4 null  <||@
  Comment 183 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 183 56 rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 187 58 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 191 60 rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 194 62 rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 197 64 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 202 block B6 loop 0 depth 1 header:42|LoopBegin  <||@
  Comment 202 70 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 72 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B10 falseDestination: B6 -> B7 size: QWORD  <||@
  Comment 233 block B7 loop 0 depth 1 header:42|LoopBegin  <||@
  Comment 233 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 233 76 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19]  <||@
  Comment 240 [rax:0, rcx:0, rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rcx|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1             |2             |3            
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 240 {infopoint: SAFEPOINT}  <||@
  Comment 240 POLL_FAR  <||@
  Comment 243 78 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 246 80 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 249 82 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 253 84 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 257 86 JUMP ~outgoingValues: [] destination: B7 -> B5  <||@
  Comment 257 block B5 loop 0 depth 1 header:42|LoopBegin  <||@
  Comment 257 66 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 257 68 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B34 falseDestination: B5 -> B6 size: QWORD  <||@
  Comment 262 block B34 null  <||@
  Comment 262 526 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 262 528 rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22]  <||@
  Comment 262 []at List.benchmark() [bci: 22, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |Object[null]  |    <||@
  Comment 262 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 265 530 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD  <||@
  Comment 273 block B36 null  <||@
  Comment 273 538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 273 540 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 280 542 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 288 block B38 null  <||@
  Comment 288 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 288 552 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 295 554 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD  <||@
  Comment 303 block B40 null  <||@
  Comment 303 562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 303 564 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 310 566 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD  <||@
  Comment 318 block B42 null  <||@
  Comment 318 574 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 318 576 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 325 578 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 333 block B44 null  <||@
  Comment 333 586 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 333 588 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 340 590 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 348 block B46 null  <||@
  Comment 348 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 348 600 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 352 602 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24]  <||@
  Comment 355 {HotSpotMethod<List$Element.length()>}  <||@
  Comment 355 INVOKESPECIAL  <||@
  Comment 360 []at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List.benchmark() [bci: 24, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 368 604 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 370 606 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 370 block B47 null  <||@
  Comment 370 608 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 370 610 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 372 612 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 372 block B48 null  <||@
  Comment 372 614 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 372 616 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 374 618 JUMP ~outgoingValues: [] destination: B48 -> B49  <||@
  Comment 374 block B49 null  <||@
  Comment 374 620 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 374 622 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 376 624 JUMP ~outgoingValues: [] destination: B49 -> B50  <||@
  Comment 376 block B50 null  <||@
  Comment 376 626 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 376 628 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 378 630 JUMP ~outgoingValues: [] destination: B50 -> B51  <||@
  Comment 378 block B51 null  <||@
  Comment 378 632 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 378 634 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 380 636 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 383 638 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 383 block B52 null  <||@
  Comment 383 640 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 383 642 rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD  <||@
  Comment 390 644 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null  <||@
  Comment 402 block B54 null  <||@
  Comment 402 656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 402 658 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 409 660 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 413 662 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD  <||@
  Comment 429 block B56 null  <||@
  Comment 429 674 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 429 676 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 436 678 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 443 680 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 450 682 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 450 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 457 684 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 464 686 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 464 688 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 464 block B57 null  <||@
  Comment 464 690 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 464 692 MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 468 694 JUMP ~outgoingValues: [] destination: B57 -> B58  <||@
  Comment 468 block B58 null  <||@
  Comment 468 696 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 468 698 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 480 POLL_RETURN_FAR  <||@
  Comment 497 block B53 null  <||@
  Comment 497 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 497 648 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>]  <||@
  Comment 497 {Object[Instance<java.lang.Integer[]>]}  <||@
  Comment 507 650 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 511 652 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 515 654 JUMP ~outgoingValues: [] destination: B53 -> B58  <||@
  Comment 517 block B10 null  <||@
  Comment 517 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 517 98 stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 522 100 rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 525 102 rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 528 104 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 533 block B12 loop 1 depth 1 header:87|LoopBegin  <||@
  Comment 533 110 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 112 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD  <||@
  Comment 553 block B13 loop 1 depth 1 header:87|LoopBegin  <||@
  Comment 553 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 553 116 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19]  <||@
  Comment 560 [rax:0, rcx:0, rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1            |2             |3            
     locals:  |stack:40|QWORD[.]  |r9|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1             |2             |3            
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |              |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 560 {infopoint: SAFEPOINT}  <||@
  Comment 560 POLL_FAR  <||@
  Comment 563 118 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 566 120 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 569 122 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 573 124 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 577 126 JUMP ~outgoingValues: [] destination: B13 -> B11  <||@
  Comment 577 block B11 loop 1 depth 1 header:87|LoopBegin  <||@
  Comment 577 106 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 577 108 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD  <||@
  Comment 582 block B15 null  <||@
  Comment 582 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 582 198 stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 587 200 rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 590 202 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 590 block B16 null  <||@
  Comment 590 204 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 590 206 rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19]  <||@
  Comment 590 [rax:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |Object[null]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |              |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 590 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 593 208 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 600 210 rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 603 212 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 608 214 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 613 block B18 loop 2 depth 1 header:137|LoopBegin  <||@
  Comment 613 220 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 640 222 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD  <||@
  Comment 649 block B19 loop 2 depth 1 header:137|LoopBegin  <||@
  Comment 649 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 649 226 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19]  <||@
  Comment 656 [rax:0, rcx:0, rdx:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3                 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |rax|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |              |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 656 {infopoint: SAFEPOINT}  <||@
  Comment 656 POLL_FAR  <||@
  Comment 659 228 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 662 230 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 665 232 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 669 234 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 673 236 JUMP ~outgoingValues: [] destination: B19 -> B17  <||@
  Comment 673 block B17 loop 2 depth 1 header:137|LoopBegin  <||@
  Comment 673 216 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 673 218 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD  <||@
  Comment 678 block B21 null  <||@
  Comment 678 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 678 310 stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 698 314 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 698 block B22 null  <||@
  Comment 698 316 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 698 304 rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 703 318 rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19]  <||@
  Comment 703 [stack:16, stack:24, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 30, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |Object[null] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 703 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 706 320 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 713 322 rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 716 324 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 721 326 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 726 block B24 loop 3 depth 1 header:187|LoopBegin  <||@
  Comment 726 332 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 334 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD  <||@
  Comment 745 block B25 loop 3 depth 1 header:187|LoopBegin  <||@
  Comment 745 336 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 745 338 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19]  <||@
  Comment 752 [rcx:0, rdx:0, rsi:0, r11:0, stack:16, stack:24, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3                 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 752 {infopoint: SAFEPOINT}  <||@
  Comment 752 POLL_FAR  <||@
  Comment 755 340 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 758 342 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 761 344 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 765 346 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 769 348 JUMP ~outgoingValues: [] destination: B25 -> B23  <||@
  Comment 769 block B23 loop 3 depth 1 header:187|LoopBegin  <||@
  Comment 769 328 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 769 330 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD  <||@
  Comment 774 block B27 null  <||@
  Comment 774 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 774 416 rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 779 418 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 779 block B28 null  <||@
  Comment 779 420 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 779 422 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 784 424 rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 789 426 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 794 block B30 loop 4 depth 1 header:239|LoopBegin  <||@
  Comment 794 432 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 800 434 TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD  <||@
  Comment 809 block B31 loop 4 depth 1 header:239|LoopBegin  <||@
  Comment 809 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 809 438 SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19]  <||@
  Comment 816 [rax:0, rdx:0, rsi:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 816 {infopoint: SAFEPOINT}  <||@
  Comment 816 POLL_FAR  <||@
  Comment 818 440 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 821 442 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 824 444 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 828 446 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 832 448 JUMP ~outgoingValues: [] destination: B31 -> B29  <||@
  Comment 832 block B29 loop 4 depth 1 header:239|LoopBegin  <||@
  Comment 832 428 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 832 430 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B30 size: QWORD  <||@
  Comment 842 block B35 null  <||@
  Comment 842 532 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 842 534 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 848 536 JUMP ~outgoingValues: [] destination: B35 -> B52  <||@
  Comment 853 block B37 null  <||@
  Comment 853 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 853 546 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 858 548 JUMP ~outgoingValues: [] destination: B37 -> B51  <||@
  Comment 863 block B39 null  <||@
  Comment 863 556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 863 558 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 868 560 JUMP ~outgoingValues: [] destination: B39 -> B50  <||@
  Comment 873 block B41 null  <||@
  Comment 873 568 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 873 570 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 878 572 JUMP ~outgoingValues: [] destination: B41 -> B49  <||@
  Comment 883 block B43 null  <||@
  Comment 883 580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 883 582 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 888 584 JUMP ~outgoingValues: [] destination: B43 -> B48  <||@
  Comment 893 block B32 null  <||@
  Comment 893 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 893 452 r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 898 454 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 903 456 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 908 458 rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19]  <||@
  Comment 908 [rax:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 908 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 912 460 NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19]  <||@
  Comment 912 [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 912 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 915 462 NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19]  <||@
  Comment 915 [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 915 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 917 464 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 921 466 r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 924 470 rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 927 472 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 930 474 stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 935 476 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19]  <||@
  Comment 935 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 935 INVOKESPECIAL  <||@
  Comment 940 [stack:16, stack:24, stack:40, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 948 478 r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 953 480 rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 957 482 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 963 484 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 968 486 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 973 488 r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 978 490 stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 983 492 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19]  <||@
  Comment 983 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 983 INVOKESPECIAL  <||@
  Comment 988 [stack:16, stack:24, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 996 494 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1001 496 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1004 498 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1010 500 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1015 502 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 504 r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1025 506 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 508 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19]  <||@
  Comment 1031 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1031 INVOKESPECIAL  <||@
  Comment 1036 [stack:16, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1044 510 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1049 512 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1054 514 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1059 516 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1062 518 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19]  <||@
  Comment 1063 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1063 INVOKESPECIAL  <||@
  Comment 1068 []at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1076 520 JUMP ~outgoingValues: [] destination: B32 -> B34  <||@
  Comment 1081 block B26 null  <||@
  Comment 1081 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1081 352 stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1086 354 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1091 356 rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1096 358 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19]  <||@
  Comment 1096 [rax:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1096 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1103 360 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1109 362 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1114 364 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1117 366 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1120 368 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19]  <||@
  Comment 1123 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1123 INVOKESPECIAL  <||@
  Comment 1128 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1136 370 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1141 372 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1145 374 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1151 376 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1156 378 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1161 380 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1166 382 stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1171 384 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19]  <||@
  Comment 1171 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1171 INVOKESPECIAL  <||@
  Comment 1176 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1184 386 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1189 388 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1192 390 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1198 392 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1203 394 rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1208 396 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1213 398 stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 400 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19]  <||@
  Comment 1219 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1219 INVOKESPECIAL  <||@
  Comment 1224 [stack:8, stack:16, stack:24, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:48|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1232 402 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1237 404 rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1242 406 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1247 408 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 410 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19]  <||@
  Comment 1251 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1251 INVOKESPECIAL  <||@
  Comment 1256 [stack:16, stack:24, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1264 412 JUMP ~outgoingValues: [] destination: B26 -> B28  <||@
  Comment 1269 block B20 null  <||@
  Comment 1269 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1269 240 stack:80|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1274 242 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1279 244 rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1284 246 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19]  <||@
  Comment 1284 [rax:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]       |stack:56|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1284 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1291 248 NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19]  <||@
  Comment 1291 [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]       |stack:56|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1291 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1293 250 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1299 252 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1304 254 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1307 256 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1310 258 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19]  <||@
  Comment 1315 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1315 INVOKESPECIAL  <||@
  Comment 1320 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1328 260 r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1333 262 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1337 264 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1343 266 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1348 268 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1353 270 r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1358 272 stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1363 274 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19]  <||@
  Comment 1363 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1363 INVOKESPECIAL  <||@
  Comment 1368 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1376 276 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1381 278 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1385 280 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1391 282 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1396 284 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1401 286 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1406 288 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1411 290 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19]  <||@
  Comment 1411 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1411 INVOKESPECIAL  <||@
  Comment 1416 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1424 292 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1429 294 rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1434 296 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1439 298 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1442 300 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19]  <||@
  Comment 1443 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1443 INVOKESPECIAL  <||@
  Comment 1448 [stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1456 302 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1461 306 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 1466 block B14 null  <||@
  Comment 1466 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1466 130 stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1471 132 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19]  <||@
  Comment 1471 [rax:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1471 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1478 134 NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19]  <||@
  Comment 1478 [rax:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1478 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1481 136 NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19]  <||@
  Comment 1481 [rax:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1481 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1483 138 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1489 140 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1494 142 rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1497 144 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1500 146 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19]  <||@
  Comment 1507 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1507 INVOKESPECIAL  <||@
  Comment 1512 [stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1520 148 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1525 150 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1529 152 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1535 154 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1540 156 rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1545 158 r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1550 160 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1555 162 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19]  <||@
  Comment 1555 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1555 INVOKESPECIAL  <||@
  Comment 1560 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:80|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1568 164 r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1573 166 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1577 168 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1583 170 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1588 172 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1593 174 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1598 176 stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1603 178 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19]  <||@
  Comment 1603 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1603 INVOKESPECIAL  <||@
  Comment 1608 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1616 180 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1621 182 rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1626 184 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1631 186 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 188 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19]  <||@
  Comment 1635 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1635 INVOKESPECIAL  <||@
  Comment 1640 [stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1648 190 stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1653 192 rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 194 JUMP ~outgoingValues: [] destination: B14 -> B16  <||@
  Comment 1663 block B45 null  <||@
  Comment 1663 592 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1663 594 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1668 596 JUMP ~outgoingValues: [] destination: B45 -> B47  <||@
  Comment 1673 block B55 null  <||@
  Comment 1673 664 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1673 666 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 1673 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 1683 668 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27]  <||@
  Comment 1683 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1688 []at List.benchmark() [bci: 27, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |    <||@
  Comment 1696 670 NULLCHECK address: [rax|QWORD[.]] state [bci:27]  <||@
  Comment 1696 [rax:0]at List.benchmark() [bci: 27, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |    <||@
  Comment 1696 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1698 672 JUMP ~outgoingValues: [] destination: B55 -> B57  <||@
  Comment 1708 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 1733 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 1761 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1766 []at List.benchmark() [bci: 22, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |Object[null]  |    <||@
  Comment 1796 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1801 [rax:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |Object[null]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |              |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1831 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1836 [stack:16, stack:24, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 30, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |Object[null] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1866 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1871 [rax:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1901 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1906 [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1936 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1941 [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1971 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1976 [rax:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2006 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2011 [rax:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]       |stack:56|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2041 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2046 [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]       |stack:56|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2080 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2085 [rax:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2115 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2120 [rax:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2150 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2155 [rax:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2185 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2190 [rax:0]at List.benchmark() [bci: 27, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |    <||@
  Comment 2198 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2198 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2208 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 2208 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-84[List.benchmark()]"
  method "HotSpotCompilation-84[List.benchmark()]"
  date 1740398978105
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0c4940 448b560849bc000000738a7f00004d03d44d33e4493bc20f852397f8ff89842400c0feff4883ec5841817f20000000000f857106000048896c245048897424384c8bd6ba0f000000666690e8f099f8ff0f1f8400000300004889442430488b742438ba0a000000e8d499f8ff0f1f84001c0300014889442428488b742438ba06000000e8b899f8ff0f1f8400380300024c8b5424304d85d20f84680000004c8b5c2428418b7210448bce49c1e1034d85db0f844e010000418b531048c1e203488bca498bd1e9370000006666660f1f840000000000666666900f1f80000000004885c90f841c0100004d8b87580400004185008b49108b521048c1e20348c1e1034885d275da8b701085f60f84390200008b34f51000000085f60f84350200008b34f51000000085f60f84300200008b34f51000000085f60f842b0200008b34f51000000085f60f84260200008b34f51000000085f60f842305000048c1e603666690e8d898f8ff0f1f840018040005ffc0ffc0ffc0ffc0ffc0ffc0448bd0418d828000000081f8000100000f825f000000498b87b8010000488d7010666690493bb7c80100000f87dc0400004989b7b80100000f0d88d000000048c70001000000c74008885c0200c7400c000000004489500c488b6c24504883c458666690493ba7500400000f87ca040000c5f877c348bef8e3ecff070000008b44861048c1e003ebcf4889442420498bc9498bd3e92c0000006666660f1f8400000000004885d20f84910300004d8b87580400004185008b52108b491048c1e10348c1e2034885c975da4889442418498bc38b7010448bde49c1e303498bcb488b542420e93c0000006666660f1f840000000000666666900f1f840000000000666666904885d20f846c0200004d8b87580400004185008b52108b491048c1e10348c1e2034885c975da4889442440488b4424304889442410488b442440488b4424208b7010448bde49c1e303498bcb488b542430e92b00000066660f1f8400000000004885d20f84500100004d8b87580400004185008b52108b491048c1e10348c1e2034885c975da488b442428488b542418488b742410e926000000660f1f4400004885f60f8454000000498b8f5804000085018b76108b521048c1e20348c1e6034885d275dbe9bcfdffff41ba01000000e92afeffffb801000000e91bfeffffb801000000e90ffeffffb801000000e903feffffb801000000e9f7fdffff4c8b5c24104c8b542418488b742438418b5210418503850048c1e2034c8bce498bcb4c8bc04889442428e89496f8ff0f1f84005c06000f4c8b5c2410418b73108bd648c1e203488b742438488b4c24284c8b4424184889442430e86496f8ff0f1f84008c060010488b7424288b76108bd648c1e203488b742438488b4c24184c8b442410488944241090e83496f8ff0f1f8400bc060011488b742438488b542430488b4c24104c8bc090e81496f8ff0f1f8400dc060012e9cdfcffff4c895c24204c8b542428488b4424308b34f5100000008bd648c1e203488b742438488bc84d8bc2666690e8d895f8ff0f1f8400180700144c8b542430418b72108bd648c1e203488b742438488b4c24284c8b4424204889442408e8a895f8ff0f1f840048070015488b7424288b76108bd648c1e203488b742438488b4c24204c8b442430488944243090e87895f8ff0f1f840078070016488b742438488b542408488b4c24304c8bc090e85895f8ff0f1f840098070017e916feffff4c895c24104c8b542430488b4424208b34f51000000085008bd648c1e203488b742438488bc84d8bc29090666690e81895f8ff0f1f8400d807001a4c8b542420418b72108bd648c1e203488b742438488b4c24304c8b4424104889442408e8e894f8ff0f1f84000808001b4c8b542430418b72108bd648c1e203488b742438488b4c24104c8b4424204889442410e8b894f8ff0f1f84003808001c488b742438488b542408488b4c24104c8bc090e89894f8ff0f1f84005808001d4889442410e900fdffff4c894c24188b34f51000000041850385008bd648c1e203488b742438498bcb4c8bc066669090666690e85894f8ff0f1f8400980800214c8b542428418b72108bd648c1e203488b742438488b4c24204c8b4424184889442410e82894f8ff0f1f8400c80800224c8b542420418b72108bd648c1e203488b742438488b4c24184c8b4424284889442418e8f893f8ff0f1f8400f8080023488b742438488b542410488b4c24184c8bc090e8d893f8ff0f1f8400180900244889442418488b442428e9cffbffffb801000000e9e9faffff48be885c02738a7f0000e828cbffff0f1f8400000000008500e929fbffff48896c2450e82ff2f6ffe980f9fffff4488d0d22fbffff49898f68040000e9f6fff8fff441c78784040000f5f9fdff49c7879004000000000000e854f1f8ff0f1f84000000000041c78784040000f543feff49c7879004000000000000e831f1f8ff0f1f84000000000041c78784040000f529feff49c7879004000000000000e80ef1f8ff0f1f84000000000041c78784040000f50afeff49c7879004000000000000e8ebf0f8ff0f1f84000000000041c78784040000f505feff49c7879004000000000000e8c8f0f8ff0f1f84000000000041c78784040000f500feff49c7879004000000000000e8a5f0f8ff0f1f84000000000041c78784040000f51efeff49c7879004000000000000e882f0f8ff0f1f84000000000041c78784040000f538feff49c7879004000000000000e85ff0f8ff0f1f84000000000041c78784040000f533feff49c7879004000000000000e83cf0f8ff0f1f84000000000041c78784040000f554feff49c78790040000000000000f1f4000e815f0f8ff0f1f84000000000041c78784040000f54ffeff49c7879004000000000000e8f2eff8ff0f1f84000000000041c78784040000f54afeff49c7879004000000000000e8cfeff8ff0f1f84000000000041c787840400008fe5fcff49c7879004000000000000e8aceff8ff0f1f840000000000e825f3fefff40f1f4000e83bedf8fff4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@70bbfbb0 slotKind: QWORD  <||@
  Comment 59 6 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 64 8 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 67 12 rdx|DWORD = MOVE input: int[15|0xf]  <||@
  Comment 72 14 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:4]  <||@
  Comment 75 {HotSpotMethod<List.makeList(int)>}  <||@
  Comment 75 INVOKESPECIAL  <||@
  Comment 80 [stack:56]at List.benchmark() [bci: 4, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
     stack:   |stack:40|QWORD[.]  |    <||@
  Comment 88 16 stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 93 18 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 98 20 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 103 22 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:10]  <||@
  Comment 103 {HotSpotMethod<List.makeList(int)>}  <||@
  Comment 103 INVOKESPECIAL  <||@
  Comment 108 [stack:48, stack:56]at List.benchmark() [bci: 10, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |-                 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 116 24 stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 121 26 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 126 28 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 131 30 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<List.makeList(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:16]  <||@
  Comment 131 {HotSpotMethod<List.makeList(int)>}  <||@
  Comment 131 INVOKESPECIAL  <||@
  Comment 136 [stack:40, stack:48, stack:56]at List.benchmark() [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                 
     locals:  |-                  |-                  |                  
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 144 32 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 149 34 TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B34 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 158 block B2 null  <||@
  Comment 158 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 158 42 r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 163 44 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 167 46 r9|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 174 48 TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B10 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 183 block B4 null  <||@
  Comment 183 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 183 56 rdx|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 187 58 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 191 60 rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 194 62 rdx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 197 64 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 202 block B6 loop 0 depth 1 header:42|LoopBegin  <||@
  Comment 202 70 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 72 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B10 falseDestination: B6 -> B7 size: QWORD  <||@
  Comment 233 block B7 loop 0 depth 1 header:42|LoopBegin  <||@
  Comment 233 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 233 76 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 19]  <||@
  Comment 240 [rax:0, rcx:0, rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rcx|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1             |2             |3            
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 240 {infopoint: SAFEPOINT}  <||@
  Comment 240 POLL_FAR  <||@
  Comment 243 78 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 246 80 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 249 82 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 253 84 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 257 86 JUMP ~outgoingValues: [] destination: B7 -> B5  <||@
  Comment 257 block B5 loop 0 depth 1 header:42|LoopBegin  <||@
  Comment 257 66 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 257 68 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B34 falseDestination: B5 -> B6 size: QWORD  <||@
  Comment 262 block B34 null  <||@
  Comment 262 526 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 262 528 rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:22]  <||@
  Comment 262 []at List.benchmark() [bci: 22, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |Object[null]  |    <||@
  Comment 262 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 265 530 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD  <||@
  Comment 273 block B36 null  <||@
  Comment 273 538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 273 540 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 280 542 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 288 block B38 null  <||@
  Comment 288 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 288 552 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 295 554 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD  <||@
  Comment 303 block B40 null  <||@
  Comment 303 562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 303 564 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 310 566 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD  <||@
  Comment 318 block B42 null  <||@
  Comment 318 574 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 318 576 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 325 578 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 333 block B44 null  <||@
  Comment 333 586 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 333 588 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 340 590 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09998047256395237 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 348 block B46 null  <||@
  Comment 348 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 348 600 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 352 602 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14, 24]  <||@
  Comment 355 {HotSpotMethod<List$Element.length()>}  <||@
  Comment 355 INVOKESPECIAL  <||@
  Comment 360 []at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List.benchmark() [bci: 24, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 368 604 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 370 606 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 370 block B47 null  <||@
  Comment 370 608 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 370 610 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 372 612 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 372 block B48 null  <||@
  Comment 372 614 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 372 616 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 374 618 JUMP ~outgoingValues: [] destination: B48 -> B49  <||@
  Comment 374 block B49 null  <||@
  Comment 374 620 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 374 622 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 376 624 JUMP ~outgoingValues: [] destination: B49 -> B50  <||@
  Comment 376 block B50 null  <||@
  Comment 376 626 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 376 628 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 378 630 JUMP ~outgoingValues: [] destination: B50 -> B51  <||@
  Comment 378 block B51 null  <||@
  Comment 378 632 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 378 634 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 380 636 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 383 638 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 383 block B52 null  <||@
  Comment 383 640 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 383 642 rax|DWORD = LEA address: [r10|DWORD + 128] size: DWORD  <||@
  Comment 390 644 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 256 size: DWORD inlinedY: null  <||@
  Comment 402 block B54 null  <||@
  Comment 402 656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 402 658 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 409 660 rsi|QWORD = LEA address: [rax|QWORD + 16] size: QWORD  <||@
  Comment 413 662 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: QWORD  <||@
  Comment 429 block B56 null  <||@
  Comment 429 674 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 429 676 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 436 678 AMD64PREFETCH ~address: [rax|QWORD + 208] instr: 3  <||@
  Comment 443 680 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 450 682 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 450 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 457 684 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 464 686 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 464 688 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 464 block B57 null  <||@
  Comment 464 690 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 464 692 MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 468 694 JUMP ~outgoingValues: [] destination: B57 -> B58  <||@
  Comment 468 block B58 null  <||@
  Comment 468 696 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 468 698 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 480 POLL_RETURN_FAR  <||@
  Comment 497 block B53 null  <||@
  Comment 497 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 497 648 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Instance<java.lang.Integer[]>]  <||@
  Comment 497 {Object[Instance<java.lang.Integer[]>]}  <||@
  Comment 507 650 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 511 652 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 515 654 JUMP ~outgoingValues: [] destination: B53 -> B58  <||@
  Comment 517 block B10 null  <||@
  Comment 517 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 517 98 stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 522 100 rcx|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 525 102 rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 528 104 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 533 block B12 loop 1 depth 1 header:87|LoopBegin  <||@
  Comment 533 110 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 112 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B12 -> B14 falseDestination: B12 -> B13 size: QWORD  <||@
  Comment 553 block B13 loop 1 depth 1 header:87|LoopBegin  <||@
  Comment 553 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 553 116 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17, 19]  <||@
  Comment 560 [rax:0, rcx:0, rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1            |2             |3            
     locals:  |stack:40|QWORD[.]  |r9|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1             |2             |3            
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |              |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 560 {infopoint: SAFEPOINT}  <||@
  Comment 560 POLL_FAR  <||@
  Comment 563 118 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 566 120 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 569 122 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 573 124 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 577 126 JUMP ~outgoingValues: [] destination: B13 -> B11  <||@
  Comment 577 block B11 loop 1 depth 1 header:87|LoopBegin  <||@
  Comment 577 106 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 577 108 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B11 -> B15 falseDestination: B11 -> B12 size: QWORD  <||@
  Comment 582 block B15 null  <||@
  Comment 582 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 582 198 stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 587 200 rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 590 202 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 590 block B16 null  <||@
  Comment 590 204 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 590 206 rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:20, 19]  <||@
  Comment 590 [rax:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |Object[null]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |              |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 590 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 593 208 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 600 210 rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 603 212 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 608 214 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 613 block B18 loop 2 depth 1 header:137|LoopBegin  <||@
  Comment 613 220 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 640 222 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B18 -> B20 falseDestination: B18 -> B19 size: QWORD  <||@
  Comment 649 block B19 loop 2 depth 1 header:137|LoopBegin  <||@
  Comment 649 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 649 226 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27, 19]  <||@
  Comment 656 [rax:0, rcx:0, rdx:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3                 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |rax|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |              |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 656 {infopoint: SAFEPOINT}  <||@
  Comment 656 POLL_FAR  <||@
  Comment 659 228 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 662 230 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 665 232 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 669 234 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 673 236 JUMP ~outgoingValues: [] destination: B19 -> B17  <||@
  Comment 673 block B17 loop 2 depth 1 header:137|LoopBegin  <||@
  Comment 673 216 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 673 218 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B17 -> B21 falseDestination: B17 -> B18 size: QWORD  <||@
  Comment 678 block B21 null  <||@
  Comment 678 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 678 310 stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 698 314 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 698 block B22 null  <||@
  Comment 698 316 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 698 304 rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 703 318 rsi|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD state [bci:30, 19]  <||@
  Comment 703 [stack:16, stack:24, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 30, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |Object[null] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 703 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 706 320 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 713 322 rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 716 324 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 721 326 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 726 block B24 loop 3 depth 1 header:187|LoopBegin  <||@
  Comment 726 332 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 334 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B25 size: QWORD  <||@
  Comment 745 block B25 loop 3 depth 1 header:187|LoopBegin  <||@
  Comment 745 336 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 745 338 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37, 19]  <||@
  Comment 752 [rcx:0, rdx:0, rsi:0, r11:0, stack:16, stack:24, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3                 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 752 {infopoint: SAFEPOINT}  <||@
  Comment 752 POLL_FAR  <||@
  Comment 755 340 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 758 342 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 761 344 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 765 346 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 769 348 JUMP ~outgoingValues: [] destination: B25 -> B23  <||@
  Comment 769 block B23 loop 3 depth 1 header:187|LoopBegin  <||@
  Comment 769 328 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 769 330 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B23 -> B27 falseDestination: B23 -> B24 size: QWORD  <||@
  Comment 774 block B27 null  <||@
  Comment 774 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 774 416 rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 779 418 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 779 block B28 null  <||@
  Comment 779 420 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 779 422 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 784 424 rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 789 426 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 794 block B30 loop 4 depth 1 header:239|LoopBegin  <||@
  Comment 794 432 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 800 434 TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B30 -> B32 falseDestination: B30 -> B31 size: QWORD  <||@
  Comment 809 block B31 loop 4 depth 1 header:239|LoopBegin  <||@
  Comment 809 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 809 438 SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40, 19]  <||@
  Comment 816 [rax:0, rdx:0, rsi:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 816 {infopoint: SAFEPOINT}  <||@
  Comment 816 POLL_FAR  <||@
  Comment 818 440 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 821 442 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 824 444 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 828 446 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 832 448 JUMP ~outgoingValues: [] destination: B31 -> B29  <||@
  Comment 832 block B29 loop 4 depth 1 header:239|LoopBegin  <||@
  Comment 832 428 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 832 430 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B30 size: QWORD  <||@
  Comment 842 block B35 null  <||@
  Comment 842 532 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 842 534 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 848 536 JUMP ~outgoingValues: [] destination: B35 -> B52  <||@
  Comment 853 block B37 null  <||@
  Comment 853 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 853 546 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 858 548 JUMP ~outgoingValues: [] destination: B37 -> B51  <||@
  Comment 863 block B39 null  <||@
  Comment 863 556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 863 558 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 868 560 JUMP ~outgoingValues: [] destination: B39 -> B50  <||@
  Comment 873 block B41 null  <||@
  Comment 873 568 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 873 570 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 878 572 JUMP ~outgoingValues: [] destination: B41 -> B49  <||@
  Comment 883 block B43 null  <||@
  Comment 883 580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 883 582 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 888 584 JUMP ~outgoingValues: [] destination: B43 -> B48  <||@
  Comment 893 block B32 null  <||@
  Comment 893 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 893 452 r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 898 454 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 903 456 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 908 458 rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40, 19]  <||@
  Comment 908 [rax:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 908 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 912 460 NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40, 19]  <||@
  Comment 912 [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 912 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 915 462 NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 40, 19]  <||@
  Comment 915 [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 915 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 917 464 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 921 466 r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 924 470 rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 927 472 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 930 474 stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 935 476 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40, 19]  <||@
  Comment 935 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 935 INVOKESPECIAL  <||@
  Comment 940 [stack:16, stack:24, stack:40, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 948 478 r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 953 480 rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 957 482 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 963 484 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 968 486 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 973 488 r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 978 490 stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 983 492 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40, 19]  <||@
  Comment 983 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 983 INVOKESPECIAL  <||@
  Comment 988 [stack:16, stack:24, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 996 494 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1001 496 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1004 498 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1010 500 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1015 502 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 504 r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1025 506 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 508 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40, 19]  <||@
  Comment 1031 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1031 INVOKESPECIAL  <||@
  Comment 1036 [stack:16, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1044 510 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1049 512 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1054 514 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1059 516 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1062 518 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40, 19]  <||@
  Comment 1063 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1063 INVOKESPECIAL  <||@
  Comment 1068 []at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1076 520 JUMP ~outgoingValues: [] destination: B32 -> B34  <||@
  Comment 1081 block B26 null  <||@
  Comment 1081 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1081 352 stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1086 354 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1091 356 rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1096 358 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37, 19]  <||@
  Comment 1096 [rax:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1096 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1103 360 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1109 362 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1114 364 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1117 366 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1120 368 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37, 19]  <||@
  Comment 1123 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1123 INVOKESPECIAL  <||@
  Comment 1128 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1136 370 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1141 372 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1145 374 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1151 376 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1156 378 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1161 380 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1166 382 stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1171 384 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37, 19]  <||@
  Comment 1171 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1171 INVOKESPECIAL  <||@
  Comment 1176 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1184 386 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1189 388 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1192 390 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1198 392 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1203 394 rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1208 396 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1213 398 stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 400 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37, 19]  <||@
  Comment 1219 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1219 INVOKESPECIAL  <||@
  Comment 1224 [stack:8, stack:16, stack:24, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:48|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1232 402 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1237 404 rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1242 406 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1247 408 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 410 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37, 19]  <||@
  Comment 1251 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1251 INVOKESPECIAL  <||@
  Comment 1256 [stack:16, stack:24, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1264 412 JUMP ~outgoingValues: [] destination: B26 -> B28  <||@
  Comment 1269 block B20 null  <||@
  Comment 1269 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1269 240 stack:80|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1274 242 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1279 244 rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1284 246 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27, 19]  <||@
  Comment 1284 [rax:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]       |stack:56|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1284 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1291 248 NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 27, 19]  <||@
  Comment 1291 [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]       |stack:56|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1291 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1293 250 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1299 252 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1304 254 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1307 256 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1310 258 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27, 19]  <||@
  Comment 1315 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1315 INVOKESPECIAL  <||@
  Comment 1320 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1328 260 r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1333 262 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1337 264 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1343 266 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1348 268 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1353 270 r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1358 272 stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1363 274 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27, 19]  <||@
  Comment 1363 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1363 INVOKESPECIAL  <||@
  Comment 1368 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1376 276 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1381 278 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1385 280 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1391 282 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1396 284 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1401 286 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1406 288 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1411 290 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27, 19]  <||@
  Comment 1411 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1411 INVOKESPECIAL  <||@
  Comment 1416 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1424 292 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1429 294 rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1434 296 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1439 298 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1442 300 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27, 19]  <||@
  Comment 1443 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1443 INVOKESPECIAL  <||@
  Comment 1448 [stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1456 302 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1461 306 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 1466 block B14 null  <||@
  Comment 1466 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1466 130 stack:72|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1471 132 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17, 19]  <||@
  Comment 1471 [rax:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1471 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1478 134 NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 17, 19]  <||@
  Comment 1478 [rax:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1478 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1481 136 NULLCHECK address: [rax|QWORD[.]] state [bci:14, 3, 17, 19]  <||@
  Comment 1481 [rax:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1481 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1483 138 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1489 140 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1494 142 rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1497 144 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1500 146 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17, 19]  <||@
  Comment 1507 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1507 INVOKESPECIAL  <||@
  Comment 1512 [stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1520 148 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1525 150 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1529 152 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1535 154 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1540 156 rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1545 158 r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1550 160 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1555 162 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17, 19]  <||@
  Comment 1555 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1555 INVOKESPECIAL  <||@
  Comment 1560 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:80|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1568 164 r10|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1573 166 rsi|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1577 168 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@156bc526 encoding: base: 0 shift: 3  <||@
  Comment 1583 170 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1588 172 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1593 174 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1598 176 stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1603 178 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17, 19]  <||@
  Comment 1603 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1603 INVOKESPECIAL  <||@
  Comment 1608 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1616 180 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1621 182 rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1626 184 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1631 186 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 188 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17, 19]  <||@
  Comment 1635 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1635 INVOKESPECIAL  <||@
  Comment 1640 [stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1648 190 stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1653 192 rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 194 JUMP ~outgoingValues: [] destination: B14 -> B16  <||@
  Comment 1663 block B45 null  <||@
  Comment 1663 592 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1663 594 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1668 596 JUMP ~outgoingValues: [] destination: B45 -> B47  <||@
  Comment 1673 block B55 null  <||@
  Comment 1673 664 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1673 666 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Integer;, resolved>}  <||@
  Comment 1673 {meta{HotSpotType<Ljava/lang/Integer;, resolved>}}  <||@
  Comment 1683 668 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27]  <||@
  Comment 1683 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f8acf0c1b00:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1688 []at List.benchmark() [bci: 27, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |    <||@
  Comment 1696 670 NULLCHECK address: [rax|QWORD[.]] state [bci:27]  <||@
  Comment 1696 [rax:0]at List.benchmark() [bci: 27, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |    <||@
  Comment 1696 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1698 672 JUMP ~outgoingValues: [] destination: B55 -> B57  <||@
  Comment 1708 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 1733 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 1761 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1766 []at List.benchmark() [bci: 22, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |Object[null]  |    <||@
  Comment 1796 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1801 [rax:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |Object[null]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |              |                  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1831 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1836 [stack:16, stack:24, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 30, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |Object[null] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1866 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1871 [rax:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1901 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1906 [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1936 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1941 [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1971 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1976 [rax:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2006 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2011 [rax:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]       |stack:56|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2041 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2046 [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]       |stack:56|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2080 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2085 [rax:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2115 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2120 [rax:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2150 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2155 [rax:0, rsi:0, r11:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r11|QWORD[.]  |rax|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |              |             
  at List.benchmark() [bci: 19, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2185 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 2190 [rax:0]at List.benchmark() [bci: 27, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |    <||@
  Comment 2198 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2198 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2208 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 2208 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
