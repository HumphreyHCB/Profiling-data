begin_compilation
  name " HotSpotCompilation-119[jdk.internal.org.objectweb.asm.ByteVector.putUTF8(String)]"
  method "HotSpotCompilation-119[jdk.internal.org.objectweb.asm.ByteVector.putUTF8(String)]"
  date 1740398978431
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a635 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a635  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# jdk.internal.org.objectweb.asm.ByteVector
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v84 v652 v653 ?44 ?51 ?28 v505 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v649 v651 ?44 ?28 ?51 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
sourceFile: ByteVector.java
sourceLine: 285
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v450 v648 a522 a635 i637 i639 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a635 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-45067|0xffffffffffff4ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v649 
lastLocationAccess: - 
=== Succesors ===
next: i636 
=== Usages ===
v660 v650 v658 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v649 lastLocationAccess: - #next: i636  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i636 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v651 
lastLocationAccess: - 
=== Succesors ===
next: i637 
=== Usages ===
i190 
=== Predecessor ===
a635 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v651 lastLocationAccess: - #next: i637  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a635 
=== Succesors ===
=== Usages ===
i637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i637 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-46603|0xffffffffffff49f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v650 
lastLocationAccess: - 
=== Succesors ===
next: a638 
=== Usages ===
i90 v344 v255 v646 
=== Predecessor ===
i636 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v650 lastLocationAccess: - #next: a638  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a638 v228 v503 v505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a638 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteVector.data
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 32]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
=== Succesors ===
next: i639 
=== Usages ===
a195 v654 
=== Predecessor ===
i637 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - #next: i639  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a638 
=== Succesors ===
=== Usages ===
i639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i639 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-50443|0xffffffffffff3af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v654 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
v314 v17 v97 i117 
=== Predecessor ===
a638 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v654 lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i636 
=== Succesors ===
=== Usages ===
i90 v126 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i636  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i637 
y: i190 
=== Succesors ===
=== Usages ===
i363 v52 v93 i14 i442 i361 ?28 i33 v348 i40 ?44 ?51 v167 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i637 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536]
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i8 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i90 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
i639 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v401 #falseSuccessor: v402  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:289) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i640 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i640  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i640 v296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i640 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteVector.length
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:289) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v652 
lastLocationAccess: - 
=== Succesors ===
next: v20 
=== Usages ===
i13 v234 ?28 i31 j302 v97 i442 j597 i170 v207 v314 v315 
=== Predecessor ===
v401 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v652 lastLocationAccess: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 27]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 i443 v344 v348 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 28]
stamp: i32
=== Inputs ===
x: i640 
y: i12 
=== Succesors ===
=== Usages ===
i14 ?44 i164 j309 v265 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i640 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 30]
stamp: i32
=== Inputs ===
x: i13 
y: i90 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i13 y: i90  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i639 
y: i14 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i639 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid a195 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 32]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a638 
=== Succesors ===
=== Usages ===
j591 a331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a638  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 v126 v255 v167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 v471 j449 j449 j449 j478 j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 55]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 i80 i74 i117 i166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.1382113821138211
stamp: void
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i640 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v19 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:396) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i639 
y: i640 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i639 y: i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:396) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v426 #falseSuccessor: v427  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:396) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid j457 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i456 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -109036
stableDimension: 0
stamp: i32 [-109036]
stampKind: i32
value: int[-109036|0xfffffffffffe5614]
=== Inputs ===
=== Succesors ===
=== Usages ===
i448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:399) [bci: 22]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j507 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j507 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j571 
=== Usages ===
v662 v663 
=== Predecessor ===
v589 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j571  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
j571 v573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j571 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
=== Succesors ===
next: j572 
=== Usages ===
j518 v664 v665 v666 v667 a553 v672 v668 v669 v670 v671 
=== Predecessor ===
j507 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - #next: j572  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
j572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j572 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v663 
lastLocationAccess: - 
=== Succesors ===
next: v517 
=== Usages ===
v519 
=== Predecessor ===
j571 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v663 lastLocationAccess: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid i442 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i90 
y: i640 
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i640  <|@  <|@
f <@~|@floating>@ <|@
tid i443 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i442 
y: i12 
=== Succesors ===
=== Usages ===
v103 i118 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i442 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:399) [bci: 28]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i639 
y: i30 
=== Succesors ===
=== Usages ===
v103 i118 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i639 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 39]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i443 
y: i117 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i443 y: i117  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 39]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i32
=== Inputs ===
condition: v103 
trueValue: i117 
falseValue: i443 
=== Succesors ===
=== Usages ===
v578 v315 j512 a522 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v103 trueValue: i117 falseValue: i443  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i118 
=== Succesors ===
=== Usages ===
j514 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i118  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j512 
y: j513 
=== Succesors ===
=== Usages ===
j516 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j512 y: j513  <|@  <|@
f <@~|@floating>@ <|@
tid j515 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j516 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j514 
y: j515 
=== Succesors ===
=== Usages ===
j518 j530 v544 v668 v669 v670 v671 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j514 y: j515  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
x: j516 
y: j571 
=== Succesors ===
=== Usages ===
v519 v573 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j516 y: j571  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j572 
y: j518 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j572 y: j518  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v521 
=== Usages ===
=== Predecessor ===
j572 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v520 #falseSuccessor: v521  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a522 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a522  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a522 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a522 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v506 i118 
=== Succesors ===
next: v648 
=== Usages ===
v648 a569 
=== Predecessor ===
v520 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v506 i118 #next: v648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-149873|0xfffffffffffdb68f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a522 
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
a522 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a522 #next: v524  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
v648 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
value: j518 
stateAfter: - 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - value: j518 stateAfter: - #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
displacement: 192
stamp: void*
stride: S1
=== Inputs ===
base: j516 
index: j571 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j516 index: j571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v668 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v668 #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j516 
index: j571 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j516 index: j571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v669 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v669 #next: v563  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j516 
index: j571 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j516 index: j571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v670 
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v670 #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j516 
index: j571 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j516 index: j571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v671 
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v671 #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j571 
index: - 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j571 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v664 
lastLocationAccess: - 
value: j526 
stateAfter: - 
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v664 lastLocationAccess: - value: j526 stateAfter: - #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j571 
index: - 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j571 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140232611594240 shift: 0)
stampKind: Klass*(compressed base: 140232611594240 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
lastLocationAccess: - 
value: v600 
stateAfter: - 
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v672 lastLocationAccess: - value: v600 stateAfter: - #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j571 
index: - 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j571 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v665 
lastLocationAccess: - 
value: i118 
stateAfter: - 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v665 lastLocationAccess: - value: i118 stateAfter: - #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j516 
y: j529 
=== Succesors ===
=== Usages ===
v533 v536 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j516 y: j529  <|@  <|@
f <@~|@floating>@ <|@
tid j532 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j530 
y: j532 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j530 y: j532  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v533 
=== Succesors ===
trueSuccessor: v534 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v533 #trueSuccessor: v534 #falseSuccessor: v535  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid j550 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v541 
values: j187 j551 
=== Succesors ===
=== Usages ===
v544 v667 j551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v541 values: j187 j551  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 74
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v540 
=== Succesors ===
next: v543 
=== Usages ===
j542 v546 v549 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v540 #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j542 
y: j516 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j542 y: j516  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v545 #falseSuccessor: v546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v579  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j571 
index: j542 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j571 index: j542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v667 
lastLocationAccess: - 
value: j447 
stateAfter: - 
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v667 lastLocationAccess: - value: j447 stateAfter: - #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid j551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
x: j542 
y: j550 
=== Succesors ===
=== Usages ===
j542 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j542 y: j550  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
loopBegin: v541 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v541  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v541 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v541 #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
v546 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j571 
index: - 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j571 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v666 
lastLocationAccess: - 
length: j530 
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v666 lastLocationAccess: - length: j530 #next: v538  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v538 v547 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v538 v547 #next: v552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a553 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j571 
=== Succesors ===
next: v554 
=== Usages ===
a569 
=== Predecessor ===
v552 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j571 #next: v554  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
a553 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v525 
values: a522 a553 
=== Succesors ===
=== Usages ===
a331 j595 a227 v505 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v525 values: a522 a553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v524 v554 
=== Succesors ===
next: v432 
=== Usages ===
a569 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v524 v554 #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i640 
y: i45 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i640 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v430 #falseSuccessor: v431  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -109849
stableDimension: 0
stamp: i32 [-109849]
stampKind: i32
value: int[-109849|0xfffffffffffe52e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i639 
y: i640 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i639 y: i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v314 
=== Succesors ===
trueSuccessor: v434 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v314 #trueSuccessor: v434 #falseSuccessor: v435  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -110873
stableDimension: 0
stamp: i32 [-110873]
stampKind: i32
value: int[-110873|0xfffffffffffe4ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i640 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i118 y: i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v439 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v438 #falseSuccessor: v439  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -111897
stableDimension: 0
stamp: i32 [-111897]
stampKind: i32
value: int[-111897|0xfffffffffffe4ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j591 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
object: a195 
=== Succesors ===
next: j595 
=== Usages ===
v673 
=== Predecessor ===
v439 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a195 #next: j595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
object: a569 
=== Succesors ===
next: v598 
=== Usages ===
v674 
=== Predecessor ===
j591 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a569 #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j591 
index: - 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j591 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j595 
index: - 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j597 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i640 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i640  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v673 v674 j597 
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
j595 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v673 v674 j597 #next: v503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
precise: true
stamp: void
=== Inputs ===
address: v653 
value: - 
stateBefore: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v653 value: - stateBefore: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid a227 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a569 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteVector.data
location: ByteVector.data
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
value: a227 
stateAfter: - 
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - value: a227 stateAfter: - #next: v505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
precise: false
stamp: void
=== Inputs ===
address: v653 
value: a569 
object: a1 
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v653 value: a569 object: a1 #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v26 
values: a195 a569 
=== Succesors ===
=== Usages ===
v655 v661 v656 v659 ?44 ?51 v657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v26 values: a195 a569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v25 v27 
=== Succesors ===
next: i641 
=== Usages ===
a331 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v25 v27 #next: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a331 
index: - 
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a331 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i641 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
v234 v244 v265 v355 j351 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v655 lastLocationAccess: - #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i640 
y: i641 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i640 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v378 
=== Usages ===
=== Predecessor ===
i641 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v376 #falseSuccessor: v378  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
v242 
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 55]
stamp: i32
=== Inputs ===
x: i640 
y: i30 
=== Succesors ===
=== Usages ===
v244 j303 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i640 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i31 
y: i641 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i31 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v382 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v380 #falseSuccessor: v382  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v242 
=== Usages ===
v252 
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v242  <|@  <|@
f <@~|@floating>@ <|@
tid j302 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i640 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i640  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a331 
index: j302 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a331 index: j302  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 59]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 61]
stamp: i32 [0 - 8388607] bits:0...0xxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i90 
y: i32 
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i90 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 62]
resultBits: 8
stamp: i8
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v376 
address: v656 
lastLocationAccess: - 
value: i34 
stateAfter: - 
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v376 address: v656 lastLocationAccess: - value: i34 stateAfter: - #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid j303 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i31 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i31  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a331 
index: j303 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a331 index: j303  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 71]
resultBits: 8
stamp: i8
=== Inputs ===
value: i90 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v380 
address: v657 
lastLocationAccess: - 
value: i40 
stateAfter: - 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v380 address: v657 lastLocationAccess: - value: i40 stateAfter: - #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i45 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i90 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
profileData: PROFILED designatedSuccessorProbability: 0.04415882817548644
stamp: void
=== Inputs ===
condition: v167 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v167 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i12 
=== Succesors ===
=== Usages ===
v608 v624 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i90 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid j482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 3224
stableDimension: 0
stamp: i64 [3224]
stampKind: i64
value: long[3224|0xc98]
=== Inputs ===
=== Succesors ===
=== Usages ===
j478 j478 j478 j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v348 
=== Succesors ===
trueSuccessor: v604 
falseSuccessor: v607 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v348 #trueSuccessor: v604 #falseSuccessor: v607  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v602  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v604 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i363 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i90 
y: i362 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i362  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i363 
y: i637 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i363 y: i637  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -70172
stableDimension: 0
stamp: i32 [-70172]
stampKind: i32
value: int[-70172|0xfffffffffffeede4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v646 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v646 #trueSuccessor: v615 #falseSuccessor: v612  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i637 
y: i12 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i637 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v605 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v613 #falseSuccessor: v605  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v613 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v603  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v602 v603 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v602 v603 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 106]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 106]
stamp: i32
=== Inputs ===
x: i640 
y: i169 
=== Succesors ===
=== Usages ===
v355 i165 j352 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i640 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v348 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v623 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v348 #trueSuccessor: v620 #falseSuccessor: v623  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid j352 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i170 
=== Succesors ===
=== Usages ===
j353 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i170  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2 - 2147483645]
=== Inputs ===
x: i90 
y: i360 
=== Succesors ===
=== Usages ===
j645 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i360  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i361 
=== Succesors ===
=== Usages ===
j353 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i361  <|@  <|@
f <@~|@floating>@ <|@
tid j353 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j352 
y: j645 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j352 y: j645  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i641 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j353 
y: j351 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j353 y: j351  <|@  <|@
f <@~|@floating>@ <|@
tid i484 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -73499
stableDimension: 0
stamp: i32 [-73499]
stampKind: i32
value: int[-73499|0xfffffffffffee0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v354 
=== Succesors ===
trueSuccessor: v631 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v354 #trueSuccessor: v631 #falseSuccessor: v628  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i641 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i170 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v621 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v621 #falseSuccessor: v629  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
v621 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v618 v619 
=== Succesors ===
next: v395 
=== Usages ===
v359 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v618 v619 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i637 
y: i45 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i637 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v394 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v394 #falseSuccessor: v392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid i476 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -64796
stableDimension: 0
stamp: i32 [-64796]
stampKind: i32
value: int[-64796|0xffffffffffff02e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i641 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i13 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v265 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v265 #trueSuccessor: v396 #falseSuccessor: v398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
v273 
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i45 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i190 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v405 #falseSuccessor: v406  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 13]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: i642 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i642  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a635 
=== Succesors ===
=== Usages ===
i642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i642 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v658 
lastLocationAccess: - 
=== Succesors ===
next: v411 
=== Usages ===
i263 v273 v308 
=== Predecessor ===
v405 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v658 lastLocationAccess: - #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i642 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i642  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 9]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 255
stableDimension: 0
stamp: i32 [255]
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 v134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
x: i263 
y: i132 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i263 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid j487 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j478 j478 v500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v409 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
i642 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v409 #falseSuccessor: v410  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -104467
stableDimension: 0
stamp: i32 [-104467]
stampKind: i32
value: int[-104467|0xfffffffffffe67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v409 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
rawvalue: -128
stableDimension: 0
stamp: i8 [-128]
stampKind: i8
value: byte[-128|0xffffffffffffff80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 v312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i642 
y: i307 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i642 y: i307  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v413 #falseSuccessor: v414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i13 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a331 
index: j309 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a331 index: j309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v396 
address: v659 
lastLocationAccess: - 
value: i642 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v396 address: v659 lastLocationAccess: - value: i642 stateAfter: - #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v48 
values: i30 i80 
=== Succesors ===
=== Usages ===
?51 v52 i80 j310 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v48 values: i30 i80  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v48 
values: i170 i74 
=== Succesors ===
=== Usages ===
?51 i164 j313 i74 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v48 values: i170 i74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v47 
=== Succesors ===
next: v58 
=== Usages ===
i166 i165 v54 v81 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v47 #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i166 
y: i90 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i166 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
profileData: INJECTED designatedSuccessorProbability: 0.9538010817307693
stamp: void
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v57 #falseSuccessor: v54  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i643 
=== Usages ===
v359 
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i643  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i166 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i166  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j310 
index: a635 
=== Succesors ===
=== Usages ===
i643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j310 index: a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i643 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
=== Succesors ===
next: v419 
=== Usages ===
i284 v294 v312 
=== Predecessor ===
v57 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i284 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i643 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i643  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
x: i284 
y: i132 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i284 y: i132  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
i643 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v417 #falseSuccessor: v418  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid i497 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
rawvalue: -106515
stableDimension: 0
stamp: i32 [-106515]
stampKind: i32
value: int[-106515|0xfffffffffffe5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i498 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i643 
y: i307 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i643 y: i307  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v312 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v312 #trueSuccessor: v421 #falseSuccessor: v422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
guards: v617 v57 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v617 v57  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i165 
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i165  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a331 
index: j313 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a331 index: j313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v359 
address: v661 
lastLocationAccess: - 
value: i643 
stateAfter: - 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v359 address: v661 lastLocationAccess: - value: i643 stateAfter: - #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 106]
stamp: i32
=== Inputs ===
x: i165 
y: i30 
=== Succesors ===
=== Usages ===
i165 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i165 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 131]
stamp: i32
=== Inputs ===
x: i166 
y: i30 
=== Succesors ===
=== Usages ===
i166 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i166 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v48 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v48 #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v159 
values: i165 i13 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v159 values: i165 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v160 v161 
=== Succesors ===
next: v296 
=== Usages ===
i164 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v160 v161 #next: v296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteVector.length
location: ByteVector.length
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 139]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v652 
lastLocationAccess: - 
value: i164 
stateAfter: - 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v652 lastLocationAccess: - value: i164 stateAfter: - #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:310) [bci: 143]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid i502 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
rawvalue: -107539
stableDimension: 0
stamp: i32 [-107539]
stampKind: i32
value: int[-107539|0xfffffffffffe5bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i498 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: i32 [-107539 - -106515] bits:1...1001011x1111101101
valueDescription: i32
=== Inputs ===
merge: v495 
values: i497 i502 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v495 values: i497 i502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v496 v501 
=== Succesors ===
next: v500 
=== Usages ===
i498 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v496 v501 #next: v500  <|@  <|@
tid ?51 <|@
d <@d|@=== Debug Properties ===
bci: 76
bytecode: iload
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
sourceFile: ByteVector.java
sourceLine: 300
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i90 i165 a331 i166 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i90 i165 a331 i166  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
stateBefore: ?51 
actionAndReason: i498 
speculation: j487 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?51 actionAndReason: i498 speculation: j487  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -105491
stableDimension: 0
stamp: i32 [-105491]
stampKind: i32
value: int[-105491|0xfffffffffffe63ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i491 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -103443
stableDimension: 0
stamp: i32 [-103443]
stampKind: i32
value: int[-103443|0xfffffffffffe6bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid i489 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -68123
stableDimension: 0
stamp: i32 [-68123]
stampKind: i32
value: int[-68123|0xfffffffffffef5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v612 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i32 [-105491 - -64796] bits:1...1xxxxxxxxx1110x10x
valueDescription: i32
=== Inputs ===
merge: v474 
values: i476 i481 i484 i486 i489 i491 i494 i481 i484 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v474 values: i476 i481 i484 i486 i489 i491 i494 i481 i484  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i64 [0 - 3224] bits:0...0xxx0x00xxx00
valueDescription: i64
=== Inputs ===
merge: v474 
values: j447 j482 j482 j487 j447 j492 j487 j482 j482 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v474 values: j447 j482 j482 j487 j447 j492 j487 j482 j482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v475 v480 v483 v485 v488 v490 v493 v633 v634 
=== Succesors ===
next: v479 
=== Usages ===
i477 j478 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v475 v480 v483 v485 v488 v490 v493 v633 v634 #next: v479  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 73
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
sourceFile: ByteVector.java
sourceLine: 300
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i90 i13 a331 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i90 i13 a331  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
stateBefore: ?44 
actionAndReason: i477 
speculation: j478 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?44 actionAndReason: i477 speculation: j478  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
rawvalue: -62747
stableDimension: 0
stamp: i32 [-62747]
stampKind: i32
value: int[-62747|0xffffffffffff0ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid i468 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
rawvalue: -60187
stableDimension: 0
stamp: i32 [-60187]
stampKind: i32
value: int[-60187|0xffffffffffff14e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: i32 [-62747 - -60187] bits:1...1000xxxx011100101
valueDescription: i32
=== Inputs ===
merge: v466 
values: i468 i473 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v466 values: i468 i473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v467 v472 
=== Succesors ===
next: v471 
=== Usages ===
i469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v467 v472 #next: v471  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
sourceFile: ByteVector.java
sourceLine: 293
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i90 i640 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i90 i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
stateBefore: ?28 
actionAndReason: i469 
speculation: j447 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?28 actionAndReason: i469 speculation: j447  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i459 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -102419
stableDimension: 0
stamp: i32 [-102419]
stampKind: i32
value: int[-102419|0xfffffffffffe6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i32 [-111897 - -102419] bits:1...1001xxxx1xxxxxx1xx
valueDescription: i32
=== Inputs ===
merge: v444 
values: i456 i459 i461 i463 i465 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v444 values: i456 i459 i461 i463 i465  <|@  <|@
f <@~|@floating>@ <|@
tid j449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i64 [0 - 1300] bits:0...0x0x000x0x00
valueDescription: i64
=== Inputs ===
merge: v444 
values: j457 j177 j447 j447 j447 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v444 values: j457 j177 j447 j447 j447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v455 v458 v460 v462 v464 
=== Succesors ===
next: v450 
=== Usages ===
i448 j449 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v455 v458 v460 v462 v464 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i448 
speculation: j449 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i448 speculation: j449  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-111897|0xfffffffffffe4ae7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-64796|0xffffffffffff02e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68123|0xfffffffffffef5e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62747|0xffffffffffff0ae5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-107539|0xfffffffffffe5bed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109036|0xfffffffffffe5614], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a635 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a635  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# jdk.internal.org.objectweb.asm.ByteVector
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v84 v652 v653 ?44 ?51 ?28 v505 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v649 v651 ?44 ?28 ?51 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
sourceFile: ByteVector.java
sourceLine: 285
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v450 v648 a522 a635 i637 i639 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a635 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-45067|0xffffffffffff4ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v649 
lastLocationAccess: - 
=== Succesors ===
next: i636 
=== Usages ===
v660 v650 v658 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v649 lastLocationAccess: - #next: i636  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i636 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v651 
lastLocationAccess: - 
=== Succesors ===
next: i637 
=== Usages ===
i190 
=== Predecessor ===
a635 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v651 lastLocationAccess: - #next: i637  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a635 
=== Succesors ===
=== Usages ===
i637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i637 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-46603|0xffffffffffff49f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v650 
lastLocationAccess: - 
=== Succesors ===
next: a638 
=== Usages ===
i90 v344 v255 v646 
=== Predecessor ===
i636 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v650 lastLocationAccess: - #next: a638  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a638 v228 v503 v505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a638 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteVector.data
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 32]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
=== Succesors ===
next: i639 
=== Usages ===
a195 v654 
=== Predecessor ===
i637 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - #next: i639  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a638 
=== Succesors ===
=== Usages ===
i639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i639 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-50443|0xffffffffffff3af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v654 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
v314 v17 v97 i117 
=== Predecessor ===
a638 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v654 lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i636 
=== Succesors ===
=== Usages ===
i90 v126 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i636  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i637 
y: i190 
=== Succesors ===
=== Usages ===
i363 v52 v93 i14 i442 i361 ?28 i33 v348 i40 ?44 ?51 v167 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i637 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[65536|0x10000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536]
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i8 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i90 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
i639 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v401 #falseSuccessor: v402  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:289) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i640 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i640  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i640 v296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i640 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteVector.length
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:289) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v652 
lastLocationAccess: - 
=== Succesors ===
next: v20 
=== Usages ===
i13 v234 ?28 i31 j302 v97 i442 j597 i170 v207 v314 v315 
=== Predecessor ===
v401 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v652 lastLocationAccess: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 27]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 i443 v344 v348 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 28]
stamp: i32
=== Inputs ===
x: i640 
y: i12 
=== Succesors ===
=== Usages ===
i14 ?44 i164 j309 v265 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i640 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 30]
stamp: i32
=== Inputs ===
x: i13 
y: i90 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i13 y: i90  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i639 
y: i14 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i639 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid a195 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 32]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a638 
=== Succesors ===
=== Usages ===
j591 a331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a638  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 v126 v255 v167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 v471 j449 j449 j449 j478 j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 55]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 i80 i74 i117 i166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.1382113821138211
stamp: void
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i640 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v19 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:396) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i639 
y: i640 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i639 y: i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:396) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v426 #falseSuccessor: v427  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:396) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid j457 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i456 <|@
result int[-109036|0xfffffffffffe5614] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -109036
stableDimension: 0
stamp: i32 [-109036]
stampKind: i32
value: int[-109036|0xfffffffffffe5614]
=== Inputs ===
=== Succesors ===
=== Usages ===
i448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109036|0xfffffffffffe5614], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:399) [bci: 22]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j507 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j507 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j571 
=== Usages ===
v662 v663 
=== Predecessor ===
v589 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j571  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
j571 v573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j571 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
=== Succesors ===
next: j572 
=== Usages ===
j518 v664 v665 v666 v667 a553 v672 v668 v669 v670 v671 
=== Predecessor ===
j507 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - #next: j572  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
j572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j572 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v663 
lastLocationAccess: - 
=== Succesors ===
next: v517 
=== Usages ===
v519 
=== Predecessor ===
j571 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v663 lastLocationAccess: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid i442 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i90 
y: i640 
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i640  <|@  <|@
f <@~|@floating>@ <|@
tid i443 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i442 
y: i12 
=== Succesors ===
=== Usages ===
v103 i118 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i442 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:399) [bci: 28]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i639 
y: i30 
=== Succesors ===
=== Usages ===
v103 i118 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i639 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 39]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i443 
y: i117 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i443 y: i117  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 39]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i32
=== Inputs ===
condition: v103 
trueValue: i117 
falseValue: i443 
=== Succesors ===
=== Usages ===
v578 v315 j512 a522 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v103 trueValue: i117 falseValue: i443  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i118 
=== Succesors ===
=== Usages ===
j514 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i118  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j514 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j512 
y: j513 
=== Succesors ===
=== Usages ===
j516 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j512 y: j513  <|@  <|@
f <@~|@floating>@ <|@
tid j515 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j516 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j516 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j514 
y: j515 
=== Succesors ===
=== Usages ===
j518 j530 v544 v668 v669 v670 v671 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j514 y: j515  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
x: j516 
y: j571 
=== Succesors ===
=== Usages ===
v519 v573 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j516 y: j571  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j572 
y: j518 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j572 y: j518  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v521 
=== Usages ===
=== Predecessor ===
j572 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v520 #falseSuccessor: v521  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a522 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a522  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a522 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a522 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v506 i118 
=== Succesors ===
next: v648 
=== Usages ===
v648 a569 
=== Predecessor ===
v520 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v506 i118 #next: v648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-149873|0xfffffffffffdb68f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a522 
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
a522 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a522 #next: v524  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
v648 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
value: j518 
stateAfter: - 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - value: j518 stateAfter: - #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
result [v19|QWORD + v12|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
stamp: void*
stride: S1
=== Inputs ===
base: j516 
index: j571 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j516 index: j571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v668 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v668 #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
result [v19|QWORD + v12|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j516 
index: j571 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j516 index: j571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v669 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v669 #next: v563  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
result [v19|QWORD + v12|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j516 
index: j571 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j516 index: j571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v670 
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v670 #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
result [v19|QWORD + v12|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j516 
index: j571 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j516 index: j571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v671 
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v671 #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
result [v12|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j571 
index: - 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j571 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v664 
lastLocationAccess: - 
value: j526 
stateAfter: - 
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v664 lastLocationAccess: - value: j526 stateAfter: - #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
result [v12|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j571 
index: - 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j571 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140232611594240 shift: 0)
stampKind: Klass*(compressed base: 140232611594240 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
lastLocationAccess: - 
value: v600 
stateAfter: - 
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v672 lastLocationAccess: - value: v600 stateAfter: - #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
result [v12|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j571 
index: - 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j571 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v665 
lastLocationAccess: - 
value: i118 
stateAfter: - 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v665 lastLocationAccess: - value: i118 stateAfter: - #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j530 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j516 
y: j529 
=== Succesors ===
=== Usages ===
v533 v536 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j516 y: j529  <|@  <|@
f <@~|@floating>@ <|@
tid j532 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j530 
y: j532 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j530 y: j532  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v533 
=== Succesors ===
trueSuccessor: v534 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v533 #trueSuccessor: v534 #falseSuccessor: v535  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid j550 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j187 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j542 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v541 
values: j187 j551 
=== Succesors ===
=== Usages ===
v544 v667 j551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v541 values: j187 j551  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 74
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v540 
=== Succesors ===
next: v543 
=== Usages ===
j542 v546 v549 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v540 #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j542 
y: j516 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j542 y: j516  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v545 #falseSuccessor: v546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v579  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
result [v12|QWORD + v24|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j571 
index: j542 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j571 index: j542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v667 
lastLocationAccess: - 
value: j447 
stateAfter: - 
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v667 lastLocationAccess: - value: j447 stateAfter: - #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid j551 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
x: j542 
y: j550 
=== Succesors ===
=== Usages ===
j542 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j542 y: j550  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
loopBegin: v541 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v541  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v541 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v541 #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
v546 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
result [v12|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j571 
index: - 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j571 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v666 
lastLocationAccess: - 
length: j530 
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v666 lastLocationAccess: - length: j530 #next: v538  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v538 v547 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v538 v547 #next: v552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a553 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a553 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j571 
=== Succesors ===
next: v554 
=== Usages ===
a569 
=== Predecessor ===
v552 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j571 #next: v554  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
a553 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a569 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v525 
values: a522 a553 
=== Succesors ===
=== Usages ===
a331 j595 a227 v505 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v525 values: a522 a553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v524 v554 
=== Succesors ===
next: v432 
=== Usages ===
a569 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v524 v554 #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i640 
y: i45 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i640 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v430 #falseSuccessor: v431  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
result int[-109849|0xfffffffffffe52e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -109849
stableDimension: 0
stamp: i32 [-109849]
stampKind: i32
value: int[-109849|0xfffffffffffe52e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i639 
y: i640 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i639 y: i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v314 
=== Succesors ===
trueSuccessor: v434 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v314 #trueSuccessor: v434 #falseSuccessor: v435  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
result int[-110873|0xfffffffffffe4ee7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -110873
stableDimension: 0
stamp: i32 [-110873]
stampKind: i32
value: int[-110873|0xfffffffffffe4ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i640 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i118 y: i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v439 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v438 #falseSuccessor: v439  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(Object, int, Object, int, int, ArrayCopySnippets$ArrayCopyTypeCheck, JavaKind, LocationIdentity, SnippetCounter, SnippetCounter, ArrayCopySnippets$Counters) [bci: 0]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
result int[-111897|0xfffffffffffe4ae7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -111897
stableDimension: 0
stamp: i32 [-111897]
stampKind: i32
value: int[-111897|0xfffffffffffe4ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-111897|0xfffffffffffe4ae7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j591 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j591 <|@
result v29|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
object: a195 
=== Succesors ===
next: j595 
=== Usages ===
v673 
=== Predecessor ===
v439 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a195 #next: j595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j595 <|@
result v30|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
object: a569 
=== Succesors ===
next: v598 
=== Usages ===
v674 
=== Predecessor ===
j591 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a569 #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
result [v29|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j591 
index: - 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j591 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
result [v30|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j595 
index: - 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j597 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i640 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i640  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v673 v674 j597 
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
j595 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v673 v674 j597 #next: v503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
precise: true
stamp: void
=== Inputs ===
address: v653 
value: - 
stateBefore: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v653 value: - stateBefore: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid a227 <|@
result v34|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a569 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteVector.data
location: ByteVector.data
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
value: a227 
stateAfter: - 
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - value: a227 stateAfter: - #next: v505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
precise: false
stamp: void
=== Inputs ===
address: v653 
value: a569 
object: a1 
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v653 value: a569 object: a1 #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a331 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v26 
values: a195 a569 
=== Succesors ===
=== Usages ===
v655 v661 v656 v659 ?44 ?51 v657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v26 values: a195 a569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v25 v27 
=== Succesors ===
next: i641 
=== Usages ===
a331 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v25 v27 #next: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
result [v37|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a331 
index: - 
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a331 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i641 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
v234 v244 v265 v355 j351 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v655 lastLocationAccess: - #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i640 
y: i641 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i640 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v378 
=== Usages ===
=== Predecessor ===
i641 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v376 #falseSuccessor: v378  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
v242 
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 55]
stamp: i32
=== Inputs ===
x: i640 
y: i30 
=== Succesors ===
=== Usages ===
v244 j303 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i640 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i31 
y: i641 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i31 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v382 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v380 #falseSuccessor: v382  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v242 
=== Usages ===
v252 
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v242  <|@  <|@
f <@~|@floating>@ <|@
tid j302 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i640 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i640  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
result [v37|QWORD[.] + v8|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a331 
index: j302 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a331 index: j302  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 59]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 61]
stamp: i32 [0 - 8388607] bits:0...0xxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i90 
y: i32 
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i90 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 62]
resultBits: 8
stamp: i8
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v376 
address: v656 
lastLocationAccess: - 
value: i34 
stateAfter: - 
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v376 address: v656 lastLocationAccess: - value: i34 stateAfter: - #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid j303 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i31 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i31  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
result [v37|QWORD[.] + v39|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a331 
index: j303 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a331 index: j303  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 71]
resultBits: 8
stamp: i8
=== Inputs ===
value: i90 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v380 
address: v657 
lastLocationAccess: - 
value: i40 
stateAfter: - 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v380 address: v657 lastLocationAccess: - value: i40 stateAfter: - #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i45 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i90 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
profileData: PROFILED designatedSuccessorProbability: 0.04415882817548644
stamp: void
=== Inputs ===
condition: v167 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v167 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i12 
=== Succesors ===
=== Usages ===
v608 v624 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i90 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid j482 <|@
result long[3224|0xc98] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 3224
stableDimension: 0
stamp: i64 [3224]
stampKind: i64
value: long[3224|0xc98]
=== Inputs ===
=== Succesors ===
=== Usages ===
j478 j478 j478 j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v348 
=== Succesors ===
trueSuccessor: v604 
falseSuccessor: v607 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v348 #trueSuccessor: v604 #falseSuccessor: v607  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v602  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v604 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i363 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i90 
y: i362 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i362  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i363 
y: i637 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i363 y: i637  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
result int[-70172|0xfffffffffffeede4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -70172
stableDimension: 0
stamp: i32 [-70172]
stampKind: i32
value: int[-70172|0xfffffffffffeede4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v646 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v646 #trueSuccessor: v615 #falseSuccessor: v612  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i637 
y: i12 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i637 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v605 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v613 #falseSuccessor: v605  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v613 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v603  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v602 v603 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v602 v603 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 106]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 106]
stamp: i32
=== Inputs ===
x: i640 
y: i169 
=== Succesors ===
=== Usages ===
v355 i165 j352 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i640 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v348 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v623 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v348 #trueSuccessor: v620 #falseSuccessor: v623  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid j352 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i170 
=== Succesors ===
=== Usages ===
j353 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i170  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2 - 2147483645]
=== Inputs ===
x: i90 
y: i360 
=== Succesors ===
=== Usages ===
j645 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i360  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i361 
=== Succesors ===
=== Usages ===
j353 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i361  <|@  <|@
f <@~|@floating>@ <|@
tid j353 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j352 
y: j645 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j352 y: j645  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i641 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j353 
y: j351 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j353 y: j351  <|@  <|@
f <@~|@floating>@ <|@
tid i484 <|@
result int[-73499|0xfffffffffffee0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -73499
stableDimension: 0
stamp: i32 [-73499]
stampKind: i32
value: int[-73499|0xfffffffffffee0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v354 
=== Succesors ===
trueSuccessor: v631 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v354 #trueSuccessor: v631 #falseSuccessor: v628  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i641 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i170 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v621 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v621 #falseSuccessor: v629  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
v621 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v618 v619 
=== Succesors ===
next: v395 
=== Usages ===
v359 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v618 v619 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i637 
y: i45 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i637 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v394 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v394 #falseSuccessor: v392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid i476 <|@
result int[-64796|0xffffffffffff02e4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -64796
stableDimension: 0
stamp: i32 [-64796]
stampKind: i32
value: int[-64796|0xffffffffffff02e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-64796|0xffffffffffff02e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i641 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i13 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v265 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v265 #trueSuccessor: v396 #falseSuccessor: v398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
v273 
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i45 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i190 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v405 #falseSuccessor: v406  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 13]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: i642 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i642  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
result [v2|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a635 
=== Succesors ===
=== Usages ===
i642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i642 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v658 
lastLocationAccess: - 
=== Succesors ===
next: v411 
=== Usages ===
i263 v273 v308 
=== Predecessor ===
v405 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v658 lastLocationAccess: - #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i642 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i642  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result int[255|0xff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 9]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 255
stableDimension: 0
stamp: i32 [255]
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 v134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
x: i263 
y: i132 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i263 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid j487 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j478 j478 v500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v409 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
i642 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v409 #falseSuccessor: v410  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
result int[-104467|0xfffffffffffe67ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -104467
stableDimension: 0
stamp: i32 [-104467]
stampKind: i32
value: int[-104467|0xfffffffffffe67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v409 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
result byte[-128|0xffffffffffffff80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
rawvalue: -128
stableDimension: 0
stamp: i8 [-128]
stampKind: i8
value: byte[-128|0xffffffffffffff80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 v312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i642 
y: i307 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i642 y: i307  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v413 #falseSuccessor: v414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i13 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
result [v37|QWORD[.] + v9|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a331 
index: j309 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a331 index: j309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v396 
address: v659 
lastLocationAccess: - 
value: i642 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v396 address: v659 lastLocationAccess: - value: i642 stateAfter: - #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i166 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v48 
values: i30 i80 
=== Succesors ===
=== Usages ===
?51 v52 i80 j310 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v48 values: i30 i80  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v48 
values: i170 i74 
=== Succesors ===
=== Usages ===
?51 i164 j313 i74 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v48 values: i170 i74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v47 
=== Succesors ===
next: v58 
=== Usages ===
i166 i165 v54 v81 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v47 #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7918c7f8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i166 
y: i90 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i166 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
profileData: INJECTED designatedSuccessorProbability: 0.9538010817307693
stamp: void
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v57 #falseSuccessor: v54  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i643 
=== Usages ===
v359 
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i643  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i166 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i166  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
result [v50|DWORD + v2|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j310 
index: a635 
=== Succesors ===
=== Usages ===
i643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j310 index: a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i643 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
=== Succesors ===
next: v419 
=== Usages ===
i284 v294 v312 
=== Predecessor ===
v57 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i284 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i643 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i643  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
x: i284 
y: i132 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i284 y: i132  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
i643 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v417 #falseSuccessor: v418  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid i497 <|@
result int[-106515|0xfffffffffffe5fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
rawvalue: -106515
stableDimension: 0
stamp: i32 [-106515]
stampKind: i32
value: int[-106515|0xfffffffffffe5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i498 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@3cd59ef5
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i643 
y: i307 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i643 y: i307  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v312 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v312 #trueSuccessor: v421 #falseSuccessor: v422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
guards: v617 v57 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v617 v57  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i165 
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i165  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
result [v37|QWORD[.] + v51|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a331 
index: j313 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a331 index: j313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v359 
address: v661 
lastLocationAccess: - 
value: i643 
stateAfter: - 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v359 address: v661 lastLocationAccess: - value: i643 stateAfter: - #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 106]
stamp: i32
=== Inputs ===
x: i165 
y: i30 
=== Succesors ===
=== Usages ===
i165 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i165 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 131]
stamp: i32
=== Inputs ===
x: i166 
y: i30 
=== Succesors ===
=== Usages ===
i166 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i166 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v48 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v48 #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i164 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v159 
values: i165 i13 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v159 values: i165 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v160 v161 
=== Succesors ===
next: v296 
=== Usages ===
i164 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v160 v161 #next: v296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteVector.length
location: ByteVector.length
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 139]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v652 
lastLocationAccess: - 
value: i164 
stateAfter: - 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v652 lastLocationAccess: - value: i164 stateAfter: - #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:310) [bci: 143]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid i502 <|@
result int[-107539|0xfffffffffffe5bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
rawvalue: -107539
stableDimension: 0
stamp: i32 [-107539]
stampKind: i32
value: int[-107539|0xfffffffffffe5bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i498 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-107539|0xfffffffffffe5bed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i498 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: i32 [-107539 - -106515] bits:1...1001011x1111101101
valueDescription: i32
=== Inputs ===
merge: v495 
values: i497 i502 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v495 values: i497 i502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v496 v501 
=== Succesors ===
next: v500 
=== Usages ===
i498 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v496 v501 #next: v500  <|@  <|@
tid ?51 <|@
d <@d|@=== Debug Properties ===
bci: 76
bytecode: iload
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
sourceFile: ByteVector.java
sourceLine: 300
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i90 i165 a331 i166 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i90 i165 a331 i166  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
stateBefore: ?51 
actionAndReason: i498 
speculation: j487 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?51 actionAndReason: i498 speculation: j487  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
result int[-105491|0xfffffffffffe63ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -105491
stableDimension: 0
stamp: i32 [-105491]
stampKind: i32
value: int[-105491|0xfffffffffffe63ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
result long[2580|0xa14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i491 <|@
result int[-103443|0xfffffffffffe6bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -103443
stableDimension: 0
stamp: i32 [-103443]
stampKind: i32
value: int[-103443|0xfffffffffffe6bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid i489 <|@
result int[-68123|0xfffffffffffef5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -68123
stableDimension: 0
stamp: i32 [-68123]
stampKind: i32
value: int[-68123|0xfffffffffffef5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68123|0xfffffffffffef5e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v612 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i477 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i32 [-105491 - -64796] bits:1...1xxxxxxxxx1110x10x
valueDescription: i32
=== Inputs ===
merge: v474 
values: i476 i481 i484 i486 i489 i491 i494 i481 i484 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v474 values: i476 i481 i484 i486 i489 i491 i494 i481 i484  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i64 [0 - 3224] bits:0...0xxx0x00xxx00
valueDescription: i64
=== Inputs ===
merge: v474 
values: j447 j482 j482 j487 j447 j492 j487 j482 j482 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v474 values: j447 j482 j482 j487 j447 j492 j487 j482 j482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v475 v480 v483 v485 v488 v490 v493 v633 v634 
=== Succesors ===
next: v479 
=== Usages ===
i477 j478 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v475 v480 v483 v485 v488 v490 v493 v633 v634 #next: v479  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 73
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
sourceFile: ByteVector.java
sourceLine: 300
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i90 i13 a331 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i90 i13 a331  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
stateBefore: ?44 
actionAndReason: i477 
speculation: j478 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?44 actionAndReason: i477 speculation: j478  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
result int[-62747|0xffffffffffff0ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
rawvalue: -62747
stableDimension: 0
stamp: i32 [-62747]
stampKind: i32
value: int[-62747|0xffffffffffff0ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62747|0xffffffffffff0ae5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid i468 <|@
result int[-60187|0xffffffffffff14e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
rawvalue: -60187
stableDimension: 0
stamp: i32 [-60187]
stampKind: i32
value: int[-60187|0xffffffffffff14e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i469 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: i32 [-62747 - -60187] bits:1...1000xxxx011100101
valueDescription: i32
=== Inputs ===
merge: v466 
values: i468 i473 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v466 values: i468 i473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v467 v472 
=== Succesors ===
next: v471 
=== Usages ===
i469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v467 v472 #next: v471  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
sourceFile: ByteVector.java
sourceLine: 293
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i90 i640 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i90 i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
stateBefore: ?28 
actionAndReason: i469 
speculation: j447 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?28 actionAndReason: i469 speculation: j447  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i459 <|@
result int[-102419|0xfffffffffffe6fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -102419
stableDimension: 0
stamp: i32 [-102419]
stampKind: i32
value: int[-102419|0xfffffffffffe6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i448 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i32 [-111897 - -102419] bits:1...1001xxxx1xxxxxx1xx
valueDescription: i32
=== Inputs ===
merge: v444 
values: i456 i459 i461 i463 i465 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v444 values: i456 i459 i461 i463 i465  <|@  <|@
f <@~|@floating>@ <|@
tid j449 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i64 [0 - 1300] bits:0...0x0x000x0x00
valueDescription: i64
=== Inputs ===
merge: v444 
values: j457 j177 j447 j447 j447 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v444 values: j457 j177 j447 j447 j447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v455 v458 v460 v462 v464 
=== Succesors ===
next: v450 
=== Usages ===
i448 j449 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v455 v458 v460 v462 v464 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i448 
speculation: j449 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i448 speculation: j449  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-111897|0xfffffffffffe4ae7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-64796|0xffffffffffff02e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68123|0xfffffffffffef5e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62747|0xffffffffffff0ae5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-107539|0xfffffffffffe5bed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109036|0xfffffffffffe5614], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-111897|0xfffffffffffe4ae7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-64796|0xffffffffffff02e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68123|0xfffffffffffef5e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62747|0xffffffffffff0ae5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-107539|0xfffffffffffe5bed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109036|0xfffffffffffe5614], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-111897|0xfffffffffffe4ae7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-64796|0xffffffffffff02e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68123|0xfffffffffffef5e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62747|0xffffffffffff0ae5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-107539|0xfffffffffffe5bed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109036|0xfffffffffffe5614], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-111897|0xfffffffffffe4ae7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-64796|0xffffffffffff02e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68123|0xfffffffffffef5e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62747|0xffffffffffff0ae5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-107539|0xfffffffffffe5bed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109036|0xfffffffffffe5614], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   32  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   50  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   54  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   60  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   66  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   82  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   86  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr   96  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  118  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  146  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  148  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  150  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr  152  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  174  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  210  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr  212  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  262  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  270  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr  282  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  292  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  314  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [int[-111897|0xfffffffffffe4ae7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [int[-64796|0xffffffffffff02e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [int[-68123|0xfffffffffffef5e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [int[-62747|0xffffffffffff0ae5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [int[-107539|0xfffffffffffe5bed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  400  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  412  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [int[-109036|0xfffffffffffe5614], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  424  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   32  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   50  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   54  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   60  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   66  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   82  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   86  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr   96  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  118  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  146  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  148  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  150  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr  152  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  174  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  210  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr  212  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  262  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  270  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr  282  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  292  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  314  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [int[-111897|0xfffffffffffe4ae7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [int[-64796|0xffffffffffff02e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [int[-68123|0xfffffffffffef5e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [int[-62747|0xffffffffffff0ae5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [int[-107539|0xfffffffffffe5bed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  400  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  412  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [int[-109036|0xfffffffffffe5614], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  424  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[144, 145[[296, 298[[312, 314[[324, 325[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v3|d [0, 1[[20, 23[[144, 145[[322, 325[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v31|q [0, 8[[142, 145[[310, 312[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[144, 145[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v21|q [0, 6[[140, 145[[308, 312[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[138, 145[[324, 325[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 296[[300, 395[[396, 407[[408, 419[[420, 431[6 MustHaveRegister 16 MustHaveRegister 28 MustHaveRegister 146 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 294 MustHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|d [8, 288[[304, 395[[396, 407[[408, 419[[420, 431[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [10, 288[[304, 328[10 MustHaveRegister 14 MustHaveRegister 246 MustHaveRegister 268 MustHaveRegister 287 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [12, 242[[304, 328[12 MustHaveRegister 20 ShouldHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [14, 234[[304, 328[14 MustHaveRegister 22 ShouldHaveRegister 186 MustHaveRegister 190 ShouldHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [16, 34[16 MustHaveRegister 18 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [18, 38[[42, 124[[304, 328[18 MustHaveRegister 36 ShouldHaveRegister 44 ShouldHaveRegister 54 ShouldHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v4|d [22, 288[[304, 328[[332, 360[[364, 368[[372, 380[[384, 395[[396, 407[[408, 419[22 MustHaveRegister 24 ShouldHaveRegister 32 ShouldHaveRegister 50 ShouldHaveRegister 170 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 180 ShouldHaveRegister 184 ShouldHaveRegister 204 ShouldHaveRegister 210 MustHaveRegister 264 MustHaveRegister 287 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [28, 202[[304, 328[[376, 380[[384, 395[28 MustHaveRegister 30 MustHaveRegister 44 MustHaveRegister 50 ShouldHaveRegister 120 MustHaveRegister 124 MustHaveRegister 128 MustHaveRegister 136 ShouldHaveRegister 160 ShouldHaveRegister 164 ShouldHaveRegister 172 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [30, 258[[300, 303[[304, 328[[332, 360[[364, 368[[408, 419[30 MustHaveRegister 32 ShouldHaveRegister 238 ShouldHaveRegister 258 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v9|d [32, 36[32 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v5|d [34, 41[[42, 132[[304, 328[34 MustHaveRegister 40 ShouldHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [48, 114[[320, 328[48 MustHaveRegister 66 ShouldHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 102 MustHaveRegister 107 LiveAtLoopEnd 114 ShouldHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v7|d [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [52, 58[52 MustHaveRegister 56 ShouldHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v6|d [54, 59[54 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v14|d [58, 128[[304, 328[58 MustHaveRegister 60 ShouldHaveRegister 86 MustHaveRegister 128 ShouldHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v16|d [60, 62[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v18|q [64, 108[64 MustHaveRegister 66 ShouldHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 88 MustHaveRegister 98 MustHaveRegister 107 LiveAtLoopEnd  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v19|q [66, 72[66 MustHaveRegister 68 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [306, 308[306 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q rax|q [314, 319[314 MustHaveRegister 316 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [88, 92[[320, 322[88 MustHaveRegister 90 ShouldHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v25|q [96, 104[98 ShouldHaveRegister 102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v24|q [104, 107[104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v12|q [114, 117[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v27|q [118, 155[134 ShouldHaveRegister 148 MustHaveRegister 152 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v11|q [132, 138[132 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v28|q [134, 140[134 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v8|d [136, 142[136 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [146, 147[146 MustHaveRegister  "NoDefinitionFound"
  v33|q QWORD "[v33|q]" v33|q -1 [146, 147[146 MustHaveRegister  "NoDefinitionFound"
  v34|d DWORD "[v34|d]" v34|d v28|q [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q -1 [152, 153[152 MustHaveRegister  "NoDefinitionFound"
  v36|q QWORD "[v36|q]" v36|q -1 [152, 153[152 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[v37|q]" v37|q v11|q [156, 288[[332, 360[[364, 368[[372, 376[[396, 407[[408, 419[158 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 258 MustHaveRegister 280 MustHaveRegister 287 LiveAtLoopEnd  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [158, 238[158 MustHaveRegister 160 MustHaveRegister 166 MustHaveRegister 216 ShouldHaveRegister 222 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d v8|d [164, 174[164 MustHaveRegister 166 ShouldHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d v7|d [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d v7|d [184, 186[184 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [202, 261[202 MustHaveRegister 208 ShouldHaveRegister 222 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q -1 [208, 214[208 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [210, 212[210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v44|d [212, 214[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v43|q [214, 218[214 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v38|d [216, 218[216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [246, 258[246 MustHaveRegister 248 ShouldHaveRegister 254 ShouldHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d -1 [248, 250[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d v55|d [262, 284[[372, 376[[396, 407[264 ShouldHaveRegister 268 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d v54|d [262, 282[[288, 291[[372, 376[[396, 407[280 MustHaveRegister 282 ShouldHaveRegister 290 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d -1 [268, 280[268 MustHaveRegister 270 ShouldHaveRegister 276 ShouldHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d -1 [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d v51|d [282, 287[282 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d v50|d [284, 287[284 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d v51|d [292, 294[294 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d -1 [400, 402[402 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d -1 [412, 414[414 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [412, 416[416 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d -1 [388, 390[390 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d -1 [424, 426[426 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q -1 [424, 428[428 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[144, 145[[296, 298[[312, 314[[324, 325[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v3|d [0, 1[[20, 23[[144, 145[[322, 325[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v31|q [0, 8[[142, 145[[310, 312[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[144, 145[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v21|q [0, 6[[140, 145[[308, 312[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[138, 145[[324, 325[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 130[6 MustHaveRegister 16 MustHaveRegister 28 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [8, 130[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 130[10 MustHaveRegister 14 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [12, 130[12 MustHaveRegister 20 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [14, 130[14 MustHaveRegister 22 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [16, 34[16 MustHaveRegister 18 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [18, 38[[42, 124[[304, 328[18 MustHaveRegister 36 ShouldHaveRegister 44 ShouldHaveRegister 54 ShouldHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d v4|d [22, 130[22 MustHaveRegister 24 ShouldHaveRegister 32 ShouldHaveRegister 50 ShouldHaveRegister  "OneSpillStore"
  v8|d DWORD "[rcx|d]" v8|d -1 [28, 143[28 MustHaveRegister 30 MustHaveRegister 44 MustHaveRegister 50 ShouldHaveRegister 120 MustHaveRegister 124 MustHaveRegister 128 MustHaveRegister 136 ShouldHaveRegister  "OneSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [30, 130[30 MustHaveRegister 32 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rbp|d]" v10|d v9|d [32, 36[32 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r13|q]" v11|q v5|d [34, 41[[42, 46[34 MustHaveRegister 40 ShouldHaveRegister  "OneSpillStore"
  v12|q QWORD "[rbp|q]" v12|q -1 [48, 114[[320, 328[48 MustHaveRegister 66 ShouldHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 102 MustHaveRegister 107 LiveAtLoopEnd 114 ShouldHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d v7|d [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [52, 58[52 MustHaveRegister 56 ShouldHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r14|d]" v15|d v6|d [54, 59[54 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rdi|d]" v16|d v14|d [58, 128[[304, 320[58 MustHaveRegister 60 ShouldHaveRegister 86 MustHaveRegister 128 ShouldHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r14|q]" v17|q v16|d [60, 62[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r14|q]" v18|q -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r14|q]" v19|q v18|q [64, 108[64 MustHaveRegister 66 ShouldHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 88 MustHaveRegister 98 MustHaveRegister 107 LiveAtLoopEnd  "NoSpillStore"
  v20|q QWORD "[r13|q]" v20|q v19|q [66, 72[66 MustHaveRegister 68 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q -1 [306, 308[306 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q rax|q [314, 319[314 MustHaveRegister 316 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r13|q]" v23|q -1 [88, 92[[320, 322[88 MustHaveRegister 90 ShouldHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r13|q]" v24|q v25|q [96, 104[98 ShouldHaveRegister 102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r13|q]" v25|q v24|q [104, 107[104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbp|q]" v27|q v12|q [114, 117[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rbp|q]" v28|q v27|q [118, 143[134 ShouldHaveRegister  "OneSpillStore"
  v29|q QWORD "[r13|q]" v29|q v11|q [132, 138[132 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v28|q [134, 140[134 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r14|q]" v31|q v8|d [136, 142[136 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q -1 [146, 147[146 MustHaveRegister  "NoDefinitionFound"
  v33|q QWORD "[rsi|q]" v33|q -1 [146, 147[146 MustHaveRegister  "NoDefinitionFound"
  v34|d DWORD "[rax|d]" v34|d v28|q [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q -1 [152, 153[152 MustHaveRegister  "NoDefinitionFound"
  v36|q QWORD "[rsi|q]" v36|q -1 [152, 153[152 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[r13|q]" v37|q v11|q [156, 288[[332, 360[[364, 368[[372, 376[[396, 407[[408, 419[158 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 258 MustHaveRegister 280 MustHaveRegister 287 LiveAtLoopEnd  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d -1 [158, 238[158 MustHaveRegister 160 MustHaveRegister 166 MustHaveRegister 216 ShouldHaveRegister 222 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rcx|d]" v39|d v8|d [164, 174[164 MustHaveRegister 166 ShouldHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rsi|d]" v40|d v7|d [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rsi|d]" v41|d v7|d [184, 186[184 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [202, 261[202 MustHaveRegister 208 ShouldHaveRegister 222 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q -1 [208, 214[208 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rcx|d]" v44|d -1 [210, 212[210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rcx|q]" v45|q v44|d [212, 214[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdx|q]" v46|q v43|q [214, 218[214 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q v38|d [216, 218[216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d -1 [246, 258[246 MustHaveRegister 248 ShouldHaveRegister 254 ShouldHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rdx|d]" v49|d -1 [248, 250[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v55|d [262, 284[[372, 376[[396, 407[264 ShouldHaveRegister 268 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r8|d]" v51|d v54|d [262, 282[[288, 291[[372, 376[[396, 407[280 MustHaveRegister 282 ShouldHaveRegister 290 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d -1 [268, 280[268 MustHaveRegister 270 ShouldHaveRegister 276 ShouldHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rsi|d]" v53|d -1 [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r8|d]" v54|d v51|d [282, 287[282 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r11|d]" v55|d v50|d [284, 287[284 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r8|d]" v56|d v51|d [292, 294[294 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[r9|d]" v57|d -1 [400, 402[402 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d -1 [412, 414[414 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[r8|q]" v59|q -1 [412, 416[416 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[r8|d]" v60|d -1 [388, 390[390 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r11|d]" v61|d -1 [424, 426[426 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r8|q]" v62|q -1 [424, 428[428 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[vstack:2|q]" v0|q v0|q [130, 139[ "OneSpillStore"
  v64|q QWORD "[vstack:1|q]" v1|q v1|q [130, 141[ "OneSpillStore"
  v65|d DWORD "[vstack:10|d]" v2|d v2|d [130, 143[ "OneSpillStore"
  v66|d DWORD "[vstack:9|d]" v3|d v3|d [130, 143[ "OneSpillStore"
  v67|d DWORD "[vstack:7|d]" v4|d v4|d [130, 143[ "OneSpillStore"
  v68|d DWORD "[vstack:6|d]" v7|d v7|d [130, 143[ "OneSpillStore"
  v69|d DWORD "[vstack:5|d]" v8|d v8|d [143, 168[160 ShouldHaveRegister 164 ShouldHaveRegister  "OneSpillStore"
  v70|d DWORD "[vstack:8|d]" v9|d v9|d [130, 143[ "OneSpillStore"
  v71|d DWORD "[rdi|d]" v16|d v16|d [320, 323[ "NoSpillStore"
  v72|q QWORD "[vstack:0|q]" v11|q v11|q [46, 132[[304, 328[132 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[vstack:4|q]" v28|q v28|q [143, 147[ "OneSpillStore"
  v74|q QWORD "[vstack:2|q]" v0|q v0|q [139, 143[ "OneSpillStore"
  v75|d DWORD "[vstack:6|d]" v7|d v7|d [143, 168[ "OneSpillStore"
  v76|d DWORD "[vstack:7|d]" v4|d v4|d [143, 182[ "OneSpillStore"
  v77|d DWORD "[vstack:8|d]" v9|d v9|d [143, 256[238 ShouldHaveRegister  "OneSpillStore"
  v78|d DWORD "[vstack:9|d]" v3|d v3|d [143, 240[ "OneSpillStore"
  v79|d DWORD "[vstack:10|d]" v2|d v2|d [143, 244[ "OneSpillStore"
  v80|q QWORD "[vstack:1|q]" v1|q v1|q [141, 288[[304, 395[[396, 407[[408, 419[[420, 424[ "OneSpillStore"
  v81|q QWORD "[vstack:2|q]" v0|q v0|q [143, 145[ "OneSpillStore"
  v82|q QWORD "[rdx|q]" v1|q v1|q [424, 431[ "OneSpillStore"
  v83|q QWORD "[r10|q]" v0|q v0|q [145, 296[[300, 395[[396, 407[[408, 419[[420, 431[146 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 294 MustHaveRegister 296 ShouldHaveRegister  "OneSpillStore"
  v84|q QWORD "[rbp|q]" v28|q v28|q [147, 155[148 MustHaveRegister 152 MustHaveRegister 154 ShouldHaveRegister  "OneSpillStore"
  v85|d DWORD "[r11|d]" v8|d v8|d [168, 202[[304, 328[[376, 380[[384, 395[172 MustHaveRegister 202 MustHaveRegister  "OneSpillStore"
  v86|d DWORD "[rbx|d]" v7|d v7|d [168, 288[[304, 328[[332, 360[[364, 368[[372, 380[[384, 395[[396, 407[[408, 419[170 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 180 ShouldHaveRegister 184 ShouldHaveRegister 204 ShouldHaveRegister 210 MustHaveRegister 264 MustHaveRegister 287 LiveAtLoopEnd  "OneSpillStore"
  v87|d DWORD "[r8|d]" v4|d v4|d [182, 234[[304, 328[186 MustHaveRegister 190 ShouldHaveRegister 234 MustHaveRegister  "OneSpillStore"
  v88|d DWORD "[rbp|d]" v9|d v9|d [256, 258[[300, 303[[304, 320[258 MustHaveRegister 302 ShouldHaveRegister  "OneSpillStore"
  v89|d DWORD "[r14|d]" v3|d v3|d [240, 242[[304, 328[242 MustHaveRegister  "OneSpillStore"
  v90|d DWORD "[rcx|d]" v2|d v2|d [244, 288[[304, 320[246 MustHaveRegister 268 MustHaveRegister 287 LiveAtLoopEnd  "OneSpillStore"
  v91|d DWORD "[rsi|d]" v2|d v2|d [320, 328[ "OneSpillStore"
  v92|d DWORD "[rdx|d]" v9|d v9|d [320, 328[[332, 360[[364, 368[[408, 419[ "OneSpillStore"
  v93|d DWORD "[r13|d]" v16|d v16|d [323, 328[ "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   32  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   50  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   54  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   60  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   66  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   82  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   86  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr   96  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  118  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = STACKMOVE (input: v65|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = STACKMOVE (input: v70|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = STACKMOVE (input: v67|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = STACKMOVE (input: v74|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v73|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  150  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr  152  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  174  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  210  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr  212  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  262  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  270  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr  282  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  292  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  314  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [int[-111897|0xfffffffffffe4ae7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [int[-64796|0xffffffffffff02e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [int[-68123|0xfffffffffffef5e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [int[-62747|0xffffffffffff0ae5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [int[-107539|0xfffffffffffe5bed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  400  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  412  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [int[-109036|0xfffffffffffe5614], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  424  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[144, 145[[296, 298[[312, 314[[324, 325[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v3|d [0, 1[[20, 23[[144, 145[[322, 325[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v31|q [0, 8[[142, 145[[310, 312[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[144, 145[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v21|q [0, 6[[140, 145[[308, 312[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[138, 145[[324, 325[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 130[6 MustHaveRegister 16 MustHaveRegister 28 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [8, 130[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 130[10 MustHaveRegister 14 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [12, 130[12 MustHaveRegister 20 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [14, 130[14 MustHaveRegister 22 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [16, 34[16 MustHaveRegister 18 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [18, 38[[42, 124[[304, 328[18 MustHaveRegister 36 ShouldHaveRegister 44 ShouldHaveRegister 54 ShouldHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d v4|d [22, 130[22 MustHaveRegister 24 ShouldHaveRegister 32 ShouldHaveRegister 50 ShouldHaveRegister  "OneSpillStore"
  v8|d DWORD "[rcx|d]" v8|d -1 [28, 143[28 MustHaveRegister 30 MustHaveRegister 44 MustHaveRegister 50 ShouldHaveRegister 120 MustHaveRegister 124 MustHaveRegister 128 MustHaveRegister 136 ShouldHaveRegister  "OneSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [30, 130[30 MustHaveRegister 32 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rbp|d]" v10|d v9|d [32, 36[32 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r13|q]" v11|q v5|d [34, 41[[42, 46[34 MustHaveRegister 40 ShouldHaveRegister  "OneSpillStore"
  v12|q QWORD "[rbp|q]" v12|q -1 [48, 114[[320, 328[48 MustHaveRegister 66 ShouldHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 102 MustHaveRegister 107 LiveAtLoopEnd 114 ShouldHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d v7|d [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [52, 58[52 MustHaveRegister 56 ShouldHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r14|d]" v15|d v6|d [54, 59[54 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rdi|d]" v16|d v14|d [58, 128[[304, 320[58 MustHaveRegister 60 ShouldHaveRegister 86 MustHaveRegister 128 ShouldHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r14|q]" v17|q v16|d [60, 62[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r14|q]" v18|q -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r14|q]" v19|q v18|q [64, 108[64 MustHaveRegister 66 ShouldHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 88 MustHaveRegister 98 MustHaveRegister 107 LiveAtLoopEnd  "NoSpillStore"
  v20|q QWORD "[r13|q]" v20|q v19|q [66, 72[66 MustHaveRegister 68 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q -1 [306, 308[306 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q rax|q [314, 319[314 MustHaveRegister 316 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r13|q]" v23|q -1 [88, 92[[320, 322[88 MustHaveRegister 90 ShouldHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r13|q]" v24|q v25|q [96, 104[98 ShouldHaveRegister 102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r13|q]" v25|q v24|q [104, 107[104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbp|q]" v27|q v12|q [114, 117[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rbp|q]" v28|q v27|q [118, 143[134 ShouldHaveRegister  "OneSpillStore"
  v29|q QWORD "[r13|q]" v29|q v11|q [132, 138[132 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v28|q [134, 140[134 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r14|q]" v31|q v8|d [136, 142[136 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q -1 [146, 147[146 MustHaveRegister  "NoDefinitionFound"
  v33|q QWORD "[rsi|q]" v33|q -1 [146, 147[146 MustHaveRegister  "NoDefinitionFound"
  v34|d DWORD "[rax|d]" v34|d v28|q [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q -1 [152, 153[152 MustHaveRegister  "NoDefinitionFound"
  v36|q QWORD "[rsi|q]" v36|q -1 [152, 153[152 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[r13|q]" v37|q v11|q [156, 288[[332, 360[[364, 368[[372, 376[[396, 407[[408, 419[158 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 258 MustHaveRegister 280 MustHaveRegister 287 LiveAtLoopEnd  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d -1 [158, 238[158 MustHaveRegister 160 MustHaveRegister 166 MustHaveRegister 216 ShouldHaveRegister 222 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rcx|d]" v39|d v8|d [164, 174[164 MustHaveRegister 166 ShouldHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rsi|d]" v40|d v7|d [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rsi|d]" v41|d v7|d [184, 186[184 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [202, 261[202 MustHaveRegister 208 ShouldHaveRegister 222 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q -1 [208, 214[208 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rcx|d]" v44|d -1 [210, 212[210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rcx|q]" v45|q v44|d [212, 214[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdx|q]" v46|q v43|q [214, 218[214 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q v38|d [216, 218[216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d -1 [246, 258[246 MustHaveRegister 248 ShouldHaveRegister 254 ShouldHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rdx|d]" v49|d -1 [248, 250[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v55|d [262, 284[[372, 376[[396, 407[264 ShouldHaveRegister 268 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r8|d]" v51|d v54|d [262, 282[[288, 291[[372, 376[[396, 407[280 MustHaveRegister 282 ShouldHaveRegister 290 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d -1 [268, 280[268 MustHaveRegister 270 ShouldHaveRegister 276 ShouldHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rsi|d]" v53|d -1 [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r8|d]" v54|d v51|d [282, 287[282 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r11|d]" v55|d v50|d [284, 287[284 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r8|d]" v56|d v51|d [292, 294[294 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[r9|d]" v57|d -1 [400, 402[402 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d -1 [412, 414[414 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[r8|q]" v59|q -1 [412, 416[416 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[r8|d]" v60|d -1 [388, 390[390 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r11|d]" v61|d -1 [424, 426[426 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r8|q]" v62|q -1 [424, 428[428 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[vstack:2|q]" v0|q v0|q [130, 139[ "OneSpillStore"
  v64|q QWORD "[vstack:1|q]" v1|q v1|q [130, 141[ "OneSpillStore"
  v65|d DWORD "[vstack:10|d]" v2|d v2|d [130, 143[ "OneSpillStore"
  v66|d DWORD "[vstack:9|d]" v3|d v3|d [130, 143[ "OneSpillStore"
  v67|d DWORD "[vstack:7|d]" v4|d v4|d [130, 143[ "OneSpillStore"
  v68|d DWORD "[vstack:6|d]" v7|d v7|d [130, 143[ "OneSpillStore"
  v69|d DWORD "[vstack:5|d]" v8|d v8|d [143, 168[160 ShouldHaveRegister 164 ShouldHaveRegister  "OneSpillStore"
  v70|d DWORD "[vstack:8|d]" v9|d v9|d [130, 143[ "OneSpillStore"
  v71|d DWORD "[rdi|d]" v16|d v16|d [320, 323[ "NoSpillStore"
  v72|q QWORD "[vstack:0|q]" v11|q v11|q [46, 132[[304, 328[132 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[vstack:4|q]" v28|q v28|q [143, 147[ "OneSpillStore"
  v74|q QWORD "[vstack:2|q]" v0|q v0|q [139, 143[ "OneSpillStore"
  v75|d DWORD "[vstack:6|d]" v7|d v7|d [143, 168[ "OneSpillStore"
  v76|d DWORD "[vstack:7|d]" v4|d v4|d [143, 182[ "OneSpillStore"
  v77|d DWORD "[vstack:8|d]" v9|d v9|d [143, 256[238 ShouldHaveRegister  "OneSpillStore"
  v78|d DWORD "[vstack:9|d]" v3|d v3|d [143, 240[ "OneSpillStore"
  v79|d DWORD "[vstack:10|d]" v2|d v2|d [143, 244[ "OneSpillStore"
  v80|q QWORD "[vstack:1|q]" v1|q v1|q [141, 288[[304, 395[[396, 407[[408, 419[[420, 424[ "OneSpillStore"
  v81|q QWORD "[vstack:2|q]" v0|q v0|q [143, 145[ "OneSpillStore"
  v82|q QWORD "[rdx|q]" v1|q v1|q [424, 431[ "OneSpillStore"
  v83|q QWORD "[r10|q]" v0|q v0|q [145, 296[[300, 395[[396, 407[[408, 419[[420, 431[146 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 294 MustHaveRegister 296 ShouldHaveRegister  "OneSpillStore"
  v84|q QWORD "[rbp|q]" v28|q v28|q [147, 155[148 MustHaveRegister 152 MustHaveRegister 154 ShouldHaveRegister  "OneSpillStore"
  v85|d DWORD "[r11|d]" v8|d v8|d [168, 202[[304, 328[[376, 380[[384, 395[172 MustHaveRegister 202 MustHaveRegister  "OneSpillStore"
  v86|d DWORD "[rbx|d]" v7|d v7|d [168, 288[[304, 328[[332, 360[[364, 368[[372, 380[[384, 395[[396, 407[[408, 419[170 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 180 ShouldHaveRegister 184 ShouldHaveRegister 204 ShouldHaveRegister 210 MustHaveRegister 264 MustHaveRegister 287 LiveAtLoopEnd  "OneSpillStore"
  v87|d DWORD "[r8|d]" v4|d v4|d [182, 234[[304, 328[186 MustHaveRegister 190 ShouldHaveRegister 234 MustHaveRegister  "OneSpillStore"
  v88|d DWORD "[rbp|d]" v9|d v9|d [256, 258[[300, 303[[304, 320[258 MustHaveRegister 302 ShouldHaveRegister  "OneSpillStore"
  v89|d DWORD "[r14|d]" v3|d v3|d [240, 242[[304, 328[242 MustHaveRegister  "OneSpillStore"
  v90|d DWORD "[rcx|d]" v2|d v2|d [244, 288[[304, 320[246 MustHaveRegister 268 MustHaveRegister 287 LiveAtLoopEnd  "OneSpillStore"
  v91|d DWORD "[rsi|d]" v2|d v2|d [320, 328[ "OneSpillStore"
  v92|d DWORD "[rdx|d]" v9|d v9|d [320, 328[[332, 360[[364, 368[[408, 419[ "OneSpillStore"
  v93|d DWORD "[r13|d]" v16|d v16|d [323, 328[ "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   32  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   50  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   54  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   60  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   66  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   82  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   86  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr   96  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  118  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = STACKMOVE (input: v65|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = STACKMOVE (input: v70|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = STACKMOVE (input: v67|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = STACKMOVE (input: v74|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v73|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  150  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr  152  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  174  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  210  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr  212  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  262  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  270  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr  282  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  292  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  314  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [int[-111897|0xfffffffffffe4ae7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [int[-64796|0xffffffffffff02e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[2580|0xa14]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [int[-73499|0xfffffffffffee0e5], long[3224|0xc98]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [int[-68123|0xfffffffffffef5e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [int[-62747|0xffffffffffff0ae5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [int[-107539|0xfffffffffffe5bed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  400  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [int[-70172|0xfffffffffffeede4], long[3224|0xc98]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  412  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [int[-109036|0xfffffffffffe5614], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  424  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[144, 145[[296, 298[[312, 314[[324, 325[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v3|d [0, 1[[20, 23[[144, 145[[322, 325[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v31|q [0, 8[[142, 145[[310, 312[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[144, 145[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v21|q [0, 6[[140, 145[[308, 312[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[138, 145[[324, 325[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[144, 145[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 130[6 MustHaveRegister 16 MustHaveRegister 28 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [8, 130[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 130[10 MustHaveRegister 14 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [12, 130[12 MustHaveRegister 20 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [14, 130[14 MustHaveRegister 22 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [16, 34[16 MustHaveRegister 18 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [18, 38[[42, 124[[304, 328[18 MustHaveRegister 36 ShouldHaveRegister 44 ShouldHaveRegister 54 ShouldHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d v4|d [22, 130[22 MustHaveRegister 24 ShouldHaveRegister 32 ShouldHaveRegister 50 ShouldHaveRegister  "OneSpillStore"
  v8|d DWORD "[rcx|d]" v8|d -1 [28, 143[28 MustHaveRegister 30 MustHaveRegister 44 MustHaveRegister 50 ShouldHaveRegister 120 MustHaveRegister 124 MustHaveRegister 128 MustHaveRegister 136 ShouldHaveRegister  "OneSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [30, 130[30 MustHaveRegister 32 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rbp|d]" v10|d v9|d [32, 36[32 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r13|q]" v11|q v5|d [34, 41[[42, 46[34 MustHaveRegister 40 ShouldHaveRegister  "OneSpillStore"
  v12|q QWORD "[rbp|q]" v12|q -1 [48, 114[[320, 328[48 MustHaveRegister 66 ShouldHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 102 MustHaveRegister 107 LiveAtLoopEnd 114 ShouldHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d v7|d [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [52, 58[52 MustHaveRegister 56 ShouldHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r14|d]" v15|d v6|d [54, 59[54 MustHaveRegister 56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rdi|d]" v16|d v14|d [58, 128[[304, 320[58 MustHaveRegister 60 ShouldHaveRegister 86 MustHaveRegister 128 ShouldHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r14|q]" v17|q v16|d [60, 62[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r14|q]" v18|q -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r14|q]" v19|q v18|q [64, 108[64 MustHaveRegister 66 ShouldHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 88 MustHaveRegister 98 MustHaveRegister 107 LiveAtLoopEnd  "NoSpillStore"
  v20|q QWORD "[r13|q]" v20|q v19|q [66, 72[66 MustHaveRegister 68 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q -1 [306, 308[306 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q rax|q [314, 319[314 MustHaveRegister 316 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r13|q]" v23|q -1 [88, 92[[320, 322[88 MustHaveRegister 90 ShouldHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r13|q]" v24|q v25|q [96, 104[98 ShouldHaveRegister 102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r13|q]" v25|q v24|q [104, 107[104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbp|q]" v27|q v12|q [114, 117[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rbp|q]" v28|q v27|q [118, 143[134 ShouldHaveRegister  "OneSpillStore"
  v29|q QWORD "[r13|q]" v29|q v11|q [132, 138[132 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v28|q [134, 140[134 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r14|q]" v31|q v8|d [136, 142[136 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q -1 [146, 147[146 MustHaveRegister  "NoDefinitionFound"
  v33|q QWORD "[rsi|q]" v33|q -1 [146, 147[146 MustHaveRegister  "NoDefinitionFound"
  v34|d DWORD "[rax|d]" v34|d v28|q [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q -1 [152, 153[152 MustHaveRegister  "NoDefinitionFound"
  v36|q QWORD "[rsi|q]" v36|q -1 [152, 153[152 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[r13|q]" v37|q v11|q [156, 288[[332, 360[[364, 368[[372, 376[[396, 407[[408, 419[158 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 258 MustHaveRegister 280 MustHaveRegister 287 LiveAtLoopEnd  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d -1 [158, 238[158 MustHaveRegister 160 MustHaveRegister 166 MustHaveRegister 216 ShouldHaveRegister 222 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rcx|d]" v39|d v8|d [164, 174[164 MustHaveRegister 166 ShouldHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rsi|d]" v40|d v7|d [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rsi|d]" v41|d v7|d [184, 186[184 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [202, 261[202 MustHaveRegister 208 ShouldHaveRegister 222 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q -1 [208, 214[208 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rcx|d]" v44|d -1 [210, 212[210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rcx|q]" v45|q v44|d [212, 214[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdx|q]" v46|q v43|q [214, 218[214 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q v38|d [216, 218[216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d -1 [246, 258[246 MustHaveRegister 248 ShouldHaveRegister 254 ShouldHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rdx|d]" v49|d -1 [248, 250[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v55|d [262, 284[[372, 376[[396, 407[264 ShouldHaveRegister 268 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r8|d]" v51|d v54|d [262, 282[[288, 291[[372, 376[[396, 407[280 MustHaveRegister 282 ShouldHaveRegister 290 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d -1 [268, 280[268 MustHaveRegister 270 ShouldHaveRegister 276 ShouldHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rsi|d]" v53|d -1 [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r8|d]" v54|d v51|d [282, 287[282 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r11|d]" v55|d v50|d [284, 287[284 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r8|d]" v56|d v51|d [292, 294[294 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[r9|d]" v57|d -1 [400, 402[402 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d -1 [412, 414[414 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[r8|q]" v59|q -1 [412, 416[416 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[r8|d]" v60|d -1 [388, 390[390 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r11|d]" v61|d -1 [424, 426[426 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r8|q]" v62|q -1 [424, 428[428 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[vstack:2|q]" v0|q v0|q [130, 139[ "OneSpillStore"
  v64|q QWORD "[vstack:1|q]" v1|q v1|q [130, 141[ "OneSpillStore"
  v65|d DWORD "[vstack:10|d]" v2|d v2|d [130, 143[ "OneSpillStore"
  v66|d DWORD "[vstack:9|d]" v3|d v3|d [130, 143[ "OneSpillStore"
  v67|d DWORD "[vstack:7|d]" v4|d v4|d [130, 143[ "OneSpillStore"
  v68|d DWORD "[vstack:6|d]" v7|d v7|d [130, 143[ "OneSpillStore"
  v69|d DWORD "[vstack:5|d]" v8|d v8|d [143, 168[160 ShouldHaveRegister 164 ShouldHaveRegister  "OneSpillStore"
  v70|d DWORD "[vstack:8|d]" v9|d v9|d [130, 143[ "OneSpillStore"
  v71|d DWORD "[rdi|d]" v16|d v16|d [320, 323[ "NoSpillStore"
  v72|q QWORD "[vstack:0|q]" v11|q v11|q [46, 132[[304, 328[132 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[vstack:4|q]" v28|q v28|q [143, 147[ "OneSpillStore"
  v74|q QWORD "[vstack:2|q]" v0|q v0|q [139, 143[ "OneSpillStore"
  v75|d DWORD "[vstack:6|d]" v7|d v7|d [143, 168[ "OneSpillStore"
  v76|d DWORD "[vstack:7|d]" v4|d v4|d [143, 182[ "OneSpillStore"
  v77|d DWORD "[vstack:8|d]" v9|d v9|d [143, 256[238 ShouldHaveRegister  "OneSpillStore"
  v78|d DWORD "[vstack:9|d]" v3|d v3|d [143, 240[ "OneSpillStore"
  v79|d DWORD "[vstack:10|d]" v2|d v2|d [143, 244[ "OneSpillStore"
  v80|q QWORD "[vstack:1|q]" v1|q v1|q [141, 288[[304, 395[[396, 407[[408, 419[[420, 424[ "OneSpillStore"
  v81|q QWORD "[vstack:2|q]" v0|q v0|q [143, 145[ "OneSpillStore"
  v82|q QWORD "[rdx|q]" v1|q v1|q [424, 431[ "OneSpillStore"
  v83|q QWORD "[r10|q]" v0|q v0|q [145, 296[[300, 395[[396, 407[[408, 419[[420, 431[146 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 294 MustHaveRegister 296 ShouldHaveRegister  "OneSpillStore"
  v84|q QWORD "[rbp|q]" v28|q v28|q [147, 155[148 MustHaveRegister 152 MustHaveRegister 154 ShouldHaveRegister  "OneSpillStore"
  v85|d DWORD "[r11|d]" v8|d v8|d [168, 202[[304, 328[[376, 380[[384, 395[172 MustHaveRegister 202 MustHaveRegister  "OneSpillStore"
  v86|d DWORD "[rbx|d]" v7|d v7|d [168, 288[[304, 328[[332, 360[[364, 368[[372, 380[[384, 395[[396, 407[[408, 419[170 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 180 ShouldHaveRegister 184 ShouldHaveRegister 204 ShouldHaveRegister 210 MustHaveRegister 264 MustHaveRegister 287 LiveAtLoopEnd  "OneSpillStore"
  v87|d DWORD "[r8|d]" v4|d v4|d [182, 234[[304, 328[186 MustHaveRegister 190 ShouldHaveRegister 234 MustHaveRegister  "OneSpillStore"
  v88|d DWORD "[rbp|d]" v9|d v9|d [256, 258[[300, 303[[304, 320[258 MustHaveRegister 302 ShouldHaveRegister  "OneSpillStore"
  v89|d DWORD "[r14|d]" v3|d v3|d [240, 242[[304, 328[242 MustHaveRegister  "OneSpillStore"
  v90|d DWORD "[rcx|d]" v2|d v2|d [244, 288[[304, 320[246 MustHaveRegister 268 MustHaveRegister 287 LiveAtLoopEnd  "OneSpillStore"
  v91|d DWORD "[rsi|d]" v2|d v2|d [320, 328[ "OneSpillStore"
  v92|d DWORD "[rdx|d]" v9|d v9|d [320, 328[[332, 360[[364, 368[[408, 419[ "OneSpillStore"
  v93|d DWORD "[r13|d]" v16|d v16|d [323, 328[ "NoSpillStore"
  v94|q QWORD "[vstack:2|q]" v94|q -1 [1, 2[ "NoDefinitionFound"
  v95|d DWORD "[vstack:8|d]" v95|d -1 [1, 2[ "NoDefinitionFound"
  v96|q QWORD "[vstack:2|q]" v96|q -1 [1, 2[ "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   32  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   50  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   54  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   60  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   66  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   82  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   86  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr   96  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  118  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = STACKMOVE (input: v65|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = STACKMOVE (input: v70|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = STACKMOVE (input: v67|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = STACKMOVE (input: v74|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v73|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  150  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr  152  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  170  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  174  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  210  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr  212  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: v78|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v79|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v42|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  262  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  270  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr  282  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  292  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  314  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOVE input: v90|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v88|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v95|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: v93|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v92|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOVE input: v91|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v96|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  400  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  412  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  424  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   32  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   50  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   54  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   60  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   66  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   82  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   86  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = STACKMOVE (input: v65|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = STACKMOVE (input: v70|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = STACKMOVE (input: v67|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = STACKMOVE (input: v74|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v73|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  150  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr  152  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  170  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  174  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  210  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr  212  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: v78|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v79|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v42|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  270  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr  282  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  314  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOVE input: v90|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v88|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v95|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: v93|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v92|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOVE input: v91|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v96|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   50  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   54  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   60  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   64  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   66  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   82  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   86  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction r13|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  150  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  152  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = INC value: vstack:5|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  170  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD[_] = MOVE input: vstack:10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  282  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  310  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] vstack:1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] vstack:1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   32  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   50  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   54  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   60  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   64  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   66  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr   82  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   86  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction r13|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  150  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  152  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = INC value: vstack:5|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  170  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  174  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  204  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD[_] = MOVE input: vstack:10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  282  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  310  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] vstack:1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] vstack:1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  390  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction vstack:8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction vstack:9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction vstack:10|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction vstack:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   64  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   68  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   70  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction vstack:8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction vstack:9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction vstack:10|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r13|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction vstack:4|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: vstack:5|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rcx|DWORD[_] = MOVE input: vstack:10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  502  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] vstack:1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] vstack:1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  580  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  538  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  540  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr  456  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  548  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr  550  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  570  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  228  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  588  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  590  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  214  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  606  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr  616  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  374  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [50, 262[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [80, 628[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [168, 280[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [276, 284[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [274, 616[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [250, 618[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [252, 360[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [106, 590[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [254, 436[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[vstack:10|d]" vstack:10|d -1 [256, 442[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:56|q]" vstack:0|q -1 [50, 262[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:64|q]" vstack:1|q -1 [80, 628[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:72|q]" vstack:2|q -1 [168, 280[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:56|q]" vstack:4|q -1 [276, 284[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:44|d]" vstack:5|d -1 [274, 616[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:32|d]" vstack:6|d -1 [250, 618[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:36|d]" vstack:7|d -1 [252, 360[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:28|d]" vstack:8|d -1 [106, 590[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:40|d]" vstack:9|d -1 [254, 436[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[stack:76|d]" vstack:10|d -1 [256, 442[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   64  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   68  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   70  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r13|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction stack:56|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  502  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  580  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  538  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  540  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr  456  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  548  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr  550  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  570  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  228  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  588  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  590  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  214  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  606  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr  616  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  374  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   64  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   68  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   70  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r13|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction stack:56|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  502  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  580  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  538  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  540  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr  456  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  548  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr  550  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  570  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] <|@ <|@
      nr  560  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  228  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  588  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  590  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  214  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  606  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr  616  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  374  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   64  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   68  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   70  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r13|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction stack:56|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  502  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  538  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  548  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  588  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  374  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   64  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   68  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   70  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r13|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction stack:56|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  502  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  538  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  548  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  588  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  374  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   64  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   68  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   70  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r13|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction stack:56|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  502  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  538  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  548  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  588  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  374  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   64  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   68  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   70  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r13|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction stack:56|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B36" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B36 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B36 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  502  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B44" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  538  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  548  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  588  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  374  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B36" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B36 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B36 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  502  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B44" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   64  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   68  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   70  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r13|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction stack:56|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  588  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  374  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  548  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  538  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B36" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B36 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B36 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  502  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B44" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   64  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   68  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   70  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r13|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction stack:56|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  588  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  374  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  548  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  538  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B36" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B36 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B36 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  502  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B44" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   64  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   68  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   70  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r13|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction stack:56|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  588  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  374  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  548  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  538  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r10:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B36" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B36 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B36 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  502  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B44" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   64  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   68  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   70  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r13|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction stack:56|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:32, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, stack:32, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  588  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:32]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:32]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  374  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  548  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@reference-map: [r10:0, stack:32]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  538  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r10:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605937521342045076
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  336  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B36" "B33" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B36 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B56" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B36 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606784671435784931
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4626247801556813181
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  502  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4626516846928391572
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B44" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  514  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602281071808414435
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   64  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr   68  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr   70  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3 <|@ <|@
      nr  126  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594048516284770155
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623739135295840243
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623815393045750161
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594097814224105859
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594147610122424752
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r13|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction stack:56|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4586524778863514064
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564016697883760298
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:32, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, stack:32, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:64|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563952959133912114
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  588  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:32]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:32]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  374  <|@ instruction r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4] <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  548  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614] <|@ <|@
      nr   46  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  616  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  628  <|@ st <@st|@reference-map: [r10:0, stack:32]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:64|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  538  <|@ instruction r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE input: long[3224|0xc98] <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000738a7f00004d03d44d33e4493bc20f85e3ffffff89842400c0feff4883ec5841817f20000000000f85fc05000048896c2450448b5214440fbe5a10468b04d50c0000008b7e10448b0cfd0c000000418bcb418bd8d3eb9081fb000001000f83c10400008b4e0c8d41028be803eb448bef49c1e503666690413be90f8f9201000089442444894c2434895c2440448944243c44895c2438448954241448895424204c8bd6418b450c3b4424340f86130500008b4c2434ffc13bc10f8633050000448b5c24348b5c24408bf3c1ee084388741d1041885c0d1085db0f841703000083fb020f8220010000448b44243c8bf3ffce660f1f440000443bc60f86960300004183f8020f8229040000418d730383fb020f821c0000004863d68d4bfe4803d18bc8483bca0f86750400003bc60f86d90400000f1f40004585c00f843c0400003b4424440f861c040000448b7424380f1f8400000000004585f60f85e50300008b4c24140fbe04cd100000000fbed00f1f840000000000f7c2ff0000000f844103000080f8800f836e0400008b6c24444188442d10448bc641bb01000000e93d0000006666660f1f840000000000666666900f1f440000410fbe44cb100fbef0f7c6ff0000000f845204000080f8800f83fe020000438844051041ffc041ffc3413bdb7fd24589420c498bc2488b6c24504883c4586690493ba7500400000f8739040000c5f877c3448b44243ce9f8feffff0f1f440000413bc90f8f370300004c896c2428498bafb80100008bfb03f98d7f02458bf141d1e6443bf7410f4ffe448bf74d8d76174983e6f84d8bee4c03ed660f1f4400004d3bafc80100000f879c0100004d89afb8010000410f0d8c2ec0000000410f0d8c2e00010000410f0d8c2e40010000410f0d8c2e8001000048c7450001000000c74508addeadde897d0c4d8d6ef04981fd000800000f839d01000049c7c510000000e9260000006666660f1f8400000000006666669066660f1f8400000000004ac7442d00000000004d8d6d084d3bf577ee85c90f8cc1020000660f1f440000413bc90f878e0200003bcf0f87f001000089442444895c2440448944243c44895c24384489542414488954242048897424184c8b6c24284c8bcd448bf1498d7d10498d7110498bd6894c243448896c2428e8000000004c8b54241841807f40000f842f000000418b721048c1e6034885f60f841e000000498b47284883f800900f84d40200004883e8084989472849034738488930488b6c2428488bc548c1e80341894210498bc24833c548c1e8150f8442000000498bc248c1e80948be0030c0dd8a7f00004803c68038027429f083042400803800741fc60000498b77484885f60f84830200004883ee0849897748490377584889064c8bede9adfcffff448b442444e9e5fdffff8be8458bf34889542420448bd9418bca4c8bd648beaddeaddeaddeadde8bd7e8000000000f1f8400000000008500488b542420498bf2448bd1418bcb458bde896c2444488be88b442444e99afeffff458bf348895424208bd0448bd94889742418418bf24c8b542418498bcd448bef488d7d104833c0f348aa418bfd8bc2418bcb458bde488b542420448bd6488b742418e953feffff49c7c0980c000041bbe4edfeff8b54244445899f840400004d8987900400006690e8000000000f1f84000000000049c7c09402000041bbed67feffebd041b9ed5bfeff45898f8404000049c7879004000094020000e8000000000f1f84000000000049c7c00000000041bbe74afeff4c8bd645899f840400004d89879004000090e8000000000f1f84000000000049c7c01400000041bbed6ffeffebd249c7c0980c000041bbe4edfeffe95effffff49c7c0140a000041bbed6bfeffe94cffffff49c7c01405000041bb1456feffeb9f49c7c00000000041bbe5f5feff0f1f4000e927ffffff49c7c00000000041bbe402ffffe915ffffff49c7c00000000041bbe74efeffe965ffffff49c7c0980c000041bbe5e0feffe9f1feffff49c7c00000000041bbe752feffe941ffffff41b8e514ffff448b5c24348b5c24404589878404000049c7879004000000000000e8000000000f1f84000000000041b8e50affffebd049c7c09402000041bbed63feffe997feffff49c7c0980c000041bbe5e0feffe985feffff41b9ed5ffeffe9b0feffff48896c2450e8000000000f1f4000e9f1f9fffff4488d0db3fbffff49898f68040000e9a7f9fffff4488934246690e800000000e92bfdfffff448890424e800000000e97efdfffff441c78784040000f54fffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f549ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f53affff49c7879004000000000000e8000000000f1f84000000000041c787840400008fb6fdff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD  <||@
  Comment 59 6 r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 59 [rdx:0, rsi:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 8 r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 68 10 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 68 [rdx:0, rsi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 12 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 79 14 r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 79 [rdx:0, rsi:0, rdi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 16 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 90 18 rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 95 20 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null  <||@
  Comment 108 block B1 null  <||@
  Comment 108 22 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 108 24 rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 111 26 rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD  <||@
  Comment 114 28 rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 118 30 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3  <||@
  Comment 125 32 CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD  <||@
  Comment 137 block B20 null  <||@
  Comment 137 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 137 298 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 141 300 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 145 302 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 149 304 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 154 306 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 159 308 stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 164 310 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 169 312 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 172 314 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 172 block B21 null  <||@
  Comment 172 316 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 172 318 rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 176 320 CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD  <||@
  Comment 186 block B22 null  <||@
  Comment 186 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 186 324 rcx|DWORD = INC value: stack:44|DWORD size: DWORD  <||@
  Comment 192 326 CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD  <||@
  Comment 200 block B23 null  <||@
  Comment 200 328 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 200 330 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 205 332 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 209 334 rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD  <||@
  Comment 214 336 MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE  <||@
  Comment 219 338 MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE  <||@
  Comment 224 340 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 232 block B25 null  <||@
  Comment 232 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 232 350 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null  <||@
  Comment 241 block B27 null  <||@
  Comment 241 358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 241 360 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 246 362 rsi|DWORD = DEC value: rbx|DWORD size: DWORD  <||@
  Comment 250 364 CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD  <||@
  Comment 265 block B28 null  <||@
  Comment 265 366 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 265 368 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B31 y: 2 size: DWORD inlinedY: null  <||@
  Comment 275 block B31 null  <||@
  Comment 275 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 275 386 rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD  <||@
  Comment 279 388 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B36 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null  <||@
  Comment 288 block B33 null  <||@
  Comment 288 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 288 396 rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD  <||@
  Comment 291 398 rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD  <||@
  Comment 294 400 rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 294 402 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 297 404 rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 299 406 CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD  <||@
  Comment 308 block B34 null  <||@
  Comment 308 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 308 410 CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B36 falseDestination: B34 -> B56 size: DWORD  <||@
  Comment 316 block B36 null  <||@
  Comment 316 416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 418 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 329 block B38 null  <||@
  Comment 329 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 329 432 CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD  <||@
  Comment 339 block B39 null  <||@
  Comment 339 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 339 436 r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 344 438 TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD  <||@
  Comment 361 block B40 null  <||@
  Comment 361 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 361 442 rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 365 444 rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 373 446 rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD  <||@
  Comment 376 448 TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD  <||@
  Comment 396 block B42 null  <||@
  Comment 396 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 396 462 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null  <||@
  Comment 405 block B43 null  <||@
  Comment 405 464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 405 466 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 409 468 MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 414 470 r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 417 472 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 423 474 JUMP ~outgoingValues: [] destination: B43 -> B44  <||@
  Comment 428 block B45 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 428 480 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 448 482 rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 454 484 rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD  <||@
  Comment 457 486 TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD  <||@
  Comment 469 block B47 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 469 494 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 469 496 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null  <||@
  Comment 478 block B48 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 478 498 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 478 500 MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 483 502 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 486 504 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 489 506 JUMP ~outgoingValues: [] destination: B48 -> B44  <||@
  Comment 489 block B44 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 489 476 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 489 478 CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50 size: DWORD  <||@
  Comment 494 block B50 null  <||@
  Comment 494 512 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 494 514 MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 498 516 rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 501 518 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 512 POLL_RETURN_FAR  <||@
  Comment 529 block B26 null  <||@
  Comment 529 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 529 354 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 534 356 JUMP ~outgoingValues: [] destination: B26 -> B31  <||@
  Comment 539 block B2 null  <||@
  Comment 539 34 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 539 36 CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 553 block B4 null  <||@
  Comment 553 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 553 50 stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 558 52 rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 565 54 rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 569 56 rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD  <||@
  Comment 572 58 r14|DWORD = SHL value: r9|DWORD size: DWORD  <||@
  Comment 578 60 CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 581 62 rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 585 64 r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 588 66 r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD  <||@
  Comment 592 68 r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD  <||@
  Comment 596 70 r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 602 72 CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 621 block B6 null  <||@
  Comment 621 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 621 116 MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD  <||@
  Comment 628 118 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3  <||@
  Comment 637 120 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3  <||@
  Comment 646 122 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3  <||@
  Comment 655 124 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3  <||@
  Comment 664 126 MOV x: [rbp|QWORD] y: 1 size: QWORD  <||@
  Comment 672 128 MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 672 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 679 130 MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 682 132 r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD  <||@
  Comment 686 134 CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 699 block B7 null  <||@
  Comment 699 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 699 138 r13|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 706 140 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 711 block B9 loop 0 depth 1 header:541|LoopBegin  <||@
  Comment 711 146 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 148 MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 745 150 r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD  <||@
  Comment 749 152 JUMP ~outgoingValues: [] destination: B9 -> B8  <||@
  Comment 749 block B8 loop 0 depth 1 header:541|LoopBegin  <||@
  Comment 749 142 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 749 144 CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD  <||@
  Comment 754 block B12 null  <||@
  Comment 754 198 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 754 200 rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 754 202 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 754 block B13 null  <||@
  Comment 754 204 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 754 206 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 762 block B15 null  <||@
  Comment 762 218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 762 220 CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 777 block B17 null  <||@
  Comment 777 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 777 234 CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 785 block B19 null  <||@
  Comment 785 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 785 248 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 789 250 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 793 252 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 798 254 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 803 256 stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 808 258 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 813 260 stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 818 262 r13|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 823 264 r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 826 266 r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 829 268 rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 833 270 rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 837 272 rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD  <||@
  Comment 840 274 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 844 276 stack:56|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 849 278 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 849 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f8ae41fa4b8, value=140234155306304]:0x7f8acf032d40}  <||@
  Comment 854 280 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 859 282 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622  <||@
  Comment 917 284 rbp|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 922 286 rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3  <||@
  Comment 929 288 MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 933 290 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622  <||@
  Comment 1015 292 r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1018 294 JUMP ~outgoingValues: [] destination: B19 -> B21  <||@
  Comment 1023 block B24 null  <||@
  Comment 1023 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1023 344 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1028 346 JUMP ~outgoingValues: [] destination: B24 -> B50  <||@
  Comment 1033 block B5 null  <||@
  Comment 1033 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1033 76 rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1035 78 r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1038 80 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1043 82 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1046 84 rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 1049 86 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1052 88 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1052 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1062 90 rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1064 92 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1064 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1069 [rcx:0, r10:0, stack:32, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:64|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1077 94 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1077 [rax:0, rcx:0, r10:0, stack:32, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:64|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1077 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1079 96 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1084 98 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1087 100 r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD  <||@
  Comment 1090 102 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1093 104 r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1096 106 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1100 108 rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1103 110 rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1107 112 JUMP ~outgoingValues: [] destination: B5 -> B13  <||@
  Comment 1112 block B11 null  <||@
  Comment 1112 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1112 160 r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1115 162 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1120 164 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1122 166 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1125 168 stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 170 rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 1133 172 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1138 174 rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD  <||@
  Comment 1141 176 r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1144 178 ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1154 180 rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1157 182 rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1159 184 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1162 186 r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1165 188 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1170 192 r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD  <||@
  Comment 1173 194 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1178 196 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 1183 block B58 null  <||@
  Comment 1183 584 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1183 586 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 1190 588 r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4]  <||@
  Comment 1196 592 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 1196 block B59 null  <||@
  Comment 1196 594 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1196 426 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1200 596 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1207 598 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1214 600 DEOPT info [bci:73]  <||@
  Comment 1216 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1221 [r10:0, r13:0, stack:32]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73, duringCall: false, rethrow: false]
              |0             |1                  |2          |3          |4             |5  |6 
     locals:  |r10|QWORD[.]  |stack:64|QWORD[.]  |rbx|DWORD  |rdx|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 1229 block B41 null  <||@
  Comment 1229 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1229 452 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1236 454 r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed]  <||@
  Comment 1242 458 JUMP ~outgoingValues: [] destination: B41 -> B59  <||@
  Comment 1244 block B51 null  <||@
  Comment 1244 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1244 522 r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed]  <||@
  Comment 1250 524 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 1250 block B52 null  <||@
  Comment 1250 526 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1250 528 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 1257 530 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1268 532 DEOPT info [bci:76]  <||@
  Comment 1268 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1273 [r10:0, r13:0, stack:32]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76, duringCall: false, rethrow: false]
              |0             |1                  |2          |3         |4             |5          |6 
     locals:  |r10|QWORD[.]  |stack:64|QWORD[.]  |rbx|DWORD  |r8|DWORD  |r13|QWORD[.]  |r11|DWORD  |-   <||@
  Comment 1281 block B18 null  <||@
  Comment 1281 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1281 238 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1288 240 r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7]  <||@
  Comment 1294 244 JUMP ~outgoingValues: [] destination: B18 -> B64  <||@
  Comment 1294 block B64 null  <||@
  Comment 1294 640 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1294 44 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1297 642 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1304 644 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1311 646 DEOPT info [bci:0]  <||@
  Comment 1312 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1317 [rdx:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1325 block B63 null  <||@
  Comment 1325 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1325 632 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1332 634 r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed]  <||@
  Comment 1338 638 JUMP ~outgoingValues: [] destination: B63 -> B64  <||@
  Comment 1340 block B29 null  <||@
  Comment 1340 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1340 372 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 1347 374 r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4]  <||@
  Comment 1353 378 JUMP ~outgoingValues: [] destination: B29 -> B59  <||@
  Comment 1358 block B54 null  <||@
  Comment 1358 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1358 546 r8|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 1365 548 r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed]  <||@
  Comment 1371 552 JUMP ~outgoingValues: [] destination: B54 -> B59  <||@
  Comment 1376 block B3 null  <||@
  Comment 1376 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1376 40 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1383 42 r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614]  <||@
  Comment 1389 46 JUMP ~outgoingValues: [] destination: B3 -> B64  <||@
  Comment 1391 block B55 null  <||@
  Comment 1391 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1391 556 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1398 558 r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5]  <||@
  Comment 1404 562 JUMP ~outgoingValues: [] destination: B55 -> B59  <||@
  Comment 1413 block B37 null  <||@
  Comment 1413 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1413 422 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1420 424 r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4]  <||@
  Comment 1426 428 JUMP ~outgoingValues: [] destination: B37 -> B59  <||@
  Comment 1431 block B16 null  <||@
  Comment 1431 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1431 224 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1438 226 r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7]  <||@
  Comment 1444 230 JUMP ~outgoingValues: [] destination: B16 -> B64  <||@
  Comment 1449 block B57 null  <||@
  Comment 1449 574 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1449 576 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 1456 578 r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5]  <||@
  Comment 1462 582 JUMP ~outgoingValues: [] destination: B57 -> B59  <||@
  Comment 1467 block B14 null  <||@
  Comment 1467 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1467 210 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1474 212 r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7]  <||@
  Comment 1480 216 JUMP ~outgoingValues: [] destination: B14 -> B64  <||@
  Comment 1485 block B61 null  <||@
  Comment 1485 612 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1485 614 r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5]  <||@
  Comment 1491 620 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1491 block B62 null  <||@
  Comment 1491 622 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1491 616 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1496 618 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1500 624 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 1507 626 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1518 628 DEOPT info [bci:46]  <||@
  Comment 1518 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1523 [r10:0, stack:32]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46, duringCall: false, rethrow: false]
              |0             |1                  |2          |3          |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:64|QWORD[.]  |rbx|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 1531 block B60 null  <||@
  Comment 1531 602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1531 604 r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5]  <||@
  Comment 1537 610 JUMP ~outgoingValues: [] destination: B60 -> B62  <||@
  Comment 1539 block B53 null  <||@
  Comment 1539 534 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1539 536 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1546 538 r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed]  <||@
  Comment 1552 542 JUMP ~outgoingValues: [] destination: B53 -> B59  <||@
  Comment 1557 block B56 null  <||@
  Comment 1557 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1557 566 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 1564 568 r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5]  <||@
  Comment 1570 572 JUMP ~outgoingValues: [] destination: B56 -> B59  <||@
  Comment 1575 block B46 null  <||@
  Comment 1575 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1575 490 r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed]  <||@
  Comment 1581 492 JUMP ~outgoingValues: [] destination: B46 -> B52  <||@
  Comment 1591 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 1620 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 1632 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1647 {Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1680 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1685 [rdx:0, rsi:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1715 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1720 [rdx:0, rsi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1755 [rdx:0, rsi:0, rdi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1785 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1790 [rax:0, rcx:0, r10:0, stack:32, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:64|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1798 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1798 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1804 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 1804 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-119[jdk.internal.org.objectweb.asm.ByteVector.putUTF8(String)]"
  method "HotSpotCompilation-119[jdk.internal.org.objectweb.asm.ByteVector.putUTF8(String)]"
  date 1740398978925
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0cff20 448b560849bc000000738a7f00004d03d44d33e4493bc20f8543e1f7ff89842400c0feff4883ec5841817f20000000000f85fc05000048896c2450448b5214440fbe5a10468b04d50c0000008b7e10448b0cfd0c000000418bcb418bd8d3eb9081fb000001000f83c10400008b4e0c8d41028be803eb448bef49c1e503666690413be90f8f9201000089442444894c2434895c2440448944243c44895c2438448954241448895424204c8bd6418b450c3b4424340f86130500008b4c2434ffc13bc10f8633050000448b5c24348b5c24408bf3c1ee084388741d1041885c0d1085db0f841703000083fb020f8220010000448b44243c8bf3ffce660f1f440000443bc60f86960300004183f8020f8229040000418d730383fb020f821c0000004863d68d4bfe4803d18bc8483bca0f86750400003bc60f86d90400000f1f40004585c00f843c0400003b4424440f861c040000448b7424380f1f8400000000004585f60f85e50300008b4c24140fbe04cd100000000fbed00f1f840000000000f7c2ff0000000f844103000080f8800f836e0400008b6c24444188442d10448bc641bb01000000e93d0000006666660f1f840000000000666666900f1f440000410fbe44cb100fbef0f7c6ff0000000f845204000080f8800f83fe020000438844051041ffc041ffc3413bdb7fd24589420c498bc2488b6c24504883c4586690493ba7500400000f8739040000c5f877c3448b44243ce9f8feffff0f1f440000413bc90f8f370300004c896c2428498bafb80100008bfb03f98d7f02458bf141d1e6443bf7410f4ffe448bf74d8d76174983e6f84d8bee4c03ed660f1f4400004d3bafc80100000f879c0100004d89afb8010000410f0d8c2ec0000000410f0d8c2e00010000410f0d8c2e40010000410f0d8c2e8001000048c7450001000000c74508c0220000897d0c4d8d6ef04981fd000800000f839d01000049c7c510000000e9260000006666660f1f8400000000006666669066660f1f8400000000004ac7442d00000000004d8d6d084d3bf577ee85c90f8cc1020000660f1f440000413bc90f878e0200003bcf0f87f001000089442444895c2440448944243c44895c24384489542414488954242048897424184c8b6c24284c8bcd448bf1498d7d10498d7110498bd6894c243448896c2428e8ca2af6ff4c8b54241841807f40000f842f000000418b721048c1e6034885f60f841e000000498b47284883f800900f84d40200004883e8084989472849034738488930488b6c2428488bc548c1e80341894210498bc24833c548c1e8150f8442000000498bc248c1e80948be0030c0dd8a7f00004803c68038027429f083042400803800741fc60000498b77484885f60f84830200004883ee0849897748490377584889064c8bede9adfcffff448b442444e9e5fdffff8be8458bf34889542420448bd9418bca4c8bd648bec02200738a7f00008bd7e833efffff0f1f8400000000008500488b542420498bf2448bd1418bcb458bde896c2444488be88b442444e99afeffff458bf348895424208bd0448bd94889742418418bf24c8b542418498bcd448bef488d7d104833c0f348aa418bfd8bc2418bcb458bde488b542420448bd6488b742418e953feffff49c7c0980c000041bbe4edfeff8b54244445899f840400004d8987900400006690e8953df8ff0f1f84000000000049c7c09402000041bbed67feffebd041b9ed5bfeff45898f8404000049c7879004000094020000e8613df8ff0f1f84000000000049c7c00000000041bbe74afeff4c8bd645899f840400004d89879004000090e8353df8ff0f1f84000000000049c7c01400000041bbed6ffeffebd249c7c0980c000041bbe4edfeffe95effffff49c7c0140a000041bbed6bfeffe94cffffff49c7c01405000041bb1456feffeb9f49c7c00000000041bbe5f5feff0f1f4000e927ffffff49c7c00000000041bbe402ffffe915ffffff49c7c00000000041bbe74efeffe965ffffff49c7c0980c000041bbe5e0feffe9f1feffff49c7c00000000041bbe752feffe941ffffff41b8e514ffff448b5c24348b5c24404589878404000049c7879004000000000000e8673cf8ff0f1f84000000000041b8e50affffebd049c7c09402000041bbed63feffe997feffff49c7c0980c000041bbe5e0feffe985feffff41b9ed5ffeffe9b0feffff48896c2450e8c43cf6ff0f1f4000e9f1f9fffff4488d0db3fbffff49898f68040000e9874af8fff4488934246690e8fbd8feffe92bfdfffff448890424e86cf4feffe97efdfffff441c78784040000f54fffff49c7879004000000000000e8c53bf8ff0f1f84000000000041c78784040000f549ffff49c7879004000000000000e8a23bf8ff0f1f84000000000041c78784040000f53affff49c7879004000000000000e87f3bf8ff0f1f84000000000041c787840400008fb6fdff49c7879004000000000000e85c3bf8ff0f1f840000000000e8d53efefff4e8ef38f8fff4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@309e6c8 slotKind: QWORD  <||@
  Comment 59 6 r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 59 [rdx:0, rsi:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 8 r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 68 10 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 68 [rdx:0, rsi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 12 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 79 14 r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 79 [rdx:0, rsi:0, rdi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 16 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 90 18 rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 95 20 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null  <||@
  Comment 108 block B1 null  <||@
  Comment 108 22 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 108 24 rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 111 26 rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD  <||@
  Comment 114 28 rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 118 30 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3  <||@
  Comment 125 32 CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.1382113821138211 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD  <||@
  Comment 137 block B20 null  <||@
  Comment 137 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 137 298 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 141 300 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 145 302 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 149 304 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 154 306 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 159 308 stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 164 310 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 169 312 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 172 314 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 172 block B21 null  <||@
  Comment 172 316 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 172 318 rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 176 320 CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD  <||@
  Comment 186 block B22 null  <||@
  Comment 186 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 186 324 rcx|DWORD = INC value: stack:44|DWORD size: DWORD  <||@
  Comment 192 326 CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD  <||@
  Comment 200 block B23 null  <||@
  Comment 200 328 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 200 330 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 205 332 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 209 334 rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD  <||@
  Comment 214 336 MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE  <||@
  Comment 219 338 MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE  <||@
  Comment 224 340 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.04415882817548644 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 232 block B25 null  <||@
  Comment 232 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 232 350 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null  <||@
  Comment 241 block B27 null  <||@
  Comment 241 358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 241 360 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 246 362 rsi|DWORD = DEC value: rbx|DWORD size: DWORD  <||@
  Comment 250 364 CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD  <||@
  Comment 265 block B28 null  <||@
  Comment 265 366 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 265 368 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B31 y: 2 size: DWORD inlinedY: null  <||@
  Comment 275 block B31 null  <||@
  Comment 275 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 275 386 rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD  <||@
  Comment 279 388 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B36 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null  <||@
  Comment 288 block B33 null  <||@
  Comment 288 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 288 396 rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD  <||@
  Comment 291 398 rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD  <||@
  Comment 294 400 rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 294 402 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 297 404 rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 299 406 CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD  <||@
  Comment 308 block B34 null  <||@
  Comment 308 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 308 410 CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B36 falseDestination: B34 -> B56 size: DWORD  <||@
  Comment 316 block B36 null  <||@
  Comment 316 416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 418 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 329 block B38 null  <||@
  Comment 329 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 329 432 CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD  <||@
  Comment 339 block B39 null  <||@
  Comment 339 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 339 436 r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 344 438 TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD  <||@
  Comment 361 block B40 null  <||@
  Comment 361 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 361 442 rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 365 444 rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 373 446 rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD  <||@
  Comment 376 448 TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD  <||@
  Comment 396 block B42 null  <||@
  Comment 396 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 396 462 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null  <||@
  Comment 405 block B43 null  <||@
  Comment 405 464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 405 466 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 409 468 MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 414 470 r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 417 472 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 423 474 JUMP ~outgoingValues: [] destination: B43 -> B44  <||@
  Comment 428 block B45 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 428 480 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 448 482 rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 454 484 rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD  <||@
  Comment 457 486 TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD  <||@
  Comment 469 block B47 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 469 494 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 469 496 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null  <||@
  Comment 478 block B48 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 478 498 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 478 500 MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 483 502 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 486 504 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 489 506 JUMP ~outgoingValues: [] destination: B48 -> B44  <||@
  Comment 489 block B44 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 489 476 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 489 478 CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9538010817307693 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50 size: DWORD  <||@
  Comment 494 block B50 null  <||@
  Comment 494 512 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 494 514 MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 498 516 rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 501 518 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 512 POLL_RETURN_FAR  <||@
  Comment 529 block B26 null  <||@
  Comment 529 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 529 354 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 534 356 JUMP ~outgoingValues: [] destination: B26 -> B31  <||@
  Comment 539 block B2 null  <||@
  Comment 539 34 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 539 36 CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 553 block B4 null  <||@
  Comment 553 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 553 50 stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 558 52 rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 565 54 rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 569 56 rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD  <||@
  Comment 572 58 r14|DWORD = SHL value: r9|DWORD size: DWORD  <||@
  Comment 578 60 CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 581 62 rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 585 64 r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 588 66 r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD  <||@
  Comment 592 68 r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD  <||@
  Comment 596 70 r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 602 72 CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 621 block B6 null  <||@
  Comment 621 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 621 116 MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD  <||@
  Comment 628 118 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 192] instr: 3  <||@
  Comment 637 120 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 3  <||@
  Comment 646 122 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 3  <||@
  Comment 655 124 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 3  <||@
  Comment 664 126 MOV x: [rbp|QWORD] y: 1 size: QWORD  <||@
  Comment 672 128 MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 672 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 679 130 MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 682 132 r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD  <||@
  Comment 686 134 CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 699 block B7 null  <||@
  Comment 699 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 699 138 r13|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 706 140 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 711 block B9 loop 0 depth 1 header:541|LoopBegin  <||@
  Comment 711 146 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 148 MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 745 150 r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD  <||@
  Comment 749 152 JUMP ~outgoingValues: [] destination: B9 -> B8  <||@
  Comment 749 block B8 loop 0 depth 1 header:541|LoopBegin  <||@
  Comment 749 142 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 749 144 CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD  <||@
  Comment 754 block B12 null  <||@
  Comment 754 198 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 754 200 rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 754 202 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 754 block B13 null  <||@
  Comment 754 204 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 754 206 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 762 block B15 null  <||@
  Comment 762 218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 762 220 CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 777 block B17 null  <||@
  Comment 777 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 777 234 CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 785 block B19 null  <||@
  Comment 785 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 785 248 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 789 250 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 793 252 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 798 254 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 803 256 stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 808 258 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 813 260 stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 818 262 r13|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 823 264 r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 826 266 r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 829 268 rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 833 270 rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 837 272 rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD  <||@
  Comment 840 274 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 844 276 stack:56|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 849 278 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f8acf032d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 849 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f8ae41fa4b8, value=140234155306304]:0x7f8acf032d40}  <||@
  Comment 854 280 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 859 282 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622  <||@
  Comment 917 284 rbp|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 922 286 rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@23f230ad encoding: base: 0 shift: 3  <||@
  Comment 929 288 MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 933 290 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@52239622  <||@
  Comment 1015 292 r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1018 294 JUMP ~outgoingValues: [] destination: B19 -> B21  <||@
  Comment 1023 block B24 null  <||@
  Comment 1023 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1023 344 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1028 346 JUMP ~outgoingValues: [] destination: B24 -> B50  <||@
  Comment 1033 block B5 null  <||@
  Comment 1033 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1033 76 rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1035 78 r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1038 80 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1043 82 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1046 84 rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 1049 86 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1052 88 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1052 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1062 90 rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1064 92 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1064 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f8acf0cf280:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1069 [rcx:0, r10:0, stack:32, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:64|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1077 94 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1077 [rax:0, rcx:0, r10:0, stack:32, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:64|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1077 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1079 96 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1084 98 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1087 100 r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD  <||@
  Comment 1090 102 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1093 104 r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1096 106 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1100 108 rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1103 110 rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1107 112 JUMP ~outgoingValues: [] destination: B5 -> B13  <||@
  Comment 1112 block B11 null  <||@
  Comment 1112 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1112 160 r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1115 162 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1120 164 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1122 166 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1125 168 stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 170 rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 1133 172 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1138 174 rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD  <||@
  Comment 1141 176 r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1144 178 ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1154 180 rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1157 182 rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1159 184 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1162 186 r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1165 188 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1170 192 r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD  <||@
  Comment 1173 194 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1178 196 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 1183 block B58 null  <||@
  Comment 1183 584 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1183 586 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 1190 588 r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4]  <||@
  Comment 1196 592 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 1196 block B59 null  <||@
  Comment 1196 594 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1196 426 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1200 596 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1207 598 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1214 600 DEOPT info [bci:73]  <||@
  Comment 1216 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1221 [r10:0, r13:0, stack:32]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73, duringCall: false, rethrow: false]
              |0             |1                  |2          |3          |4             |5  |6 
     locals:  |r10|QWORD[.]  |stack:64|QWORD[.]  |rbx|DWORD  |rdx|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 1229 block B41 null  <||@
  Comment 1229 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1229 452 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1236 454 r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed]  <||@
  Comment 1242 458 JUMP ~outgoingValues: [] destination: B41 -> B59  <||@
  Comment 1244 block B51 null  <||@
  Comment 1244 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1244 522 r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed]  <||@
  Comment 1250 524 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 1250 block B52 null  <||@
  Comment 1250 526 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1250 528 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 1257 530 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1268 532 DEOPT info [bci:76]  <||@
  Comment 1268 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1273 [r10:0, r13:0, stack:32]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76, duringCall: false, rethrow: false]
              |0             |1                  |2          |3         |4             |5          |6 
     locals:  |r10|QWORD[.]  |stack:64|QWORD[.]  |rbx|DWORD  |r8|DWORD  |r13|QWORD[.]  |r11|DWORD  |-   <||@
  Comment 1281 block B18 null  <||@
  Comment 1281 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1281 238 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1288 240 r11|DWORD = MOVE input: int[-111897|0xfffffffffffe4ae7]  <||@
  Comment 1294 244 JUMP ~outgoingValues: [] destination: B18 -> B64  <||@
  Comment 1294 block B64 null  <||@
  Comment 1294 640 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1294 44 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1297 642 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1304 644 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1311 646 DEOPT info [bci:0]  <||@
  Comment 1312 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1317 [rdx:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1325 block B63 null  <||@
  Comment 1325 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1325 632 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1332 634 r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed]  <||@
  Comment 1338 638 JUMP ~outgoingValues: [] destination: B63 -> B64  <||@
  Comment 1340 block B29 null  <||@
  Comment 1340 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1340 372 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 1347 374 r11|DWORD = MOVE input: int[-70172|0xfffffffffffeede4]  <||@
  Comment 1353 378 JUMP ~outgoingValues: [] destination: B29 -> B59  <||@
  Comment 1358 block B54 null  <||@
  Comment 1358 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1358 546 r8|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 1365 548 r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed]  <||@
  Comment 1371 552 JUMP ~outgoingValues: [] destination: B54 -> B59  <||@
  Comment 1376 block B3 null  <||@
  Comment 1376 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1376 40 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1383 42 r11|DWORD = MOVE input: int[-109036|0xfffffffffffe5614]  <||@
  Comment 1389 46 JUMP ~outgoingValues: [] destination: B3 -> B64  <||@
  Comment 1391 block B55 null  <||@
  Comment 1391 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1391 556 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1398 558 r11|DWORD = MOVE input: int[-68123|0xfffffffffffef5e5]  <||@
  Comment 1404 562 JUMP ~outgoingValues: [] destination: B55 -> B59  <||@
  Comment 1413 block B37 null  <||@
  Comment 1413 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1413 422 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1420 424 r11|DWORD = MOVE input: int[-64796|0xffffffffffff02e4]  <||@
  Comment 1426 428 JUMP ~outgoingValues: [] destination: B37 -> B59  <||@
  Comment 1431 block B16 null  <||@
  Comment 1431 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1431 224 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1438 226 r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7]  <||@
  Comment 1444 230 JUMP ~outgoingValues: [] destination: B16 -> B64  <||@
  Comment 1449 block B57 null  <||@
  Comment 1449 574 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1449 576 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 1456 578 r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5]  <||@
  Comment 1462 582 JUMP ~outgoingValues: [] destination: B57 -> B59  <||@
  Comment 1467 block B14 null  <||@
  Comment 1467 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1467 210 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1474 212 r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7]  <||@
  Comment 1480 216 JUMP ~outgoingValues: [] destination: B14 -> B64  <||@
  Comment 1485 block B61 null  <||@
  Comment 1485 612 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1485 614 r8|DWORD = MOVE input: int[-60187|0xffffffffffff14e5]  <||@
  Comment 1491 620 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1491 block B62 null  <||@
  Comment 1491 622 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1491 616 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1496 618 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1500 624 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 1507 626 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1518 628 DEOPT info [bci:46]  <||@
  Comment 1518 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1523 [r10:0, stack:32]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46, duringCall: false, rethrow: false]
              |0             |1                  |2          |3          |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:64|QWORD[.]  |rbx|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 1531 block B60 null  <||@
  Comment 1531 602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1531 604 r8|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5]  <||@
  Comment 1537 610 JUMP ~outgoingValues: [] destination: B60 -> B62  <||@
  Comment 1539 block B53 null  <||@
  Comment 1539 534 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1539 536 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1546 538 r11|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed]  <||@
  Comment 1552 542 JUMP ~outgoingValues: [] destination: B53 -> B59  <||@
  Comment 1557 block B56 null  <||@
  Comment 1557 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1557 566 r8|QWORD = MOVE input: long[3224|0xc98]  <||@
  Comment 1564 568 r11|DWORD = MOVE input: int[-73499|0xfffffffffffee0e5]  <||@
  Comment 1570 572 JUMP ~outgoingValues: [] destination: B56 -> B59  <||@
  Comment 1575 block B46 null  <||@
  Comment 1575 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1575 490 r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed]  <||@
  Comment 1581 492 JUMP ~outgoingValues: [] destination: B46 -> B52  <||@
  Comment 1591 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 1620 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 1632 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f8acf0bde80:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1647 {Stub<write_barrier_post-stack-only(Word)void>@0x7f8acf0bfa00:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1680 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1685 [rdx:0, rsi:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1715 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1720 [rdx:0, rsi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1755 [rdx:0, rsi:0, rdi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1785 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1790 [rax:0, rcx:0, r10:0, stack:32, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:64|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1798 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1798 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1804 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 1804 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
